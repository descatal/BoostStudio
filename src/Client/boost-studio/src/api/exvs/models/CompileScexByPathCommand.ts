/* tslint:disable */
/* eslint-disable */
/**
 * BoostStudio.Web | exvs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompileScexByPathCommand
 */
export interface CompileScexByPathCommand {
    /**
     * 
     * @type {string}
     * @memberof CompileScexByPathCommand
     */
    sourcePath: string;
    /**
     * 
     * @type {string}
     * @memberof CompileScexByPathCommand
     */
    destinationPath: string;
    /**
     * 
     * @type {string}
     * @memberof CompileScexByPathCommand
     */
    fileName?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof CompileScexByPathCommand
     */
    hotReload?: boolean;
}

/**
 * Check if a given object implements the CompileScexByPathCommand interface.
 */
export function instanceOfCompileScexByPathCommand(value: object): value is CompileScexByPathCommand {
    if (!('sourcePath' in value) || value['sourcePath'] === undefined) return false;
    if (!('destinationPath' in value) || value['destinationPath'] === undefined) return false;
    return true;
}

export function CompileScexByPathCommandFromJSON(json: any): CompileScexByPathCommand {
    return CompileScexByPathCommandFromJSONTyped(json, false);
}

export function CompileScexByPathCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompileScexByPathCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'sourcePath': json['sourcePath'],
        'destinationPath': json['destinationPath'],
        'fileName': json['fileName'] == null ? undefined : json['fileName'],
        'hotReload': json['hotReload'] == null ? undefined : json['hotReload'],
    };
}

export function CompileScexByPathCommandToJSON(value?: CompileScexByPathCommand | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'sourcePath': value['sourcePath'],
        'destinationPath': value['destinationPath'],
        'fileName': value['fileName'],
        'hotReload': value['hotReload'],
    };
}

