/* tslint:disable */
/* eslint-disable */
/**
 * BoostStudio.Web | exvs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PackPsarcByPathCommand
 */
export interface PackPsarcByPathCommand {
    /**
     * 
     * @type {string}
     * @memberof PackPsarcByPathCommand
     */
    sourcePath: string;
    /**
     * 
     * @type {string}
     * @memberof PackPsarcByPathCommand
     */
    destinationPath: string;
    /**
     * 
     * @type {string}
     * @memberof PackPsarcByPathCommand
     */
    filename?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PackPsarcByPathCommand
     */
    compressionType?: PackPsarcByPathCommandCompressionTypeEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PackPsarcByPathCommand
     */
    compressionLevel?: number | null;
}


/**
 * @export
 */
export const PackPsarcByPathCommandCompressionTypeEnum = {
    None: 'None',
    Zlib: 'Zlib',
    Lzma: 'Lzma',
    Null: 'null'
} as const;
export type PackPsarcByPathCommandCompressionTypeEnum = typeof PackPsarcByPathCommandCompressionTypeEnum[keyof typeof PackPsarcByPathCommandCompressionTypeEnum];


/**
 * Check if a given object implements the PackPsarcByPathCommand interface.
 */
export function instanceOfPackPsarcByPathCommand(value: object): value is PackPsarcByPathCommand {
    if (!('sourcePath' in value) || value['sourcePath'] === undefined) return false;
    if (!('destinationPath' in value) || value['destinationPath'] === undefined) return false;
    return true;
}

export function PackPsarcByPathCommandFromJSON(json: any): PackPsarcByPathCommand {
    return PackPsarcByPathCommandFromJSONTyped(json, false);
}

export function PackPsarcByPathCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackPsarcByPathCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'sourcePath': json['sourcePath'],
        'destinationPath': json['destinationPath'],
        'filename': json['filename'] == null ? undefined : json['filename'],
        'compressionType': json['compressionType'] == null ? undefined : json['compressionType'],
        'compressionLevel': json['compressionLevel'] == null ? undefined : json['compressionLevel'],
    };
}

export function PackPsarcByPathCommandToJSON(value?: PackPsarcByPathCommand | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'sourcePath': value['sourcePath'],
        'destinationPath': value['destinationPath'],
        'filename': value['filename'],
        'compressionType': value['compressionType'],
        'compressionLevel': value['compressionLevel'],
    };
}

