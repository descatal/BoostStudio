/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PatchesRouteImport } from './routes/patches/route'
import { Route as UnitsIndexImport } from './routes/units/index'
import { Route as PatchesIndexImport } from './routes/patches/index'
import { Route as UnitsScriptsImport } from './routes/units/scripts'
import { Route as UnitsAssetsImport } from './routes/units/assets'
import { Route as PatchesPatchIdImport } from './routes/patches/$patchId'
import { Route as UnitsInfoRouteImport } from './routes/units/info/route'
import { Route as UnitsUnitIdRouteImport } from './routes/units/$unitId/route'
import { Route as UnitsInfoIndexImport } from './routes/units/info/index'
import { Route as UnitsUnitIdIndexImport } from './routes/units/$unitId/index'
import { Route as UnitsInfoStatsImport } from './routes/units/info/stats'
import { Route as UnitsInfoProjectilesImport } from './routes/units/info/projectiles'
import { Route as UnitsInfoHitboxesImport } from './routes/units/info/hitboxes'
import { Route as UnitsInfoAmmoImport } from './routes/units/info/ammo'
import { Route as UnitsUnitIdScriptsImport } from './routes/units/$unitId/scripts'
import { Route as UnitsUnitIdAssetsImport } from './routes/units/$unitId/assets'
import { Route as UnitsUnitIdInfoRouteImport } from './routes/units/$unitId/info/route'
import { Route as UnitsUnitIdInfoIndexImport } from './routes/units/$unitId/info/index'
import { Route as UnitsUnitIdInfoStatsImport } from './routes/units/$unitId/info/stats'
import { Route as UnitsUnitIdInfoProjectilesImport } from './routes/units/$unitId/info/projectiles'
import { Route as UnitsUnitIdInfoHitboxesImport } from './routes/units/$unitId/info/hitboxes'
import { Route as UnitsUnitIdInfoAmmoImport } from './routes/units/$unitId/info/ammo'

// Create/Update Routes

const PatchesRouteRoute = PatchesRouteImport.update({
  id: '/patches',
  path: '/patches',
  getParentRoute: () => rootRoute,
} as any)

const UnitsIndexRoute = UnitsIndexImport.update({
  id: '/units/',
  path: '/units/',
  getParentRoute: () => rootRoute,
} as any)

const PatchesIndexRoute = PatchesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PatchesRouteRoute,
} as any)

const UnitsScriptsRoute = UnitsScriptsImport.update({
  id: '/units/scripts',
  path: '/units/scripts',
  getParentRoute: () => rootRoute,
} as any)

const UnitsAssetsRoute = UnitsAssetsImport.update({
  id: '/units/assets',
  path: '/units/assets',
  getParentRoute: () => rootRoute,
} as any)

const PatchesPatchIdRoute = PatchesPatchIdImport.update({
  id: '/$patchId',
  path: '/$patchId',
  getParentRoute: () => PatchesRouteRoute,
} as any)

const UnitsInfoRouteRoute = UnitsInfoRouteImport.update({
  id: '/units/info',
  path: '/units/info',
  getParentRoute: () => rootRoute,
} as any)

const UnitsUnitIdRouteRoute = UnitsUnitIdRouteImport.update({
  id: '/units/$unitId',
  path: '/units/$unitId',
  getParentRoute: () => rootRoute,
} as any)

const UnitsInfoIndexRoute = UnitsInfoIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UnitsInfoRouteRoute,
} as any)

const UnitsUnitIdIndexRoute = UnitsUnitIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UnitsUnitIdRouteRoute,
} as any)

const UnitsInfoStatsRoute = UnitsInfoStatsImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => UnitsInfoRouteRoute,
} as any)

const UnitsInfoProjectilesRoute = UnitsInfoProjectilesImport.update({
  id: '/projectiles',
  path: '/projectiles',
  getParentRoute: () => UnitsInfoRouteRoute,
} as any)

const UnitsInfoHitboxesRoute = UnitsInfoHitboxesImport.update({
  id: '/hitboxes',
  path: '/hitboxes',
  getParentRoute: () => UnitsInfoRouteRoute,
} as any)

const UnitsInfoAmmoRoute = UnitsInfoAmmoImport.update({
  id: '/ammo',
  path: '/ammo',
  getParentRoute: () => UnitsInfoRouteRoute,
} as any)

const UnitsUnitIdScriptsRoute = UnitsUnitIdScriptsImport.update({
  id: '/scripts',
  path: '/scripts',
  getParentRoute: () => UnitsUnitIdRouteRoute,
} as any)

const UnitsUnitIdAssetsRoute = UnitsUnitIdAssetsImport.update({
  id: '/assets',
  path: '/assets',
  getParentRoute: () => UnitsUnitIdRouteRoute,
} as any)

const UnitsUnitIdInfoRouteRoute = UnitsUnitIdInfoRouteImport.update({
  id: '/info',
  path: '/info',
  getParentRoute: () => UnitsUnitIdRouteRoute,
} as any)

const UnitsUnitIdInfoIndexRoute = UnitsUnitIdInfoIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UnitsUnitIdInfoRouteRoute,
} as any)

const UnitsUnitIdInfoStatsRoute = UnitsUnitIdInfoStatsImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => UnitsUnitIdInfoRouteRoute,
} as any)

const UnitsUnitIdInfoProjectilesRoute = UnitsUnitIdInfoProjectilesImport.update(
  {
    id: '/projectiles',
    path: '/projectiles',
    getParentRoute: () => UnitsUnitIdInfoRouteRoute,
  } as any,
)

const UnitsUnitIdInfoHitboxesRoute = UnitsUnitIdInfoHitboxesImport.update({
  id: '/hitboxes',
  path: '/hitboxes',
  getParentRoute: () => UnitsUnitIdInfoRouteRoute,
} as any)

const UnitsUnitIdInfoAmmoRoute = UnitsUnitIdInfoAmmoImport.update({
  id: '/ammo',
  path: '/ammo',
  getParentRoute: () => UnitsUnitIdInfoRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/patches': {
      id: '/patches'
      path: '/patches'
      fullPath: '/patches'
      preLoaderRoute: typeof PatchesRouteImport
      parentRoute: typeof rootRoute
    }
    '/units/$unitId': {
      id: '/units/$unitId'
      path: '/units/$unitId'
      fullPath: '/units/$unitId'
      preLoaderRoute: typeof UnitsUnitIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/units/info': {
      id: '/units/info'
      path: '/units/info'
      fullPath: '/units/info'
      preLoaderRoute: typeof UnitsInfoRouteImport
      parentRoute: typeof rootRoute
    }
    '/patches/$patchId': {
      id: '/patches/$patchId'
      path: '/$patchId'
      fullPath: '/patches/$patchId'
      preLoaderRoute: typeof PatchesPatchIdImport
      parentRoute: typeof PatchesRouteImport
    }
    '/units/assets': {
      id: '/units/assets'
      path: '/units/assets'
      fullPath: '/units/assets'
      preLoaderRoute: typeof UnitsAssetsImport
      parentRoute: typeof rootRoute
    }
    '/units/scripts': {
      id: '/units/scripts'
      path: '/units/scripts'
      fullPath: '/units/scripts'
      preLoaderRoute: typeof UnitsScriptsImport
      parentRoute: typeof rootRoute
    }
    '/patches/': {
      id: '/patches/'
      path: '/'
      fullPath: '/patches/'
      preLoaderRoute: typeof PatchesIndexImport
      parentRoute: typeof PatchesRouteImport
    }
    '/units/': {
      id: '/units/'
      path: '/units'
      fullPath: '/units'
      preLoaderRoute: typeof UnitsIndexImport
      parentRoute: typeof rootRoute
    }
    '/units/$unitId/info': {
      id: '/units/$unitId/info'
      path: '/info'
      fullPath: '/units/$unitId/info'
      preLoaderRoute: typeof UnitsUnitIdInfoRouteImport
      parentRoute: typeof UnitsUnitIdRouteImport
    }
    '/units/$unitId/assets': {
      id: '/units/$unitId/assets'
      path: '/assets'
      fullPath: '/units/$unitId/assets'
      preLoaderRoute: typeof UnitsUnitIdAssetsImport
      parentRoute: typeof UnitsUnitIdRouteImport
    }
    '/units/$unitId/scripts': {
      id: '/units/$unitId/scripts'
      path: '/scripts'
      fullPath: '/units/$unitId/scripts'
      preLoaderRoute: typeof UnitsUnitIdScriptsImport
      parentRoute: typeof UnitsUnitIdRouteImport
    }
    '/units/info/ammo': {
      id: '/units/info/ammo'
      path: '/ammo'
      fullPath: '/units/info/ammo'
      preLoaderRoute: typeof UnitsInfoAmmoImport
      parentRoute: typeof UnitsInfoRouteImport
    }
    '/units/info/hitboxes': {
      id: '/units/info/hitboxes'
      path: '/hitboxes'
      fullPath: '/units/info/hitboxes'
      preLoaderRoute: typeof UnitsInfoHitboxesImport
      parentRoute: typeof UnitsInfoRouteImport
    }
    '/units/info/projectiles': {
      id: '/units/info/projectiles'
      path: '/projectiles'
      fullPath: '/units/info/projectiles'
      preLoaderRoute: typeof UnitsInfoProjectilesImport
      parentRoute: typeof UnitsInfoRouteImport
    }
    '/units/info/stats': {
      id: '/units/info/stats'
      path: '/stats'
      fullPath: '/units/info/stats'
      preLoaderRoute: typeof UnitsInfoStatsImport
      parentRoute: typeof UnitsInfoRouteImport
    }
    '/units/$unitId/': {
      id: '/units/$unitId/'
      path: '/'
      fullPath: '/units/$unitId/'
      preLoaderRoute: typeof UnitsUnitIdIndexImport
      parentRoute: typeof UnitsUnitIdRouteImport
    }
    '/units/info/': {
      id: '/units/info/'
      path: '/'
      fullPath: '/units/info/'
      preLoaderRoute: typeof UnitsInfoIndexImport
      parentRoute: typeof UnitsInfoRouteImport
    }
    '/units/$unitId/info/ammo': {
      id: '/units/$unitId/info/ammo'
      path: '/ammo'
      fullPath: '/units/$unitId/info/ammo'
      preLoaderRoute: typeof UnitsUnitIdInfoAmmoImport
      parentRoute: typeof UnitsUnitIdInfoRouteImport
    }
    '/units/$unitId/info/hitboxes': {
      id: '/units/$unitId/info/hitboxes'
      path: '/hitboxes'
      fullPath: '/units/$unitId/info/hitboxes'
      preLoaderRoute: typeof UnitsUnitIdInfoHitboxesImport
      parentRoute: typeof UnitsUnitIdInfoRouteImport
    }
    '/units/$unitId/info/projectiles': {
      id: '/units/$unitId/info/projectiles'
      path: '/projectiles'
      fullPath: '/units/$unitId/info/projectiles'
      preLoaderRoute: typeof UnitsUnitIdInfoProjectilesImport
      parentRoute: typeof UnitsUnitIdInfoRouteImport
    }
    '/units/$unitId/info/stats': {
      id: '/units/$unitId/info/stats'
      path: '/stats'
      fullPath: '/units/$unitId/info/stats'
      preLoaderRoute: typeof UnitsUnitIdInfoStatsImport
      parentRoute: typeof UnitsUnitIdInfoRouteImport
    }
    '/units/$unitId/info/': {
      id: '/units/$unitId/info/'
      path: '/'
      fullPath: '/units/$unitId/info/'
      preLoaderRoute: typeof UnitsUnitIdInfoIndexImport
      parentRoute: typeof UnitsUnitIdInfoRouteImport
    }
  }
}

// Create and export the route tree

interface PatchesRouteRouteChildren {
  PatchesPatchIdRoute: typeof PatchesPatchIdRoute
  PatchesIndexRoute: typeof PatchesIndexRoute
}

const PatchesRouteRouteChildren: PatchesRouteRouteChildren = {
  PatchesPatchIdRoute: PatchesPatchIdRoute,
  PatchesIndexRoute: PatchesIndexRoute,
}

const PatchesRouteRouteWithChildren = PatchesRouteRoute._addFileChildren(
  PatchesRouteRouteChildren,
)

interface UnitsUnitIdInfoRouteRouteChildren {
  UnitsUnitIdInfoAmmoRoute: typeof UnitsUnitIdInfoAmmoRoute
  UnitsUnitIdInfoHitboxesRoute: typeof UnitsUnitIdInfoHitboxesRoute
  UnitsUnitIdInfoProjectilesRoute: typeof UnitsUnitIdInfoProjectilesRoute
  UnitsUnitIdInfoStatsRoute: typeof UnitsUnitIdInfoStatsRoute
  UnitsUnitIdInfoIndexRoute: typeof UnitsUnitIdInfoIndexRoute
}

const UnitsUnitIdInfoRouteRouteChildren: UnitsUnitIdInfoRouteRouteChildren = {
  UnitsUnitIdInfoAmmoRoute: UnitsUnitIdInfoAmmoRoute,
  UnitsUnitIdInfoHitboxesRoute: UnitsUnitIdInfoHitboxesRoute,
  UnitsUnitIdInfoProjectilesRoute: UnitsUnitIdInfoProjectilesRoute,
  UnitsUnitIdInfoStatsRoute: UnitsUnitIdInfoStatsRoute,
  UnitsUnitIdInfoIndexRoute: UnitsUnitIdInfoIndexRoute,
}

const UnitsUnitIdInfoRouteRouteWithChildren =
  UnitsUnitIdInfoRouteRoute._addFileChildren(UnitsUnitIdInfoRouteRouteChildren)

interface UnitsUnitIdRouteRouteChildren {
  UnitsUnitIdInfoRouteRoute: typeof UnitsUnitIdInfoRouteRouteWithChildren
  UnitsUnitIdAssetsRoute: typeof UnitsUnitIdAssetsRoute
  UnitsUnitIdScriptsRoute: typeof UnitsUnitIdScriptsRoute
  UnitsUnitIdIndexRoute: typeof UnitsUnitIdIndexRoute
}

const UnitsUnitIdRouteRouteChildren: UnitsUnitIdRouteRouteChildren = {
  UnitsUnitIdInfoRouteRoute: UnitsUnitIdInfoRouteRouteWithChildren,
  UnitsUnitIdAssetsRoute: UnitsUnitIdAssetsRoute,
  UnitsUnitIdScriptsRoute: UnitsUnitIdScriptsRoute,
  UnitsUnitIdIndexRoute: UnitsUnitIdIndexRoute,
}

const UnitsUnitIdRouteRouteWithChildren =
  UnitsUnitIdRouteRoute._addFileChildren(UnitsUnitIdRouteRouteChildren)

interface UnitsInfoRouteRouteChildren {
  UnitsInfoAmmoRoute: typeof UnitsInfoAmmoRoute
  UnitsInfoHitboxesRoute: typeof UnitsInfoHitboxesRoute
  UnitsInfoProjectilesRoute: typeof UnitsInfoProjectilesRoute
  UnitsInfoStatsRoute: typeof UnitsInfoStatsRoute
  UnitsInfoIndexRoute: typeof UnitsInfoIndexRoute
}

const UnitsInfoRouteRouteChildren: UnitsInfoRouteRouteChildren = {
  UnitsInfoAmmoRoute: UnitsInfoAmmoRoute,
  UnitsInfoHitboxesRoute: UnitsInfoHitboxesRoute,
  UnitsInfoProjectilesRoute: UnitsInfoProjectilesRoute,
  UnitsInfoStatsRoute: UnitsInfoStatsRoute,
  UnitsInfoIndexRoute: UnitsInfoIndexRoute,
}

const UnitsInfoRouteRouteWithChildren = UnitsInfoRouteRoute._addFileChildren(
  UnitsInfoRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/patches': typeof PatchesRouteRouteWithChildren
  '/units/$unitId': typeof UnitsUnitIdRouteRouteWithChildren
  '/units/info': typeof UnitsInfoRouteRouteWithChildren
  '/patches/$patchId': typeof PatchesPatchIdRoute
  '/units/assets': typeof UnitsAssetsRoute
  '/units/scripts': typeof UnitsScriptsRoute
  '/patches/': typeof PatchesIndexRoute
  '/units': typeof UnitsIndexRoute
  '/units/$unitId/info': typeof UnitsUnitIdInfoRouteRouteWithChildren
  '/units/$unitId/assets': typeof UnitsUnitIdAssetsRoute
  '/units/$unitId/scripts': typeof UnitsUnitIdScriptsRoute
  '/units/info/ammo': typeof UnitsInfoAmmoRoute
  '/units/info/hitboxes': typeof UnitsInfoHitboxesRoute
  '/units/info/projectiles': typeof UnitsInfoProjectilesRoute
  '/units/info/stats': typeof UnitsInfoStatsRoute
  '/units/$unitId/': typeof UnitsUnitIdIndexRoute
  '/units/info/': typeof UnitsInfoIndexRoute
  '/units/$unitId/info/ammo': typeof UnitsUnitIdInfoAmmoRoute
  '/units/$unitId/info/hitboxes': typeof UnitsUnitIdInfoHitboxesRoute
  '/units/$unitId/info/projectiles': typeof UnitsUnitIdInfoProjectilesRoute
  '/units/$unitId/info/stats': typeof UnitsUnitIdInfoStatsRoute
  '/units/$unitId/info/': typeof UnitsUnitIdInfoIndexRoute
}

export interface FileRoutesByTo {
  '/patches/$patchId': typeof PatchesPatchIdRoute
  '/units/assets': typeof UnitsAssetsRoute
  '/units/scripts': typeof UnitsScriptsRoute
  '/patches': typeof PatchesIndexRoute
  '/units': typeof UnitsIndexRoute
  '/units/$unitId/assets': typeof UnitsUnitIdAssetsRoute
  '/units/$unitId/scripts': typeof UnitsUnitIdScriptsRoute
  '/units/info/ammo': typeof UnitsInfoAmmoRoute
  '/units/info/hitboxes': typeof UnitsInfoHitboxesRoute
  '/units/info/projectiles': typeof UnitsInfoProjectilesRoute
  '/units/info/stats': typeof UnitsInfoStatsRoute
  '/units/$unitId': typeof UnitsUnitIdIndexRoute
  '/units/info': typeof UnitsInfoIndexRoute
  '/units/$unitId/info/ammo': typeof UnitsUnitIdInfoAmmoRoute
  '/units/$unitId/info/hitboxes': typeof UnitsUnitIdInfoHitboxesRoute
  '/units/$unitId/info/projectiles': typeof UnitsUnitIdInfoProjectilesRoute
  '/units/$unitId/info/stats': typeof UnitsUnitIdInfoStatsRoute
  '/units/$unitId/info': typeof UnitsUnitIdInfoIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/patches': typeof PatchesRouteRouteWithChildren
  '/units/$unitId': typeof UnitsUnitIdRouteRouteWithChildren
  '/units/info': typeof UnitsInfoRouteRouteWithChildren
  '/patches/$patchId': typeof PatchesPatchIdRoute
  '/units/assets': typeof UnitsAssetsRoute
  '/units/scripts': typeof UnitsScriptsRoute
  '/patches/': typeof PatchesIndexRoute
  '/units/': typeof UnitsIndexRoute
  '/units/$unitId/info': typeof UnitsUnitIdInfoRouteRouteWithChildren
  '/units/$unitId/assets': typeof UnitsUnitIdAssetsRoute
  '/units/$unitId/scripts': typeof UnitsUnitIdScriptsRoute
  '/units/info/ammo': typeof UnitsInfoAmmoRoute
  '/units/info/hitboxes': typeof UnitsInfoHitboxesRoute
  '/units/info/projectiles': typeof UnitsInfoProjectilesRoute
  '/units/info/stats': typeof UnitsInfoStatsRoute
  '/units/$unitId/': typeof UnitsUnitIdIndexRoute
  '/units/info/': typeof UnitsInfoIndexRoute
  '/units/$unitId/info/ammo': typeof UnitsUnitIdInfoAmmoRoute
  '/units/$unitId/info/hitboxes': typeof UnitsUnitIdInfoHitboxesRoute
  '/units/$unitId/info/projectiles': typeof UnitsUnitIdInfoProjectilesRoute
  '/units/$unitId/info/stats': typeof UnitsUnitIdInfoStatsRoute
  '/units/$unitId/info/': typeof UnitsUnitIdInfoIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/patches'
    | '/units/$unitId'
    | '/units/info'
    | '/patches/$patchId'
    | '/units/assets'
    | '/units/scripts'
    | '/patches/'
    | '/units'
    | '/units/$unitId/info'
    | '/units/$unitId/assets'
    | '/units/$unitId/scripts'
    | '/units/info/ammo'
    | '/units/info/hitboxes'
    | '/units/info/projectiles'
    | '/units/info/stats'
    | '/units/$unitId/'
    | '/units/info/'
    | '/units/$unitId/info/ammo'
    | '/units/$unitId/info/hitboxes'
    | '/units/$unitId/info/projectiles'
    | '/units/$unitId/info/stats'
    | '/units/$unitId/info/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/patches/$patchId'
    | '/units/assets'
    | '/units/scripts'
    | '/patches'
    | '/units'
    | '/units/$unitId/assets'
    | '/units/$unitId/scripts'
    | '/units/info/ammo'
    | '/units/info/hitboxes'
    | '/units/info/projectiles'
    | '/units/info/stats'
    | '/units/$unitId'
    | '/units/info'
    | '/units/$unitId/info/ammo'
    | '/units/$unitId/info/hitboxes'
    | '/units/$unitId/info/projectiles'
    | '/units/$unitId/info/stats'
    | '/units/$unitId/info'
  id:
    | '__root__'
    | '/patches'
    | '/units/$unitId'
    | '/units/info'
    | '/patches/$patchId'
    | '/units/assets'
    | '/units/scripts'
    | '/patches/'
    | '/units/'
    | '/units/$unitId/info'
    | '/units/$unitId/assets'
    | '/units/$unitId/scripts'
    | '/units/info/ammo'
    | '/units/info/hitboxes'
    | '/units/info/projectiles'
    | '/units/info/stats'
    | '/units/$unitId/'
    | '/units/info/'
    | '/units/$unitId/info/ammo'
    | '/units/$unitId/info/hitboxes'
    | '/units/$unitId/info/projectiles'
    | '/units/$unitId/info/stats'
    | '/units/$unitId/info/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PatchesRouteRoute: typeof PatchesRouteRouteWithChildren
  UnitsUnitIdRouteRoute: typeof UnitsUnitIdRouteRouteWithChildren
  UnitsInfoRouteRoute: typeof UnitsInfoRouteRouteWithChildren
  UnitsAssetsRoute: typeof UnitsAssetsRoute
  UnitsScriptsRoute: typeof UnitsScriptsRoute
  UnitsIndexRoute: typeof UnitsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  PatchesRouteRoute: PatchesRouteRouteWithChildren,
  UnitsUnitIdRouteRoute: UnitsUnitIdRouteRouteWithChildren,
  UnitsInfoRouteRoute: UnitsInfoRouteRouteWithChildren,
  UnitsAssetsRoute: UnitsAssetsRoute,
  UnitsScriptsRoute: UnitsScriptsRoute,
  UnitsIndexRoute: UnitsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/patches",
        "/units/$unitId",
        "/units/info",
        "/units/assets",
        "/units/scripts",
        "/units/"
      ]
    },
    "/patches": {
      "filePath": "patches/route.tsx",
      "children": [
        "/patches/$patchId",
        "/patches/"
      ]
    },
    "/units/$unitId": {
      "filePath": "units/$unitId/route.tsx",
      "children": [
        "/units/$unitId/info",
        "/units/$unitId/assets",
        "/units/$unitId/scripts",
        "/units/$unitId/"
      ]
    },
    "/units/info": {
      "filePath": "units/info/route.tsx",
      "children": [
        "/units/info/ammo",
        "/units/info/hitboxes",
        "/units/info/projectiles",
        "/units/info/stats",
        "/units/info/"
      ]
    },
    "/patches/$patchId": {
      "filePath": "patches/$patchId.tsx",
      "parent": "/patches"
    },
    "/units/assets": {
      "filePath": "units/assets.tsx"
    },
    "/units/scripts": {
      "filePath": "units/scripts.tsx"
    },
    "/patches/": {
      "filePath": "patches/index.tsx",
      "parent": "/patches"
    },
    "/units/": {
      "filePath": "units/index.tsx"
    },
    "/units/$unitId/info": {
      "filePath": "units/$unitId/info/route.tsx",
      "parent": "/units/$unitId",
      "children": [
        "/units/$unitId/info/ammo",
        "/units/$unitId/info/hitboxes",
        "/units/$unitId/info/projectiles",
        "/units/$unitId/info/stats",
        "/units/$unitId/info/"
      ]
    },
    "/units/$unitId/assets": {
      "filePath": "units/$unitId/assets.tsx",
      "parent": "/units/$unitId"
    },
    "/units/$unitId/scripts": {
      "filePath": "units/$unitId/scripts.tsx",
      "parent": "/units/$unitId"
    },
    "/units/info/ammo": {
      "filePath": "units/info/ammo.tsx",
      "parent": "/units/info"
    },
    "/units/info/hitboxes": {
      "filePath": "units/info/hitboxes.tsx",
      "parent": "/units/info"
    },
    "/units/info/projectiles": {
      "filePath": "units/info/projectiles.tsx",
      "parent": "/units/info"
    },
    "/units/info/stats": {
      "filePath": "units/info/stats.tsx",
      "parent": "/units/info"
    },
    "/units/$unitId/": {
      "filePath": "units/$unitId/index.tsx",
      "parent": "/units/$unitId"
    },
    "/units/info/": {
      "filePath": "units/info/index.tsx",
      "parent": "/units/info"
    },
    "/units/$unitId/info/ammo": {
      "filePath": "units/$unitId/info/ammo.tsx",
      "parent": "/units/$unitId/info"
    },
    "/units/$unitId/info/hitboxes": {
      "filePath": "units/$unitId/info/hitboxes.tsx",
      "parent": "/units/$unitId/info"
    },
    "/units/$unitId/info/projectiles": {
      "filePath": "units/$unitId/info/projectiles.tsx",
      "parent": "/units/$unitId/info"
    },
    "/units/$unitId/info/stats": {
      "filePath": "units/$unitId/info/stats.tsx",
      "parent": "/units/$unitId/info"
    },
    "/units/$unitId/info/": {
      "filePath": "units/$unitId/info/index.tsx",
      "parent": "/units/$unitId/info"
    }
  }
}
ROUTE_MANIFEST_END */
