// This file is auto-generated by @hey-api/openapi-ts

import {
  type Client,
  formDataBodySerializer,
  type Options as Options2,
  type TDataShape,
} from "./client";
import { client } from "./client.gen";
import type {
  DeleteApiAmmoByHashData,
  DeleteApiAmmoByHashResponses,
  DeleteApiAssetsByHashData,
  DeleteApiAssetsByHashResponses,
  DeleteApiConfigsByKeyData,
  DeleteApiConfigsByKeyResponses,
  DeleteApiHitboxesByHashData,
  DeleteApiHitboxesByHashResponses,
  DeleteApiPatchFilesByIdData,
  DeleteApiPatchFilesByIdResponses,
  DeleteApiProjectilesByHashData,
  DeleteApiProjectilesByHashResponses,
  DeleteApiStatsByIdData,
  DeleteApiStatsByIdResponses,
  DeleteApiUnitsByUnitIdPlayableCharacterData,
  DeleteApiUnitsByUnitIdPlayableCharacterResponses,
  DeleteApiUnitStatsAmmoSlotByIdData,
  DeleteApiUnitStatsAmmoSlotByIdResponses,
  GetApiAmmoByHashData,
  GetApiAmmoByHashResponses,
  GetApiAmmoData,
  GetApiAmmoResponses,
  GetApiAssetsByHashData,
  GetApiAssetsByHashResponses,
  GetApiAssetsData,
  GetApiAssetsResponses,
  GetApiConfigsByKeyData,
  GetApiConfigsByKeyResponses,
  GetApiConfigsData,
  GetApiConfigsResponses,
  GetApiFhmPackPathData,
  GetApiFhmPackPathResponses,
  GetApiFhmUnpackPathData,
  GetApiFhmUnpackPathResponses,
  GetApiHitboxesByHashData,
  GetApiHitboxesByHashResponses,
  GetApiHitboxesData,
  GetApiHitboxesResponses,
  GetApiHitboxGroupsData,
  GetApiHitboxGroupsHashByHashData,
  GetApiHitboxGroupsHashByHashResponses,
  GetApiHitboxGroupsResponses,
  GetApiHitboxGroupsUnitIdByUnitIdData,
  GetApiHitboxGroupsUnitIdByUnitIdResponses,
  GetApiPatchFilesByIdData,
  GetApiPatchFilesByIdResponses,
  GetApiPatchFilesData,
  GetApiPatchFilesResponses,
  GetApiPatchFilesSummaryData,
  GetApiPatchFilesSummaryResponses,
  GetApiProjectilesByHashData,
  GetApiProjectilesByHashResponses,
  GetApiProjectilesData,
  GetApiProjectilesResponses,
  GetApiScexDecompiledByUnitIdData,
  GetApiScexDecompiledByUnitIdResponses,
  GetApiSeriesData,
  GetApiSeriesResponses,
  GetApiSeriesUnitsData,
  GetApiSeriesUnitsResponses,
  GetApiStatsByIdData,
  GetApiStatsByIdResponses,
  GetApiStatsData,
  GetApiStatsResponses,
  GetApiTblByIdData,
  GetApiTblByIdResponses,
  GetApiTblDeserializePathData,
  GetApiTblDeserializePathResponses,
  GetApiTblSerializePathData,
  GetApiTblSerializePathResponses,
  GetApiUnitProjectilesByUnitIdData,
  GetApiUnitProjectilesByUnitIdResponses,
  GetApiUnitProjectilesData,
  GetApiUnitProjectilesResponses,
  GetApiUnitsByUnitIdData,
  GetApiUnitsByUnitIdPlayableCharactersData,
  GetApiUnitsByUnitIdPlayableCharactersResponses,
  GetApiUnitsByUnitIdResponses,
  GetApiUnitsData,
  GetApiUnitsResponses,
  GetApiUnitStatsAmmoSlotByUnitIdData,
  GetApiUnitStatsAmmoSlotByUnitIdResponses,
  GetApiUnitStatsByUnitIdData,
  GetApiUnitStatsByUnitIdResponses,
  GetApiUnitStatsData,
  GetApiUnitStatsResponses,
  PostApiAmmoByHashData,
  PostApiAmmoByHashResponses,
  PostApiAmmoData,
  PostApiAmmoExportData,
  PostApiAmmoExportPathData,
  PostApiAmmoExportPathResponses,
  PostApiAmmoExportResponses,
  PostApiAmmoImportData,
  PostApiAmmoImportResponses,
  PostApiAmmoResponses,
  PostApiAssetsByHashData,
  PostApiAssetsByHashResponses,
  PostApiAssetsData,
  PostApiAssetsImportData,
  PostApiAssetsImportResponses,
  PostApiAssetsResponses,
  PostApiConfigsData,
  PostApiConfigsResponses,
  PostApiDebugData,
  PostApiDebugResponses,
  PostApiFhmPackAssetData,
  PostApiFhmPackAssetResponses,
  PostApiFhmPackData,
  PostApiFhmPackResponses,
  PostApiFhmUnpackAssetData,
  PostApiFhmUnpackAssetResponses,
  PostApiFhmUnpackData,
  PostApiFhmUnpackResponses,
  PostApiHitboxesByHashData,
  PostApiHitboxesByHashResponses,
  PostApiHitboxesData,
  PostApiHitboxesResponses,
  PostApiHitboxGroupsByHashData,
  PostApiHitboxGroupsByHashResponses,
  PostApiHitboxGroupsData,
  PostApiHitboxGroupsExportData,
  PostApiHitboxGroupsExportPathData,
  PostApiHitboxGroupsExportPathResponses,
  PostApiHitboxGroupsExportResponses,
  PostApiHitboxGroupsImportData,
  PostApiHitboxGroupsImportPathData,
  PostApiHitboxGroupsImportPathResponses,
  PostApiHitboxGroupsImportResponses,
  PostApiHitboxGroupsResponses,
  PostApiNdp3Data,
  PostApiNdp3JsonData,
  PostApiNdp3JsonResponses,
  PostApiNdp3Responses,
  PostApiPatchFilesByIdData,
  PostApiPatchFilesByIdResponses,
  PostApiPatchFilesData,
  PostApiPatchFilesResizeData,
  PostApiPatchFilesResizeResponses,
  PostApiPatchFilesResponses,
  PostApiProjectilesByHashData,
  PostApiProjectilesByHashResponses,
  PostApiProjectilesData,
  PostApiProjectilesResponses,
  PostApiPsarcPackPatchFilesData,
  PostApiPsarcPackPatchFilesResponses,
  PostApiPsarcPackPathData,
  PostApiPsarcPackPathResponses,
  PostApiPsarcUnpackPatchFilesData,
  PostApiPsarcUnpackPatchFilesResponses,
  PostApiPsarcUnpackPathData,
  PostApiPsarcUnpackPathResponses,
  PostApiScexCompilePathData,
  PostApiScexCompilePathResponses,
  PostApiScexCompileUnitsData,
  PostApiScexCompileUnitsResponses,
  PostApiScexDecompilePathData,
  PostApiScexDecompilePathResponses,
  PostApiScexDecompileUnitsData,
  PostApiScexDecompileUnitsResponses,
  PostApiScexHotReloadPathData,
  PostApiScexHotReloadPathResponses,
  PostApiSeriesData,
  PostApiSeriesExportData,
  PostApiSeriesExportResponses,
  PostApiSeriesImportData,
  PostApiSeriesImportResponses,
  PostApiSeriesResponses,
  PostApiStatsByIdData,
  PostApiStatsByIdResponses,
  PostApiStatsData,
  PostApiStatsResponses,
  PostApiTblDeserializeData,
  PostApiTblDeserializeResponses,
  PostApiTblExportData,
  PostApiTblExportResponses,
  PostApiTblImportData,
  PostApiTblImportResponses,
  PostApiTblSerializeData,
  PostApiTblSerializeResponses,
  PostApiUnitProjectilesExportData,
  PostApiUnitProjectilesExportPathData,
  PostApiUnitProjectilesExportPathResponses,
  PostApiUnitProjectilesExportResponses,
  PostApiUnitProjectilesImportData,
  PostApiUnitProjectilesImportPathData,
  PostApiUnitProjectilesImportPathResponses,
  PostApiUnitProjectilesImportResponses,
  PostApiUnitsBulkData,
  PostApiUnitsBulkResponses,
  PostApiUnitsByUnitIdData,
  PostApiUnitsByUnitIdPlayableCharacterData,
  PostApiUnitsByUnitIdPlayableCharacterResponses,
  PostApiUnitsByUnitIdResponses,
  PostApiUnitsData,
  PostApiUnitsPlayableCharactersExportData,
  PostApiUnitsPlayableCharactersExportResponses,
  PostApiUnitsPlayableCharactersImportData,
  PostApiUnitsPlayableCharactersImportResponses,
  PostApiUnitsResponses,
  PostApiUnitStatsAmmoSlotByIdData,
  PostApiUnitStatsAmmoSlotByIdResponses,
  PostApiUnitStatsAmmoSlotData,
  PostApiUnitStatsAmmoSlotResponses,
  PostApiUnitStatsExportData,
  PostApiUnitStatsExportPathData,
  PostApiUnitStatsExportPathResponses,
  PostApiUnitStatsExportResponses,
  PostApiUnitStatsImportData,
  PostApiUnitStatsImportResponses,
} from "./types.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = Options2<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

export const postApiDebug = <ThrowOnError extends boolean = false>(
  options: Options<PostApiDebugData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiDebugResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/debug",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiUnits = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiUnitsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiUnitsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/units",
    ...options,
  });
};

export const postApiUnits = <ThrowOnError extends boolean = false>(
  options: Options<PostApiUnitsData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/units",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiUnitsByUnitId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiUnitsByUnitIdData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiUnitsByUnitIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/units/{unitId}",
    ...options,
  });
};

export const postApiUnitsByUnitId = <ThrowOnError extends boolean = false>(
  options: Options<PostApiUnitsByUnitIdData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitsByUnitIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/units/{unitId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiUnitsByUnitIdPlayableCharacters = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiUnitsByUnitIdPlayableCharactersData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiUnitsByUnitIdPlayableCharactersResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/units/{unitId}/playable-characters",
    ...options,
  });
};

export const postApiUnitsBulk = <ThrowOnError extends boolean = false>(
  options: Options<PostApiUnitsBulkData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitsBulkResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/units/bulk",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const deleteApiUnitsByUnitIdPlayableCharacter = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteApiUnitsByUnitIdPlayableCharacterData, ThrowOnError>,
) => {
  return (options.client ?? client).delete<
    DeleteApiUnitsByUnitIdPlayableCharacterResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/units/{unitId}/playable-character",
    ...options,
  });
};

export const postApiUnitsByUnitIdPlayableCharacter = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiUnitsByUnitIdPlayableCharacterData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitsByUnitIdPlayableCharacterResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/units/{unitId}/playable-character",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiUnitsPlayableCharactersImport = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiUnitsPlayableCharactersImportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitsPlayableCharactersImportResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/units/playable-characters/import",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiUnitsPlayableCharactersExport = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiUnitsPlayableCharactersExportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitsPlayableCharactersExportResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/units/playable-characters/export",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiPatchFiles = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiPatchFilesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiPatchFilesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/patch-files",
    ...options,
  });
};

export const postApiPatchFiles = <ThrowOnError extends boolean = false>(
  options: Options<PostApiPatchFilesData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiPatchFilesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/patch-files",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiPatchFilesSummary = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiPatchFilesSummaryData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiPatchFilesSummaryResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/patch-files/summary",
    ...options,
  });
};

export const deleteApiPatchFilesById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiPatchFilesByIdData, ThrowOnError>,
) => {
  return (options.client ?? client).delete<
    DeleteApiPatchFilesByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/patch-files/{id}",
    ...options,
  });
};

export const getApiPatchFilesById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiPatchFilesByIdData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiPatchFilesByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/patch-files/{id}",
    ...options,
  });
};

export const postApiPatchFilesById = <ThrowOnError extends boolean = false>(
  options: Options<PostApiPatchFilesByIdData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiPatchFilesByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/patch-files/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiPatchFilesResize = <ThrowOnError extends boolean = false>(
  options: Options<PostApiPatchFilesResizeData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiPatchFilesResizeResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/patch-files/resize",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiTblDeserializePath = <ThrowOnError extends boolean = false>(
  options: Options<GetApiTblDeserializePathData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiTblDeserializePathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/tbl/deserialize-path",
    ...options,
  });
};

export const postApiTblDeserialize = <ThrowOnError extends boolean = false>(
  options: Options<PostApiTblDeserializeData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiTblDeserializeResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/tbl/deserialize",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const getApiTblSerializePath = <ThrowOnError extends boolean = false>(
  options: Options<GetApiTblSerializePathData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiTblSerializePathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/tbl/serialize-path",
    ...options,
  });
};

export const postApiTblSerialize = <ThrowOnError extends boolean = false>(
  options: Options<PostApiTblSerializeData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiTblSerializeResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/tbl/serialize",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiTblById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiTblByIdData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiTblByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/tbl/{id}",
    ...options,
  });
};

export const postApiTblImport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiTblImportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiTblImportResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/tbl/import",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiTblExport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiTblExportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiTblExportResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/tbl/export",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiStats = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiStatsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiStatsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/stats",
    ...options,
  });
};

export const postApiStats = <ThrowOnError extends boolean = false>(
  options: Options<PostApiStatsData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiStatsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/stats",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const deleteApiStatsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiStatsByIdData, ThrowOnError>,
) => {
  return (options.client ?? client).delete<
    DeleteApiStatsByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/stats/{id}",
    ...options,
  });
};

export const getApiStatsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiStatsByIdData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiStatsByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/stats/{id}",
    ...options,
  });
};

export const postApiStatsById = <ThrowOnError extends boolean = false>(
  options: Options<PostApiStatsByIdData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiStatsByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/stats/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiUnitStats = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiUnitStatsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiUnitStatsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-stats",
    ...options,
  });
};

export const getApiUnitStatsByUnitId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiUnitStatsByUnitIdData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiUnitStatsByUnitIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-stats/{unitId}",
    ...options,
  });
};

export const postApiUnitStatsImport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiUnitStatsImportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitStatsImportResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/unit-stats/import",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiUnitStatsExport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiUnitStatsExportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitStatsExportResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-stats/export",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiUnitStatsExportPath = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiUnitStatsExportPathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitStatsExportPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-stats/export/path",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiUnitStatsAmmoSlotByUnitId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiUnitStatsAmmoSlotByUnitIdData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiUnitStatsAmmoSlotByUnitIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-stats/ammo-slot/{unitId}",
    ...options,
  });
};

export const postApiUnitStatsAmmoSlot = <ThrowOnError extends boolean = false>(
  options: Options<PostApiUnitStatsAmmoSlotData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitStatsAmmoSlotResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-stats/ammo-slot",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const deleteApiUnitStatsAmmoSlotById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteApiUnitStatsAmmoSlotByIdData, ThrowOnError>,
) => {
  return (options.client ?? client).delete<
    DeleteApiUnitStatsAmmoSlotByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-stats/ammo-slot/{id}",
    ...options,
  });
};

export const postApiUnitStatsAmmoSlotById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiUnitStatsAmmoSlotByIdData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitStatsAmmoSlotByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-stats/ammo-slot/{id}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiSeries = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiSeriesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiSeriesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/series",
    ...options,
  });
};

export const postApiSeries = <ThrowOnError extends boolean = false>(
  options: Options<PostApiSeriesData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiSeriesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/series",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiSeriesUnits = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiSeriesUnitsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiSeriesUnitsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/series/units",
    ...options,
  });
};

export const postApiSeriesImport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiSeriesImportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiSeriesImportResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/series/import",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiSeriesExport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiSeriesExportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiSeriesExportResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/series/export",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiScexDecompiledByUnitId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiScexDecompiledByUnitIdData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiScexDecompiledByUnitIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/scex/decompiled/{unitId}",
    ...options,
  });
};

export const postApiScexCompilePath = <ThrowOnError extends boolean = false>(
  options: Options<PostApiScexCompilePathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiScexCompilePathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/scex/compile/path",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiScexDecompilePath = <ThrowOnError extends boolean = false>(
  options: Options<PostApiScexDecompilePathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiScexDecompilePathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/scex/decompile/path",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiScexHotReloadPath = <ThrowOnError extends boolean = false>(
  options: Options<PostApiScexHotReloadPathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiScexHotReloadPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/scex/hot-reload/path",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiScexCompileUnits = <ThrowOnError extends boolean = false>(
  options: Options<PostApiScexCompileUnitsData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiScexCompileUnitsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/scex/compile/units",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiScexDecompileUnits = <ThrowOnError extends boolean = false>(
  options: Options<PostApiScexDecompileUnitsData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiScexDecompileUnitsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/scex/decompile/units",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiPsarcPackPath = <ThrowOnError extends boolean = false>(
  options: Options<PostApiPsarcPackPathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiPsarcPackPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/psarc/pack/path",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiPsarcUnpackPath = <ThrowOnError extends boolean = false>(
  options: Options<PostApiPsarcUnpackPathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiPsarcUnpackPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/psarc/unpack/path",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiPsarcPackPatchFiles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiPsarcPackPatchFilesData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiPsarcPackPatchFilesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/psarc/pack/patch-files",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiPsarcUnpackPatchFiles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiPsarcUnpackPatchFilesData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiPsarcUnpackPatchFilesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/psarc/unpack/patch-files",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiProjectiles = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiProjectilesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiProjectilesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/projectiles",
    ...options,
  });
};

export const postApiProjectiles = <ThrowOnError extends boolean = false>(
  options: Options<PostApiProjectilesData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiProjectilesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/projectiles",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const deleteApiProjectilesByHash = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteApiProjectilesByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).delete<
    DeleteApiProjectilesByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/projectiles/{hash}",
    ...options,
  });
};

export const getApiProjectilesByHash = <ThrowOnError extends boolean = false>(
  options: Options<GetApiProjectilesByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiProjectilesByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/projectiles/{hash}",
    ...options,
  });
};

export const postApiProjectilesByHash = <ThrowOnError extends boolean = false>(
  options: Options<PostApiProjectilesByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiProjectilesByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/projectiles/{hash}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiUnitProjectiles = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiUnitProjectilesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiUnitProjectilesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-projectiles",
    ...options,
  });
};

export const getApiUnitProjectilesByUnitId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiUnitProjectilesByUnitIdData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiUnitProjectilesByUnitIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-projectiles/{unitId}",
    ...options,
  });
};

export const postApiUnitProjectilesImport = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiUnitProjectilesImportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitProjectilesImportResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/unit-projectiles/import",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiUnitProjectilesImportPath = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiUnitProjectilesImportPathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitProjectilesImportPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-projectiles/import/path",
    ...options,
  });
};

export const postApiUnitProjectilesExport = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiUnitProjectilesExportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitProjectilesExportResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-projectiles/export",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiUnitProjectilesExportPath = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiUnitProjectilesExportPathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiUnitProjectilesExportPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/unit-projectiles/export/path",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiNdp3 = <ThrowOnError extends boolean = false>(
  options: Options<PostApiNdp3Data, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiNdp3Responses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/ndp3",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiNdp3Json = <ThrowOnError extends boolean = false>(
  options: Options<PostApiNdp3JsonData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiNdp3JsonResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/ndp3/json",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const getApiHitboxes = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiHitboxesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiHitboxesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitboxes",
    ...options,
  });
};

export const postApiHitboxes = <ThrowOnError extends boolean = false>(
  options: Options<PostApiHitboxesData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiHitboxesResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitboxes",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const deleteApiHitboxesByHash = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiHitboxesByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).delete<
    DeleteApiHitboxesByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitboxes/{hash}",
    ...options,
  });
};

export const getApiHitboxesByHash = <ThrowOnError extends boolean = false>(
  options: Options<GetApiHitboxesByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiHitboxesByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitboxes/{hash}",
    ...options,
  });
};

export const postApiHitboxesByHash = <ThrowOnError extends boolean = false>(
  options: Options<PostApiHitboxesByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiHitboxesByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitboxes/{hash}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiHitboxGroups = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiHitboxGroupsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiHitboxGroupsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitbox-groups",
    ...options,
  });
};

export const postApiHitboxGroups = <ThrowOnError extends boolean = false>(
  options: Options<PostApiHitboxGroupsData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiHitboxGroupsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitbox-groups",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiHitboxGroupsHashByHash = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiHitboxGroupsHashByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiHitboxGroupsHashByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitbox-groups/hash/{hash}",
    ...options,
  });
};

export const getApiHitboxGroupsUnitIdByUnitId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiHitboxGroupsUnitIdByUnitIdData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiHitboxGroupsUnitIdByUnitIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitbox-groups/unitId/{unitId}",
    ...options,
  });
};

export const postApiHitboxGroupsByHash = <ThrowOnError extends boolean = false>(
  options: Options<PostApiHitboxGroupsByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiHitboxGroupsByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitbox-groups/{hash}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiHitboxGroupsImport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiHitboxGroupsImportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiHitboxGroupsImportResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/hitbox-groups/import",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiHitboxGroupsImportPath = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiHitboxGroupsImportPathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiHitboxGroupsImportPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitbox-groups/import/path",
    ...options,
  });
};

export const postApiHitboxGroupsExport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiHitboxGroupsExportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiHitboxGroupsExportResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitbox-groups/export",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiHitboxGroupsExportPath = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiHitboxGroupsExportPathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiHitboxGroupsExportPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/hitbox-groups/export/path",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiFhmPackPath = <ThrowOnError extends boolean = false>(
  options: Options<GetApiFhmPackPathData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiFhmPackPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/fhm/pack-path",
    ...options,
  });
};

export const getApiFhmUnpackPath = <ThrowOnError extends boolean = false>(
  options: Options<GetApiFhmUnpackPathData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiFhmUnpackPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/fhm/unpack-path",
    ...options,
  });
};

export const postApiFhmPack = <ThrowOnError extends boolean = false>(
  options: Options<PostApiFhmPackData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiFhmPackResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/fhm/pack",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiFhmUnpack = <ThrowOnError extends boolean = false>(
  options: Options<PostApiFhmUnpackData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiFhmUnpackResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/fhm/unpack",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiFhmPackAsset = <ThrowOnError extends boolean = false>(
  options: Options<PostApiFhmPackAssetData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiFhmPackAssetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/fhm/pack/asset",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiFhmUnpackAsset = <ThrowOnError extends boolean = false>(
  options: Options<PostApiFhmUnpackAssetData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiFhmUnpackAssetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/fhm/unpack/asset",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const getApiConfigs = <ThrowOnError extends boolean = false>(
  options: Options<GetApiConfigsData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiConfigsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/configs",
    ...options,
  });
};

export const postApiConfigs = <ThrowOnError extends boolean = false>(
  options: Options<PostApiConfigsData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiConfigsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/configs",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const deleteApiConfigsByKey = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiConfigsByKeyData, ThrowOnError>,
) => {
  return (options.client ?? client).delete<
    DeleteApiConfigsByKeyResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/configs/{key}",
    ...options,
  });
};

export const getApiConfigsByKey = <ThrowOnError extends boolean = false>(
  options: Options<GetApiConfigsByKeyData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiConfigsByKeyResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/configs/{key}",
    ...options,
  });
};

export const getApiAssets = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiAssetsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiAssetsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/assets",
    ...options,
  });
};

export const postApiAssets = <ThrowOnError extends boolean = false>(
  options: Options<PostApiAssetsData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiAssetsResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/assets",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const deleteApiAssetsByHash = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiAssetsByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).delete<
    DeleteApiAssetsByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/assets/{hash}",
    ...options,
  });
};

export const getApiAssetsByHash = <ThrowOnError extends boolean = false>(
  options: Options<GetApiAssetsByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiAssetsByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/assets/{hash}",
    ...options,
  });
};

export const postApiAssetsByHash = <ThrowOnError extends boolean = false>(
  options: Options<PostApiAssetsByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiAssetsByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/assets/{hash}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiAssetsImport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiAssetsImportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiAssetsImportResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/assets/import",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const getApiAmmo = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiAmmoData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiAmmoResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/ammo",
    ...options,
  });
};

export const postApiAmmo = <ThrowOnError extends boolean = false>(
  options: Options<PostApiAmmoData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiAmmoResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/ammo",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const deleteApiAmmoByHash = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiAmmoByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).delete<
    DeleteApiAmmoByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/ammo/{hash}",
    ...options,
  });
};

export const getApiAmmoByHash = <ThrowOnError extends boolean = false>(
  options: Options<GetApiAmmoByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetApiAmmoByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/ammo/{hash}",
    ...options,
  });
};

export const postApiAmmoByHash = <ThrowOnError extends boolean = false>(
  options: Options<PostApiAmmoByHashData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiAmmoByHashResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/ammo/{hash}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiAmmoImport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiAmmoImportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiAmmoImportResponses,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/ammo/import",
    ...options,
    headers: {
      "Content-Type": null,
      ...options.headers,
    },
  });
};

export const postApiAmmoExport = <ThrowOnError extends boolean = false>(
  options: Options<PostApiAmmoExportData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiAmmoExportResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/ammo/export",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

export const postApiAmmoExportPath = <ThrowOnError extends boolean = false>(
  options: Options<PostApiAmmoExportPathData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    PostApiAmmoExportPathResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/ammo/export/path",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};
