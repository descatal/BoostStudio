// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from './client';
import type { PostApiDebugData, PostApiDebugResponses, GetApiUnitsData, GetApiUnitsResponses, PostApiUnitsData, PostApiUnitsResponses, GetApiUnitsByUnitIdData, GetApiUnitsByUnitIdResponses, PostApiUnitsByUnitIdData, PostApiUnitsByUnitIdResponses, GetApiUnitsByUnitIdPlayableCharactersData, GetApiUnitsByUnitIdPlayableCharactersResponses, PostApiUnitsByUnitIdPlayableCharactersData, PostApiUnitsByUnitIdPlayableCharactersResponses, PostApiUnitsBulkData, PostApiUnitsBulkResponses, PostApiUnitsPlayableCharactersImportData, PostApiUnitsPlayableCharactersImportResponses, PostApiUnitsPlayableCharactersExportData, PostApiUnitsPlayableCharactersExportResponses, GetApiPatchFilesData, GetApiPatchFilesResponses, PostApiPatchFilesData, PostApiPatchFilesResponses, GetApiPatchFilesSummaryData, GetApiPatchFilesSummaryResponses, DeleteApiPatchFilesByIdData, DeleteApiPatchFilesByIdResponses, GetApiPatchFilesByIdData, GetApiPatchFilesByIdResponses, PostApiPatchFilesByIdData, PostApiPatchFilesByIdResponses, PostApiPatchFilesResizeData, PostApiPatchFilesResizeResponses, GetApiTblDeserializePathData, GetApiTblDeserializePathResponses, PostApiTblDeserializeData, PostApiTblDeserializeResponses, GetApiTblSerializePathData, GetApiTblSerializePathResponses, PostApiTblSerializeData, PostApiTblSerializeResponses, GetApiTblByIdData, GetApiTblByIdResponses, PostApiTblImportData, PostApiTblImportResponses, PostApiTblExportData, PostApiTblExportResponses, GetApiStatsData, GetApiStatsResponses, PostApiStatsData, PostApiStatsResponses, DeleteApiStatsByIdData, DeleteApiStatsByIdResponses, GetApiStatsByIdData, GetApiStatsByIdResponses, PostApiStatsByIdData, PostApiStatsByIdResponses, GetApiUnitStatsData, GetApiUnitStatsResponses, GetApiUnitStatsByUnitIdData, GetApiUnitStatsByUnitIdResponses, PostApiUnitStatsImportData, PostApiUnitStatsImportResponses, PostApiUnitStatsExportData, PostApiUnitStatsExportResponses, PostApiUnitStatsExportPathData, PostApiUnitStatsExportPathResponses, GetApiUnitStatsAmmoSlotByUnitIdData, GetApiUnitStatsAmmoSlotByUnitIdResponses, PostApiUnitStatsAmmoSlotData, PostApiUnitStatsAmmoSlotResponses, DeleteApiUnitStatsAmmoSlotByIdData, DeleteApiUnitStatsAmmoSlotByIdResponses, PostApiUnitStatsAmmoSlotByIdData, PostApiUnitStatsAmmoSlotByIdResponses, GetApiSeriesData, GetApiSeriesResponses, PostApiSeriesData, PostApiSeriesResponses, GetApiSeriesUnitsData, GetApiSeriesUnitsResponses, PostApiSeriesImportData, PostApiSeriesImportResponses, PostApiSeriesExportData, PostApiSeriesExportResponses, GetApiScexDecompiledByUnitIdData, GetApiScexDecompiledByUnitIdResponses, PostApiScexCompilePathData, PostApiScexCompilePathResponses, PostApiScexDecompilePathData, PostApiScexDecompilePathResponses, PostApiScexHotReloadPathData, PostApiScexHotReloadPathResponses, PostApiScexCompileUnitsData, PostApiScexCompileUnitsResponses, PostApiScexDecompileUnitsData, PostApiScexDecompileUnitsResponses, PostApiPsarcPackPathData, PostApiPsarcPackPathResponses, PostApiPsarcUnpackPathData, PostApiPsarcUnpackPathResponses, PostApiPsarcPackPatchFilesData, PostApiPsarcPackPatchFilesResponses, PostApiPsarcUnpackPatchFilesData, PostApiPsarcUnpackPatchFilesResponses, GetApiProjectilesData, GetApiProjectilesResponses, PostApiProjectilesData, PostApiProjectilesResponses, DeleteApiProjectilesByHashData, DeleteApiProjectilesByHashResponses, GetApiProjectilesByHashData, GetApiProjectilesByHashResponses, PostApiProjectilesByHashData, PostApiProjectilesByHashResponses, GetApiUnitProjectilesData, GetApiUnitProjectilesResponses, GetApiUnitProjectilesByUnitIdData, GetApiUnitProjectilesByUnitIdResponses, PostApiUnitProjectilesImportData, PostApiUnitProjectilesImportResponses, PostApiUnitProjectilesImportPathData, PostApiUnitProjectilesImportPathResponses, PostApiUnitProjectilesExportData, PostApiUnitProjectilesExportResponses, PostApiUnitProjectilesExportPathData, PostApiUnitProjectilesExportPathResponses, GetApiHitboxesData, GetApiHitboxesResponses, PostApiHitboxesData, PostApiHitboxesResponses, DeleteApiHitboxesByHashData, DeleteApiHitboxesByHashResponses, GetApiHitboxesByHashData, GetApiHitboxesByHashResponses, PostApiHitboxesByHashData, PostApiHitboxesByHashResponses, GetApiHitboxGroupsData, GetApiHitboxGroupsResponses, PostApiHitboxGroupsData, PostApiHitboxGroupsResponses, GetApiHitboxGroupsHashByHashData, GetApiHitboxGroupsHashByHashResponses, GetApiHitboxGroupsUnitIdByUnitIdData, GetApiHitboxGroupsUnitIdByUnitIdResponses, PostApiHitboxGroupsByHashData, PostApiHitboxGroupsByHashResponses, PostApiHitboxGroupsImportData, PostApiHitboxGroupsImportResponses, PostApiHitboxGroupsImportPathData, PostApiHitboxGroupsImportPathResponses, PostApiHitboxGroupsExportData, PostApiHitboxGroupsExportResponses, PostApiHitboxGroupsExportPathData, PostApiHitboxGroupsExportPathResponses, GetApiFhmPackPathData, GetApiFhmPackPathResponses, GetApiFhmUnpackPathData, GetApiFhmUnpackPathResponses, PostApiFhmPackData, PostApiFhmPackResponses, PostApiFhmUnpackData, PostApiFhmUnpackResponses, PostApiFhmPackAssetData, PostApiFhmPackAssetResponses, PostApiFhmUnpackAssetData, PostApiFhmUnpackAssetResponses, GetApiConfigsData, GetApiConfigsResponses, PostApiConfigsData, PostApiConfigsResponses, DeleteApiConfigsByKeyData, DeleteApiConfigsByKeyResponses, GetApiConfigsByKeyData, GetApiConfigsByKeyResponses, GetApiAssetsData, GetApiAssetsResponses, PostApiAssetsData, PostApiAssetsResponses, DeleteApiAssetsByHashData, DeleteApiAssetsByHashResponses, GetApiAssetsByHashData, GetApiAssetsByHashResponses, PostApiAssetsByHashData, PostApiAssetsByHashResponses, PostApiAssetsImportData, PostApiAssetsImportResponses, GetApiAmmoData, GetApiAmmoResponses, PostApiAmmoData, PostApiAmmoResponses, DeleteApiAmmoByHashData, DeleteApiAmmoByHashResponses, GetApiAmmoByHashData, GetApiAmmoByHashResponses, PostApiAmmoByHashData, PostApiAmmoByHashResponses, PostApiAmmoImportData, PostApiAmmoImportResponses, PostApiAmmoExportData, PostApiAmmoExportResponses, PostApiAmmoExportPathData, PostApiAmmoExportPathResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const postApiDebug = <ThrowOnError extends boolean = false>(options: Options<PostApiDebugData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiDebugResponses, unknown, ThrowOnError>({
        url: '/api/debug',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiUnits = <ThrowOnError extends boolean = false>(options?: Options<GetApiUnitsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiUnitsResponses, unknown, ThrowOnError>({
        url: '/api/units',
        ...options
    });
};

export const postApiUnits = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitsResponses, unknown, ThrowOnError>({
        url: '/api/units',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiUnitsByUnitId = <ThrowOnError extends boolean = false>(options: Options<GetApiUnitsByUnitIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiUnitsByUnitIdResponses, unknown, ThrowOnError>({
        url: '/api/units/{unitId}',
        ...options
    });
};

export const postApiUnitsByUnitId = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitsByUnitIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitsByUnitIdResponses, unknown, ThrowOnError>({
        url: '/api/units/{unitId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiUnitsByUnitIdPlayableCharacters = <ThrowOnError extends boolean = false>(options: Options<GetApiUnitsByUnitIdPlayableCharactersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiUnitsByUnitIdPlayableCharactersResponses, unknown, ThrowOnError>({
        url: '/api/units/{unitId}/playable-characters',
        ...options
    });
};

export const postApiUnitsByUnitIdPlayableCharacters = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitsByUnitIdPlayableCharactersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitsByUnitIdPlayableCharactersResponses, unknown, ThrowOnError>({
        url: '/api/units/{unitId}/playable-characters',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiUnitsBulk = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitsBulkData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitsBulkResponses, unknown, ThrowOnError>({
        url: '/api/units/bulk',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiUnitsPlayableCharactersImport = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitsPlayableCharactersImportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitsPlayableCharactersImportResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/units/playable-characters/import',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postApiUnitsPlayableCharactersExport = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitsPlayableCharactersExportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitsPlayableCharactersExportResponses, unknown, ThrowOnError>({
        url: '/api/units/playable-characters/export',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiPatchFiles = <ThrowOnError extends boolean = false>(options?: Options<GetApiPatchFilesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiPatchFilesResponses, unknown, ThrowOnError>({
        url: '/api/patch-files',
        ...options
    });
};

export const postApiPatchFiles = <ThrowOnError extends boolean = false>(options: Options<PostApiPatchFilesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiPatchFilesResponses, unknown, ThrowOnError>({
        url: '/api/patch-files',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiPatchFilesSummary = <ThrowOnError extends boolean = false>(options?: Options<GetApiPatchFilesSummaryData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiPatchFilesSummaryResponses, unknown, ThrowOnError>({
        url: '/api/patch-files/summary',
        ...options
    });
};

export const deleteApiPatchFilesById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiPatchFilesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiPatchFilesByIdResponses, unknown, ThrowOnError>({
        url: '/api/patch-files/{id}',
        ...options
    });
};

export const getApiPatchFilesById = <ThrowOnError extends boolean = false>(options: Options<GetApiPatchFilesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiPatchFilesByIdResponses, unknown, ThrowOnError>({
        url: '/api/patch-files/{id}',
        ...options
    });
};

export const postApiPatchFilesById = <ThrowOnError extends boolean = false>(options: Options<PostApiPatchFilesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiPatchFilesByIdResponses, unknown, ThrowOnError>({
        url: '/api/patch-files/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiPatchFilesResize = <ThrowOnError extends boolean = false>(options: Options<PostApiPatchFilesResizeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiPatchFilesResizeResponses, unknown, ThrowOnError>({
        url: '/api/patch-files/resize',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiTblDeserializePath = <ThrowOnError extends boolean = false>(options: Options<GetApiTblDeserializePathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiTblDeserializePathResponses, unknown, ThrowOnError>({
        url: '/api/tbl/deserialize-path',
        ...options
    });
};

export const postApiTblDeserialize = <ThrowOnError extends boolean = false>(options: Options<PostApiTblDeserializeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiTblDeserializeResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/tbl/deserialize',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const getApiTblSerializePath = <ThrowOnError extends boolean = false>(options: Options<GetApiTblSerializePathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiTblSerializePathResponses, unknown, ThrowOnError>({
        url: '/api/tbl/serialize-path',
        ...options
    });
};

export const postApiTblSerialize = <ThrowOnError extends boolean = false>(options: Options<PostApiTblSerializeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiTblSerializeResponses, unknown, ThrowOnError>({
        url: '/api/tbl/serialize',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiTblById = <ThrowOnError extends boolean = false>(options: Options<GetApiTblByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiTblByIdResponses, unknown, ThrowOnError>({
        url: '/api/tbl/{id}',
        ...options
    });
};

export const postApiTblImport = <ThrowOnError extends boolean = false>(options: Options<PostApiTblImportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiTblImportResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/tbl/import',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postApiTblExport = <ThrowOnError extends boolean = false>(options: Options<PostApiTblExportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiTblExportResponses, unknown, ThrowOnError>({
        url: '/api/tbl/export',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiStats = <ThrowOnError extends boolean = false>(options?: Options<GetApiStatsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiStatsResponses, unknown, ThrowOnError>({
        url: '/api/stats',
        ...options
    });
};

export const postApiStats = <ThrowOnError extends boolean = false>(options: Options<PostApiStatsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiStatsResponses, unknown, ThrowOnError>({
        url: '/api/stats',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteApiStatsById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiStatsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiStatsByIdResponses, unknown, ThrowOnError>({
        url: '/api/stats/{id}',
        ...options
    });
};

export const getApiStatsById = <ThrowOnError extends boolean = false>(options: Options<GetApiStatsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiStatsByIdResponses, unknown, ThrowOnError>({
        url: '/api/stats/{id}',
        ...options
    });
};

export const postApiStatsById = <ThrowOnError extends boolean = false>(options: Options<PostApiStatsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiStatsByIdResponses, unknown, ThrowOnError>({
        url: '/api/stats/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiUnitStats = <ThrowOnError extends boolean = false>(options?: Options<GetApiUnitStatsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiUnitStatsResponses, unknown, ThrowOnError>({
        url: '/api/unit-stats',
        ...options
    });
};

export const getApiUnitStatsByUnitId = <ThrowOnError extends boolean = false>(options: Options<GetApiUnitStatsByUnitIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiUnitStatsByUnitIdResponses, unknown, ThrowOnError>({
        url: '/api/unit-stats/{unitId}',
        ...options
    });
};

export const postApiUnitStatsImport = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitStatsImportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitStatsImportResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/unit-stats/import',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postApiUnitStatsExport = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitStatsExportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitStatsExportResponses, unknown, ThrowOnError>({
        url: '/api/unit-stats/export',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiUnitStatsExportPath = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitStatsExportPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitStatsExportPathResponses, unknown, ThrowOnError>({
        url: '/api/unit-stats/export/path',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiUnitStatsAmmoSlotByUnitId = <ThrowOnError extends boolean = false>(options: Options<GetApiUnitStatsAmmoSlotByUnitIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiUnitStatsAmmoSlotByUnitIdResponses, unknown, ThrowOnError>({
        url: '/api/unit-stats/ammo-slot/{unitId}',
        ...options
    });
};

export const postApiUnitStatsAmmoSlot = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitStatsAmmoSlotData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitStatsAmmoSlotResponses, unknown, ThrowOnError>({
        url: '/api/unit-stats/ammo-slot',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteApiUnitStatsAmmoSlotById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiUnitStatsAmmoSlotByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiUnitStatsAmmoSlotByIdResponses, unknown, ThrowOnError>({
        url: '/api/unit-stats/ammo-slot/{id}',
        ...options
    });
};

export const postApiUnitStatsAmmoSlotById = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitStatsAmmoSlotByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitStatsAmmoSlotByIdResponses, unknown, ThrowOnError>({
        url: '/api/unit-stats/ammo-slot/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiSeries = <ThrowOnError extends boolean = false>(options?: Options<GetApiSeriesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiSeriesResponses, unknown, ThrowOnError>({
        url: '/api/series',
        ...options
    });
};

export const postApiSeries = <ThrowOnError extends boolean = false>(options: Options<PostApiSeriesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiSeriesResponses, unknown, ThrowOnError>({
        url: '/api/series',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiSeriesUnits = <ThrowOnError extends boolean = false>(options?: Options<GetApiSeriesUnitsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiSeriesUnitsResponses, unknown, ThrowOnError>({
        url: '/api/series/units',
        ...options
    });
};

export const postApiSeriesImport = <ThrowOnError extends boolean = false>(options: Options<PostApiSeriesImportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiSeriesImportResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/series/import',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postApiSeriesExport = <ThrowOnError extends boolean = false>(options: Options<PostApiSeriesExportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiSeriesExportResponses, unknown, ThrowOnError>({
        url: '/api/series/export',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiScexDecompiledByUnitId = <ThrowOnError extends boolean = false>(options: Options<GetApiScexDecompiledByUnitIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiScexDecompiledByUnitIdResponses, unknown, ThrowOnError>({
        url: '/api/scex/decompiled/{unitId}',
        ...options
    });
};

export const postApiScexCompilePath = <ThrowOnError extends boolean = false>(options: Options<PostApiScexCompilePathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiScexCompilePathResponses, unknown, ThrowOnError>({
        url: '/api/scex/compile/path',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiScexDecompilePath = <ThrowOnError extends boolean = false>(options: Options<PostApiScexDecompilePathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiScexDecompilePathResponses, unknown, ThrowOnError>({
        url: '/api/scex/decompile/path',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiScexHotReloadPath = <ThrowOnError extends boolean = false>(options: Options<PostApiScexHotReloadPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiScexHotReloadPathResponses, unknown, ThrowOnError>({
        url: '/api/scex/hot-reload/path',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiScexCompileUnits = <ThrowOnError extends boolean = false>(options: Options<PostApiScexCompileUnitsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiScexCompileUnitsResponses, unknown, ThrowOnError>({
        url: '/api/scex/compile/units',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiScexDecompileUnits = <ThrowOnError extends boolean = false>(options: Options<PostApiScexDecompileUnitsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiScexDecompileUnitsResponses, unknown, ThrowOnError>({
        url: '/api/scex/decompile/units',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiPsarcPackPath = <ThrowOnError extends boolean = false>(options: Options<PostApiPsarcPackPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiPsarcPackPathResponses, unknown, ThrowOnError>({
        url: '/api/psarc/pack/path',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiPsarcUnpackPath = <ThrowOnError extends boolean = false>(options: Options<PostApiPsarcUnpackPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiPsarcUnpackPathResponses, unknown, ThrowOnError>({
        url: '/api/psarc/unpack/path',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiPsarcPackPatchFiles = <ThrowOnError extends boolean = false>(options: Options<PostApiPsarcPackPatchFilesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiPsarcPackPatchFilesResponses, unknown, ThrowOnError>({
        url: '/api/psarc/pack/patch-files',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiPsarcUnpackPatchFiles = <ThrowOnError extends boolean = false>(options: Options<PostApiPsarcUnpackPatchFilesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiPsarcUnpackPatchFilesResponses, unknown, ThrowOnError>({
        url: '/api/psarc/unpack/patch-files',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiProjectiles = <ThrowOnError extends boolean = false>(options?: Options<GetApiProjectilesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiProjectilesResponses, unknown, ThrowOnError>({
        url: '/api/projectiles',
        ...options
    });
};

export const postApiProjectiles = <ThrowOnError extends boolean = false>(options: Options<PostApiProjectilesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiProjectilesResponses, unknown, ThrowOnError>({
        url: '/api/projectiles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteApiProjectilesByHash = <ThrowOnError extends boolean = false>(options: Options<DeleteApiProjectilesByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiProjectilesByHashResponses, unknown, ThrowOnError>({
        url: '/api/projectiles/{hash}',
        ...options
    });
};

export const getApiProjectilesByHash = <ThrowOnError extends boolean = false>(options: Options<GetApiProjectilesByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiProjectilesByHashResponses, unknown, ThrowOnError>({
        url: '/api/projectiles/{hash}',
        ...options
    });
};

export const postApiProjectilesByHash = <ThrowOnError extends boolean = false>(options: Options<PostApiProjectilesByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiProjectilesByHashResponses, unknown, ThrowOnError>({
        url: '/api/projectiles/{hash}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiUnitProjectiles = <ThrowOnError extends boolean = false>(options?: Options<GetApiUnitProjectilesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiUnitProjectilesResponses, unknown, ThrowOnError>({
        url: '/api/unit-projectiles',
        ...options
    });
};

export const getApiUnitProjectilesByUnitId = <ThrowOnError extends boolean = false>(options: Options<GetApiUnitProjectilesByUnitIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiUnitProjectilesByUnitIdResponses, unknown, ThrowOnError>({
        url: '/api/unit-projectiles/{unitId}',
        ...options
    });
};

export const postApiUnitProjectilesImport = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitProjectilesImportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitProjectilesImportResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/unit-projectiles/import',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postApiUnitProjectilesImportPath = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitProjectilesImportPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitProjectilesImportPathResponses, unknown, ThrowOnError>({
        url: '/api/unit-projectiles/import/path',
        ...options
    });
};

export const postApiUnitProjectilesExport = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitProjectilesExportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitProjectilesExportResponses, unknown, ThrowOnError>({
        url: '/api/unit-projectiles/export',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiUnitProjectilesExportPath = <ThrowOnError extends boolean = false>(options: Options<PostApiUnitProjectilesExportPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUnitProjectilesExportPathResponses, unknown, ThrowOnError>({
        url: '/api/unit-projectiles/export/path',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiHitboxes = <ThrowOnError extends boolean = false>(options?: Options<GetApiHitboxesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiHitboxesResponses, unknown, ThrowOnError>({
        url: '/api/hitboxes',
        ...options
    });
};

export const postApiHitboxes = <ThrowOnError extends boolean = false>(options: Options<PostApiHitboxesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiHitboxesResponses, unknown, ThrowOnError>({
        url: '/api/hitboxes',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteApiHitboxesByHash = <ThrowOnError extends boolean = false>(options: Options<DeleteApiHitboxesByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiHitboxesByHashResponses, unknown, ThrowOnError>({
        url: '/api/hitboxes/{hash}',
        ...options
    });
};

export const getApiHitboxesByHash = <ThrowOnError extends boolean = false>(options: Options<GetApiHitboxesByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiHitboxesByHashResponses, unknown, ThrowOnError>({
        url: '/api/hitboxes/{hash}',
        ...options
    });
};

export const postApiHitboxesByHash = <ThrowOnError extends boolean = false>(options: Options<PostApiHitboxesByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiHitboxesByHashResponses, unknown, ThrowOnError>({
        url: '/api/hitboxes/{hash}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiHitboxGroups = <ThrowOnError extends boolean = false>(options?: Options<GetApiHitboxGroupsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiHitboxGroupsResponses, unknown, ThrowOnError>({
        url: '/api/hitbox-groups',
        ...options
    });
};

export const postApiHitboxGroups = <ThrowOnError extends boolean = false>(options: Options<PostApiHitboxGroupsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiHitboxGroupsResponses, unknown, ThrowOnError>({
        url: '/api/hitbox-groups',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiHitboxGroupsHashByHash = <ThrowOnError extends boolean = false>(options: Options<GetApiHitboxGroupsHashByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiHitboxGroupsHashByHashResponses, unknown, ThrowOnError>({
        url: '/api/hitbox-groups/hash/{hash}',
        ...options
    });
};

export const getApiHitboxGroupsUnitIdByUnitId = <ThrowOnError extends boolean = false>(options: Options<GetApiHitboxGroupsUnitIdByUnitIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiHitboxGroupsUnitIdByUnitIdResponses, unknown, ThrowOnError>({
        url: '/api/hitbox-groups/unitId/{unitId}',
        ...options
    });
};

export const postApiHitboxGroupsByHash = <ThrowOnError extends boolean = false>(options: Options<PostApiHitboxGroupsByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiHitboxGroupsByHashResponses, unknown, ThrowOnError>({
        url: '/api/hitbox-groups/{hash}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiHitboxGroupsImport = <ThrowOnError extends boolean = false>(options: Options<PostApiHitboxGroupsImportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiHitboxGroupsImportResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/hitbox-groups/import',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postApiHitboxGroupsImportPath = <ThrowOnError extends boolean = false>(options: Options<PostApiHitboxGroupsImportPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiHitboxGroupsImportPathResponses, unknown, ThrowOnError>({
        url: '/api/hitbox-groups/import/path',
        ...options
    });
};

export const postApiHitboxGroupsExport = <ThrowOnError extends boolean = false>(options: Options<PostApiHitboxGroupsExportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiHitboxGroupsExportResponses, unknown, ThrowOnError>({
        url: '/api/hitbox-groups/export',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiHitboxGroupsExportPath = <ThrowOnError extends boolean = false>(options: Options<PostApiHitboxGroupsExportPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiHitboxGroupsExportPathResponses, unknown, ThrowOnError>({
        url: '/api/hitbox-groups/export/path',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiFhmPackPath = <ThrowOnError extends boolean = false>(options: Options<GetApiFhmPackPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiFhmPackPathResponses, unknown, ThrowOnError>({
        url: '/api/fhm/pack-path',
        ...options
    });
};

export const getApiFhmUnpackPath = <ThrowOnError extends boolean = false>(options: Options<GetApiFhmUnpackPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiFhmUnpackPathResponses, unknown, ThrowOnError>({
        url: '/api/fhm/unpack-path',
        ...options
    });
};

export const postApiFhmPack = <ThrowOnError extends boolean = false>(options: Options<PostApiFhmPackData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiFhmPackResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/fhm/pack',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postApiFhmUnpack = <ThrowOnError extends boolean = false>(options: Options<PostApiFhmUnpackData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiFhmUnpackResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/fhm/unpack',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postApiFhmPackAsset = <ThrowOnError extends boolean = false>(options: Options<PostApiFhmPackAssetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiFhmPackAssetResponses, unknown, ThrowOnError>({
        url: '/api/fhm/pack/asset',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiFhmUnpackAsset = <ThrowOnError extends boolean = false>(options: Options<PostApiFhmUnpackAssetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiFhmUnpackAssetResponses, unknown, ThrowOnError>({
        url: '/api/fhm/unpack/asset',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiConfigs = <ThrowOnError extends boolean = false>(options: Options<GetApiConfigsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiConfigsResponses, unknown, ThrowOnError>({
        url: '/api/configs',
        ...options
    });
};

export const postApiConfigs = <ThrowOnError extends boolean = false>(options: Options<PostApiConfigsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiConfigsResponses, unknown, ThrowOnError>({
        url: '/api/configs',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteApiConfigsByKey = <ThrowOnError extends boolean = false>(options: Options<DeleteApiConfigsByKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiConfigsByKeyResponses, unknown, ThrowOnError>({
        url: '/api/configs/{key}',
        ...options
    });
};

export const getApiConfigsByKey = <ThrowOnError extends boolean = false>(options: Options<GetApiConfigsByKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiConfigsByKeyResponses, unknown, ThrowOnError>({
        url: '/api/configs/{key}',
        ...options
    });
};

export const getApiAssets = <ThrowOnError extends boolean = false>(options?: Options<GetApiAssetsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiAssetsResponses, unknown, ThrowOnError>({
        url: '/api/assets',
        ...options
    });
};

export const postApiAssets = <ThrowOnError extends boolean = false>(options: Options<PostApiAssetsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAssetsResponses, unknown, ThrowOnError>({
        url: '/api/assets',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteApiAssetsByHash = <ThrowOnError extends boolean = false>(options: Options<DeleteApiAssetsByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiAssetsByHashResponses, unknown, ThrowOnError>({
        url: '/api/assets/{hash}',
        ...options
    });
};

export const getApiAssetsByHash = <ThrowOnError extends boolean = false>(options: Options<GetApiAssetsByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiAssetsByHashResponses, unknown, ThrowOnError>({
        url: '/api/assets/{hash}',
        ...options
    });
};

export const postApiAssetsByHash = <ThrowOnError extends boolean = false>(options: Options<PostApiAssetsByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAssetsByHashResponses, unknown, ThrowOnError>({
        url: '/api/assets/{hash}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiAssetsImport = <ThrowOnError extends boolean = false>(options: Options<PostApiAssetsImportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAssetsImportResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/assets/import',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const getApiAmmo = <ThrowOnError extends boolean = false>(options?: Options<GetApiAmmoData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiAmmoResponses, unknown, ThrowOnError>({
        url: '/api/ammo',
        ...options
    });
};

export const postApiAmmo = <ThrowOnError extends boolean = false>(options: Options<PostApiAmmoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAmmoResponses, unknown, ThrowOnError>({
        url: '/api/ammo',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteApiAmmoByHash = <ThrowOnError extends boolean = false>(options: Options<DeleteApiAmmoByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiAmmoByHashResponses, unknown, ThrowOnError>({
        url: '/api/ammo/{hash}',
        ...options
    });
};

export const getApiAmmoByHash = <ThrowOnError extends boolean = false>(options: Options<GetApiAmmoByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiAmmoByHashResponses, unknown, ThrowOnError>({
        url: '/api/ammo/{hash}',
        ...options
    });
};

export const postApiAmmoByHash = <ThrowOnError extends boolean = false>(options: Options<PostApiAmmoByHashData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAmmoByHashResponses, unknown, ThrowOnError>({
        url: '/api/ammo/{hash}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiAmmoImport = <ThrowOnError extends boolean = false>(options: Options<PostApiAmmoImportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAmmoImportResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/ammo/import',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postApiAmmoExport = <ThrowOnError extends boolean = false>(options: Options<PostApiAmmoExportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAmmoExportResponses, unknown, ThrowOnError>({
        url: '/api/ammo/export',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postApiAmmoExportPath = <ThrowOnError extends boolean = false>(options: Options<PostApiAmmoExportPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAmmoExportPathResponses, unknown, ThrowOnError>({
        url: '/api/ammo/export/path',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};