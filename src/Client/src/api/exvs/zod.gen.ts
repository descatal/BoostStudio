// This file is auto-generated by @hey-api/openapi-ts

import { z } from "zod";

export const zAmmoDto = z.object({
  hash: z.coerce.bigint().optional(),
  ammoType: z.number().int().optional(),
  maxAmmo: z.number().int().optional(),
  initialAmmo: z.number().int().optional(),
  timedDurationFrame: z.number().int().optional(),
  unk16: z.number().int().optional(),
  reloadType: z.number().int().optional(),
  cooldownDurationFrame: z.number().int().optional(),
  reloadDurationFrame: z.number().int().optional(),
  assaultBurstReloadDurationFrame: z.number().int().optional(),
  blastBurstReloadDurationFrame: z.number().int().optional(),
  unk40: z.number().int().optional(),
  unk44: z.number().int().optional(),
  inactiveUnk48: z.number().int().optional(),
  inactiveCooldownDurationFrame: z.number().int().optional(),
  inactiveReloadDurationFrame: z.number().int().optional(),
  inactiveAssaultBurstReloadDurationFrame: z.number().int().optional(),
  inactiveBlastBurstReloadDurationFrame: z.number().int().optional(),
  inactiveUnk68: z.number().int().optional(),
  inactiveUnk72: z.number().int().optional(),
  burstReplenish: z.number().int().optional(),
  unk80: z.number().int().optional(),
  unk84: z.number().int().optional(),
  unk88: z.number().int().optional(),
  chargeInput: z.number().int().optional(),
  chargeDurationFrame: z.number().int().optional(),
  assaultBurstChargeDurationFrame: z.number().int().optional(),
  blastBurstChargeDurationFrame: z.number().int().optional(),
  unk108: z.number().int().optional(),
  unk112: z.number().int().optional(),
  releaseChargeLingerDurationFrame: z.number().int().optional(),
  maxChargeLevel: z.number().int().optional(),
  unk124: z.number().int().optional(),
  unk128: z.number().int().optional(),
  order: z.number().int().optional(),
  unitId: z.union([z.null(), z.number().int()]).optional(),
});

export const zAssetFileType = z.enum([
  "Unknown",
  "Dummy",
  "Animations",
  "ModelAndTexture",
  "Data",
  "Effects",
  "SoundEffects",
  "InGamePilotVoiceLines",
  "SpriteFrames",
  "WeaponSprites",
  "VoiceLinesMetadata",
  "PilotVoiceLines",
  "ArcadeSelectionCostume1Sprite",
  "ArcadeSelectionCostume2Sprite",
  "ArcadeSelectionCostume3Sprite",
  "LoadingLeftCostume1Sprite",
  "LoadingLeftCostume2Sprite",
  "LoadingLeftCostume3Sprite",
  "LoadingRightCostume1Sprite",
  "LoadingRightCostume2Sprite",
  "LoadingRightCostume3Sprite",
  "GenericSelectionCostume1Sprite",
  "GenericSelectionCostume2Sprite",
  "GenericSelectionCostume3Sprite",
  "LoadingTargetUnitSprite",
  "LoadingTargetPilotCostume1Sprite",
  "LoadingTargetPilotCostume2Sprite",
  "LoadingTargetPilotCostume3Sprite",
  "InGameSortieAndAwakeningPilotCostume1Sprite",
  "InGameSortieAndAwakeningPilotCostume2Sprite",
  "InGameSortieAndAwakeningPilotCostume3Sprite",
  "ResultSmallUnitSprite",
  "FigurineSprite",
  "LoadingTargetUnitSmallSprite",
  "CatalogStorePilotCostume2Sprite",
  "CatalogStorePilotCostume3Sprite",
  "Movie",
  "Hitboxes",
  "Projectiles",
  "Ammo",
  "ListInfo",
  "UnitCostInfo",
  "SharedFigurineSprites",
  "MapSelectSprites",
  "ArcadeSelectSmallSprites",
  "ArcadeSelectUnitNameSprites",
  "CameraConfigs",
  "CommonEffects",
  "CommonEffectParticles",
  "CosmeticInfo",
  "TextStrings",
  "SeriesLogoSprites",
  "SeriesLogoSprites2",
]);

export const zSeriesVm = z.union([
  z.null(),
  z.object({
    id: z.number().int().optional(),
    slugName: z.string().optional(),
    nameEnglish: z.union([z.null(), z.string()]).optional(),
    nameJapanese: z.union([z.null(), z.string()]).optional(),
    nameChinese: z.union([z.null(), z.string()]).optional(),
  }),
]);

export const zUnitSummaryVm = z.object({
  unitId: z.number().int().optional(),
  slugName: z.union([z.null(), z.string()]).optional(),
  nameEnglish: z.union([z.null(), z.string()]).optional(),
  nameJapanese: z.union([z.null(), z.string()]).optional(),
  nameChinese: z.union([z.null(), z.string()]).optional(),
  seriesId: z.union([z.null(), z.number().int()]).optional(),
  series: zSeriesVm.optional(),
});

export const zAssetFileDto = z.union([
  z.null(),
  z.object({
    hash: z.number().int(),
    order: z.number().int(),
    fileType: z.array(zAssetFileType),
    units: z.array(zUnitSummaryVm),
  }),
]);

export const zAssetFileVm = z.object({
  hash: z.number().int(),
  order: z.number().int().optional(),
  fileType: z.array(zAssetFileType).optional(),
  unitIds: z.array(z.number().int()).optional(),
});

export const zBulkCreateUnitCommand = z.object({
  units: z.array(zUnitSummaryVm),
});

export const zCompileScexByPathCommand = z.object({
  sourcePath: z.string(),
  destinationPath: z.string(),
  fileName: z.union([z.null(), z.string()]).optional(),
  hotReload: z.boolean().optional().default(true),
});

export const zCompileScexByUnitsCommand = z.object({
  unitIds: z.array(z.number().int()),
  replaceWorking: z.boolean().optional().default(false),
  hotReload: z.boolean().optional().default(false),
});

export const zCompressionFormats = z.enum(["Zip", "Tar"]);

export const zConfigDto = z.object({
  key: z.string(),
  value: z.string(),
});

export const zCreateAmmoCommand = z.object({
  ammoType: z.number().int().optional(),
  maxAmmo: z.number().int().optional(),
  initialAmmo: z.number().int().optional(),
  timedDurationFrame: z.number().int().optional(),
  unk16: z.number().int().optional(),
  reloadType: z.number().int().optional(),
  cooldownDurationFrame: z.number().int().optional(),
  reloadDurationFrame: z.number().int().optional(),
  assaultBurstReloadDurationFrame: z.number().int().optional(),
  blastBurstReloadDurationFrame: z.number().int().optional(),
  unk40: z.number().int().optional(),
  unk44: z.number().int().optional(),
  inactiveUnk48: z.number().int().optional(),
  inactiveCooldownDurationFrame: z.number().int().optional(),
  inactiveReloadDurationFrame: z.number().int().optional(),
  inactiveAssaultBurstReloadDurationFrame: z.number().int().optional(),
  inactiveBlastBurstReloadDurationFrame: z.number().int().optional(),
  inactiveUnk68: z.number().int().optional(),
  inactiveUnk72: z.number().int().optional(),
  burstReplenish: z.number().int().optional(),
  unk80: z.number().int().optional(),
  unk84: z.number().int().optional(),
  unk88: z.number().int().optional(),
  chargeInput: z.number().int().optional(),
  chargeDurationFrame: z.number().int().optional(),
  assaultBurstChargeDurationFrame: z.number().int().optional(),
  blastBurstChargeDurationFrame: z.number().int().optional(),
  unk108: z.number().int().optional(),
  unk112: z.number().int().optional(),
  releaseChargeLingerDurationFrame: z.number().int().optional(),
  maxChargeLevel: z.number().int().optional(),
  unk124: z.number().int().optional(),
  unk128: z.number().int().optional(),
  order: z.number().int().optional(),
  unitId: z.union([z.null(), z.number().int()]).optional(),
});

export const zCreateAssetFileCommand = z.object({
  order: z.number().int().optional(),
  fileType: z.array(zAssetFileType).optional(),
  unitIds: z.array(z.number().int()).optional(),
});

export const zCreateHitboxCommand = z.object({
  hitboxType: z.number().int().optional(),
  damage: z.number().int().optional(),
  unk8: z.number().int().optional(),
  downValueThreshold: z.number().int().optional(),
  yorukeValueThreshold: z.number().int().optional(),
  unk20: z.number().int().optional(),
  unk24: z.number().int().optional(),
  damageCorrection: z.number().optional(),
  specialEffect: z.number().int().optional(),
  hitEffect: z.number().int().optional(),
  flyDirection1: z.number().int().optional(),
  flyDirection2: z.number().int().optional(),
  flyDirection3: z.number().int().optional(),
  enemyCameraShakeMultiplier: z.number().int().optional(),
  playerCameraShakeMultiplier: z.number().int().optional(),
  unk56: z.number().int().optional(),
  knockUpAngle: z.number().int().optional(),
  knockUpRange: z.number().int().optional(),
  unk68: z.number().int().optional(),
  multipleHitIntervalFrame: z.number().int().optional(),
  multipleHitCount: z.number().int().optional(),
  enemyStunDuration: z.number().int().optional(),
  playerStunDuration: z.number().int().optional(),
  hitVisualEffect: z.number().int().optional(),
  hitVisualEffectSizeMultiplier: z.number().optional(),
  hitSoundEffectHash: z.number().int().optional(),
  unk100: z.number().int().optional(),
  friendlyDamageFlag: z.number().int().optional(),
  unk108: z.number().int().optional(),
  hitboxGroupHash: z.number().int().optional(),
});

export const zCreateHitboxGroupCommand = z.object({
  hash: z.number().int(),
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
});

export const zPatchFileVersion = z.enum([
  "Base",
  "Patch1",
  "Patch2",
  "Patch3",
  "Patch4",
  "Patch5",
  "Patch6",
]);

export const zPathInfoDto = z.union([
  z.null(),
  z.object({
    path: z.string(),
    order: z.union([z.null(), z.number().int()]).optional(),
  }),
]);

export const zFileInfoDto = z.union([
  z.null(),
  z.object({
    version: zPatchFileVersion,
    size1: z.number().int(),
    size2: z.number().int(),
    size3: z.number().int(),
    size4: z.number().int(),
  }),
]);

export const zCreatePatchFileCommand = z.object({
  tblId: zPatchFileVersion,
  pathInfo: zPathInfoDto.optional(),
  fileInfo: zFileInfoDto.optional(),
  assetFileHash: z.union([z.null(), z.number().int()]).optional(),
});

export const zCreateProjectileCommand = z.object({
  projectileType: z.number().int().optional(),
  hitboxHash: z.union([z.null(), z.number().int()]).optional(),
  modelHash: z.number().int().optional(),
  skeletonIndex: z.number().int().optional(),
  aimType: z.number().int().optional(),
  translateY: z.number().optional(),
  translateZ: z.number().optional(),
  translateX: z.number().optional(),
  rotateX: z.number().optional(),
  rotateZ: z.number().optional(),
  cosmeticHash: z.number().int().optional(),
  unk44: z.number().int().optional(),
  unk48: z.number().int().optional(),
  unk52: z.number().int().optional(),
  unk56: z.number().int().optional(),
  ammoConsumption: z.number().int().optional(),
  durationFrame: z.number().int().optional(),
  maxTravelDistance: z.number().optional(),
  initialSpeed: z.number().optional(),
  acceleration: z.number().optional(),
  accelerationStartFrame: z.number().int().optional(),
  unk84: z.number().optional(),
  maxSpeed: z.number().optional(),
  reserved92: z.number().optional(),
  reserved96: z.number().optional(),
  reserved100: z.number().optional(),
  reserved104: z.number().optional(),
  reserved108: z.number().optional(),
  reserved112: z.number().optional(),
  reserved116: z.number().int().optional(),
  horizontalGuidance: z.number().optional(),
  horizontalGuidanceAngle: z.number().optional(),
  verticalGuidance: z.number().optional(),
  verticalGuidanceAngle: z.number().optional(),
  reserved136: z.number().int().optional(),
  reserved140: z.number().int().optional(),
  reserved144: z.number().optional(),
  reserved148: z.number().optional(),
  reserved152: z.number().optional(),
  reserved156: z.number().optional(),
  reserved160: z.number().optional(),
  reserved164: z.number().optional(),
  reserved168: z.number().int().optional(),
  reserved172: z.number().optional(),
  size: z.number().optional(),
  reserved180: z.number().int().optional(),
  reserved184: z.number().int().optional(),
  soundEffectHash: z.number().int().optional(),
  reserved192: z.number().int().optional(),
  reserved196: z.number().int().optional(),
  chainedProjectileHash: z.number().int().optional(),
  reserved204: z.number().int().optional(),
  reserved208: z.number().int().optional(),
  reserved212: z.number().int().optional(),
  reserved216: z.number().int().optional(),
  reserved220: z.number().optional(),
  reserved224: z.number().optional(),
  reserved228: z.number().optional(),
  reserved232: z.number().optional(),
  reserved236: z.number().optional(),
  reserved240: z.number().optional(),
  reserved244: z.number().optional(),
  reserved248: z.number().optional(),
  reserved252: z.number().optional(),
  reserved256: z.number().optional(),
  reserved260: z.number().optional(),
  reserved264: z.number().optional(),
  reserved268: z.number().optional(),
  reserved272: z.number().optional(),
  reserved276: z.number().optional(),
  unitId: z.union([z.null(), z.number().int()]).optional(),
});

export const zPlayableSeriesDetailsDto = z.union([
  z.null(),
  z.object({
    unk2: z.number().int().optional(),
    unk3: z.number().int().optional(),
    unk4: z.number().int().optional(),
    selectOrder: z.number().int().optional(),
    logoSpriteIndex: z.number().int().optional(),
    logoSprite2Index: z.number().int().optional(),
    unk11: z.number().int().optional(),
    movieAssetHash: z.union([z.null(), z.number().int()]).optional(),
  }),
]);

export const zCreateSeriesCommand = z.object({
  id: z.number().int().optional(),
  playableSeries: zPlayableSeriesDetailsDto.optional(),
  slugName: z.string().optional(),
  nameEnglish: z.union([z.null(), z.string()]).optional(),
  nameJapanese: z.union([z.null(), z.string()]).optional(),
  nameChinese: z.union([z.null(), z.string()]).optional(),
});

export const zCreateStatCommand = z.object({
  unitCost: z.number().int().optional(),
  unitCost2: z.number().int().optional(),
  maxHp: z.number().int().optional(),
  downValueThreshold: z.number().int().optional(),
  yorukeValueThreshold: z.number().int().optional(),
  unk20: z.number().int().optional(),
  unk24: z.number().int().optional(),
  unk28: z.number().int().optional(),
  maxBoost: z.number().int().optional(),
  unk36: z.number().optional(),
  unk40: z.number().optional(),
  unk44: z.number().int().optional(),
  gravityMultiplierAir: z.number().optional(),
  gravityMultiplierLand: z.number().optional(),
  unk56: z.number().optional(),
  unk60: z.number().optional(),
  unk64: z.number().optional(),
  unk68: z.number().optional(),
  unk72: z.number().optional(),
  unk76: z.number().optional(),
  unk80: z.number().optional(),
  cameraZoomMultiplier: z.number().optional(),
  unk88: z.number().optional(),
  unk92: z.number().optional(),
  unk96: z.number().optional(),
  unk100: z.number().optional(),
  unk104: z.number().optional(),
  unk108: z.number().optional(),
  sizeMultiplier: z.number().optional(),
  unk116: z.number().optional(),
  unk120: z.number().optional(),
  unk124: z.number().optional(),
  unk128: z.number().optional(),
  unk132: z.number().optional(),
  unk136: z.number().optional(),
  unk140: z.number().optional(),
  unk144: z.number().optional(),
  unk148: z.number().optional(),
  unk152: z.number().optional(),
  unk156: z.number().optional(),
  unk160: z.number().optional(),
  unk164: z.number().optional(),
  unk168: z.number().optional(),
  unk172: z.number().optional(),
  unk176: z.number().optional(),
  unk180: z.number().optional(),
  unk184: z.number().optional(),
  redLockRangeMelee: z.number().optional(),
  redLockRange: z.number().optional(),
  unk196: z.number().optional(),
  unk200: z.number().optional(),
  unk204: z.number().int().optional(),
  unk208: z.number().int().optional(),
  boostReplenish: z.number().int().optional(),
  unk216: z.number().int().optional(),
  boostInitialConsumption: z.number().int().optional(),
  boostFuwaInitialConsumption: z.number().int().optional(),
  boostFlyConsumption: z.number().int().optional(),
  boostGroundStepInitialConsumption: z.number().int().optional(),
  boostGroundStepConsumption: z.number().int().optional(),
  boostAirStepInitialConsumption: z.number().int().optional(),
  boostAirStepConsumption: z.number().int().optional(),
  boostBdInitialConsumption: z.number().int().optional(),
  boostBdConsumption: z.number().int().optional(),
  unk256: z.number().int().optional(),
  unk260: z.number().int().optional(),
  unk264: z.number().int().optional(),
  unk268: z.number().int().optional(),
  boostTransformInitialConsumption: z.number().int().optional(),
  boostTransformConsumption: z.number().int().optional(),
  boostNonVernierActionConsumption: z.number().int().optional(),
  boostPostActionConsumption: z.number().int().optional(),
  boostRainbowStepInitialConsumption: z.number().int().optional(),
  unk292: z.number().int().optional(),
  unk296: z.number().int().optional(),
  unk300: z.number().int().optional(),
  unk304: z.number().int().optional(),
  unk308: z.number().int().optional(),
  unk312: z.number().int().optional(),
  unk316: z.number().int().optional(),
  unk320: z.number().int().optional(),
  unk324: z.number().int().optional(),
  unk328: z.number().int().optional(),
  unk332: z.number().int().optional(),
  assaultBurstRedLockMelee: z.number().optional(),
  assaultBurstRedLock: z.number().optional(),
  assaultBurstDamageDealtMultiplier: z.number().optional(),
  assaultBurstDamageTakenMultiplier: z.number().optional(),
  assaultBurstMobilityMultiplier: z.number().optional(),
  assaultBurstDownValueDealtMultiplier: z.number().optional(),
  assaultBurstBoostConsumptionMultiplier: z.number().optional(),
  unk364: z.number().int().optional(),
  unk368: z.number().int().optional(),
  assaultBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  assaultBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk380: z.number().int().optional(),
  unk384: z.number().optional(),
  unk388: z.number().optional(),
  unk392: z.number().optional(),
  unk396: z.number().optional(),
  blastBurstRedLockMelee: z.number().optional(),
  blastBurstRedLock: z.number().optional(),
  blastBurstDamageDealtMultiplier: z.number().optional(),
  blastBurstDamageTakenMultiplier: z.number().optional(),
  blastBurstMobilityMultiplier: z.number().optional(),
  blastBurstDownValueDealtMultiplier: z.number().optional(),
  blastBurstBoostConsumptionMultiplier: z.number().optional(),
  unk428: z.number().int().optional(),
  unk432: z.number().int().optional(),
  blastBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  blastBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk444: z.number().int().optional(),
  unk448: z.number().optional(),
  unk452: z.number().optional(),
  unk456: z.number().optional(),
  unk460: z.number().optional(),
  thirdBurstRedLockMelee: z.number().optional(),
  thirdBurstRedLock: z.number().optional(),
  thirdBurstDamageDealtMultiplier: z.number().optional(),
  thirdBurstDamageTakenMultiplier: z.number().optional(),
  thirdBurstMobilityMultiplier: z.number().optional(),
  thirdBurstDownValueDealtMultiplier: z.number().optional(),
  thirdBurstBoostConsumptionMultiplier: z.number().optional(),
  unk492: z.number().int().optional(),
  unk496: z.number().int().optional(),
  thirdBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  thirdBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk508: z.number().int().optional(),
  unk512: z.number().optional(),
  unk516: z.number().optional(),
  unk520: z.number().optional(),
  unk524: z.number().optional(),
  fourthBurstRedLockMelee: z.number().optional(),
  fourthBurstRedLock: z.number().optional(),
  fourthBurstDamageDealtMultiplier: z.number().optional(),
  fourthBurstDamageTakenMultiplier: z.number().optional(),
  fourthBurstMobilityMultiplier: z.number().optional(),
  fourthBurstDownValueDealtMultiplier: z.number().optional(),
  fourthBurstBoostConsumptionMultiplier: z.number().optional(),
  unk572: z.number().int().optional(),
  unk576: z.number().int().optional(),
  fourthBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  fourthBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk588: z.number().int().optional(),
  unk592: z.number().optional(),
  unk596: z.number().optional(),
  unk600: z.number().optional(),
  unk604: z.number().optional(),
  unk608: z.number().int().optional(),
  order: z.number().int().optional(),
  unitId: z.union([z.null(), z.number().int()]).optional(),
});

export const zCreateUnitAmmoSlotCommand = z.object({
  ammoHash: z.number().int(),
  unitId: z.number().int(),
  slotOrder: z.number().int(),
});

export const zCreateUnitCommand = z.object({
  unitId: z.number().int().optional(),
  slugName: z.union([z.null(), z.string()]).optional(),
  nameEnglish: z.union([z.null(), z.string()]).optional(),
  nameJapanese: z.union([z.null(), z.string()]).optional(),
  nameChinese: z.union([z.null(), z.string()]).optional(),
  seriesId: z.union([z.null(), z.number().int()]).optional(),
  series: zSeriesVm.optional(),
});

export const zDebugCommand = z.object({});

export const zDecompileScexByPathCommand = z.object({
  sourcePath: z.string(),
  destinationPath: z.string(),
  fileName: z.union([z.null(), z.string()]).optional(),
});

export const zDecompileScexByUnitsCommand = z.object({
  unitIds: z.array(z.number().int()),
  replaceScript: z.boolean().optional().default(false),
});

export const zExportAmmoByPathCommand = z.object({
  exportPath: z.union([z.null(), z.string()]).optional(),
});

export const zExportAmmoCommand = z.object({
  replaceWorking: z.boolean().optional().default(false),
  hotReload: z.boolean().optional().default(false),
});

export const zExportHitboxGroupByPathCommand = z.object({
  hashes: z.union([z.null(), z.array(z.number().int())]).optional(),
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
  outputPath: z.union([z.null(), z.string()]).optional(),
});

export const zExportHitboxGroupCommand = z.object({
  hashes: z.union([z.null(), z.array(z.number().int())]).optional(),
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
  replaceWorking: z.boolean().optional().default(false),
  hotReload: z.boolean().optional().default(false),
});

export const zExportPlayableCharactersCommand = z.object({
  replaceWorking: z.boolean().optional().default(false),
});

export const zExportPlayableSeriesCommand = z.object({
  replaceWorking: z.boolean().optional().default(false),
});

export const zExportTblCommand = z.object({
  versions: z.union([z.null(), z.array(zPatchFileVersion)]).optional(),
  replaceStaging: z.boolean().optional().default(false),
});

export const zExportUnitProjectileByPathCommand = z.object({
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
  exportPath: z.union([z.null(), z.string()]).optional(),
});

export const zExportUnitProjectileCommand = z.object({
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
  replaceWorking: z.boolean().optional().default(false),
  hotReload: z.boolean().optional().default(false),
});

export const zExportUnitStatByPathCommand = z.object({
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
  exportPath: z.union([z.null(), z.string()]).optional(),
});

export const zExportUnitStatCommand = z.object({
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
  replaceWorking: z.boolean().optional().default(false),
});

export const zFileContentHttpResult = z.string();

export const zGetUnitSummaryQueryIncludes = z.enum(["Series"]);

export const zHitboxDto = z.object({
  hash: z.number().int().optional(),
  hitboxType: z.number().int().optional(),
  damage: z.number().int().optional(),
  unk8: z.number().int().optional(),
  downValueThreshold: z.number().int().optional(),
  yorukeValueThreshold: z.number().int().optional(),
  unk20: z.number().int().optional(),
  unk24: z.number().int().optional(),
  damageCorrection: z.number().optional(),
  specialEffect: z.number().int().optional(),
  hitEffect: z.number().int().optional(),
  flyDirection1: z.number().int().optional(),
  flyDirection2: z.number().int().optional(),
  flyDirection3: z.number().int().optional(),
  enemyCameraShakeMultiplier: z.number().int().optional(),
  playerCameraShakeMultiplier: z.number().int().optional(),
  unk56: z.number().int().optional(),
  knockUpAngle: z.number().int().optional(),
  knockUpRange: z.number().int().optional(),
  unk68: z.number().int().optional(),
  multipleHitIntervalFrame: z.number().int().optional(),
  multipleHitCount: z.number().int().optional(),
  enemyStunDuration: z.number().int().optional(),
  playerStunDuration: z.number().int().optional(),
  hitVisualEffect: z.number().int().optional(),
  hitVisualEffectSizeMultiplier: z.number().optional(),
  hitSoundEffectHash: z.number().int().optional(),
  unk100: z.number().int().optional(),
  friendlyDamageFlag: z.number().int().optional(),
  unk108: z.number().int().optional(),
  hitboxGroupHash: z.number().int().optional(),
});

export const zHitboxGroupDto = z.object({
  hash: z.number().int().optional(),
  unitIds: z.array(z.number().int()).optional(),
  hitboxes: z.array(zHitboxDto).optional(),
});

export const zHotReloadScex = z.object({
  sourcePath: z.string(),
});

export const zIFormFile = z.string();

export const zIFormFileCollection = z.array(zIFormFile);

export const zLanguageSettings = z.enum(["English", "Japanese", "Chinese"]);

export const zNullableOfCompressionType = z.enum(["None", "Zlib", "Lzma"]);

export const zPackFhmAssetCommand = z.object({
  assetFileHashes: z.union([z.null(), z.array(z.number().int())]).optional(),
  assetFileTypes: z.union([z.null(), z.array(zAssetFileType)]).optional(),
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
  patchFileVersions: z.union([z.null(), z.array(zPatchFileVersion)]).optional(),
  replaceStaging: z.boolean().optional().default(false),
});

export const zPackPsarcByPatchFilesCommand = z.object({
  patchFileVersions: z.union([z.null(), z.array(zPatchFileVersion)]).optional(),
});

export const zPackPsarcByPathCommand = z.object({
  sourcePath: z.string(),
  destinationPath: z.string(),
  filename: z.union([z.null(), z.string()]).optional(),
  compressionType: zNullableOfCompressionType.optional(),
  compressionLevel: z
    .union([z.null(), z.number().int().default(9)])
    .optional()
    .default(9),
});

export const zPaginatedListOfAmmoDto = z.object({
  items: z.array(zAmmoDto),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zPaginatedListOfAssetFileVm = z.object({
  items: z.array(zAssetFileVm),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zPaginatedListOfHitboxDto = z.object({
  items: z.array(zHitboxDto),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zPaginatedListOfHitboxGroupDto = z.object({
  items: z.array(zHitboxGroupDto),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zPatchFileSummaryVm = z.object({
  assetFile: zAssetFileDto.optional(),
  id: z.union([z.null(), z.string()]),
  tblId: zPatchFileVersion,
  pathInfo: zPathInfoDto.optional(),
  fileInfo: zFileInfoDto.optional(),
  assetFileHash: z.union([z.null(), z.number().int()]).optional(),
});

export const zPaginatedListOfPatchFileSummaryVm = z.object({
  items: z.array(zPatchFileSummaryVm),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zPatchFileVm = z.object({
  id: z.union([z.null(), z.string()]),
  tblId: zPatchFileVersion,
  pathInfo: zPathInfoDto.optional(),
  fileInfo: zFileInfoDto.optional(),
  assetFileHash: z.union([z.null(), z.number().int()]).optional(),
});

export const zPaginatedListOfPatchFileVm = z.object({
  items: z.array(zPatchFileVm),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zProjectileDto = z.object({
  hash: z.number().int().optional(),
  projectileType: z.number().int().optional(),
  hitboxHash: z.union([z.null(), z.number().int()]).optional(),
  modelHash: z.number().int().optional(),
  skeletonIndex: z.number().int().optional(),
  aimType: z.number().int().optional(),
  translateY: z.number().optional(),
  translateZ: z.number().optional(),
  translateX: z.number().optional(),
  rotateX: z.number().optional(),
  rotateZ: z.number().optional(),
  cosmeticHash: z.number().int().optional(),
  unk44: z.number().int().optional(),
  unk48: z.number().int().optional(),
  unk52: z.number().int().optional(),
  unk56: z.number().int().optional(),
  ammoConsumption: z.number().int().optional(),
  durationFrame: z.number().int().optional(),
  maxTravelDistance: z.number().optional(),
  initialSpeed: z.number().optional(),
  acceleration: z.number().optional(),
  accelerationStartFrame: z.number().int().optional(),
  unk84: z.number().optional(),
  maxSpeed: z.number().optional(),
  reserved92: z.number().optional(),
  reserved96: z.number().optional(),
  reserved100: z.number().optional(),
  reserved104: z.number().optional(),
  reserved108: z.number().optional(),
  reserved112: z.number().optional(),
  reserved116: z.number().int().optional(),
  horizontalGuidance: z.number().optional(),
  horizontalGuidanceAngle: z.number().optional(),
  verticalGuidance: z.number().optional(),
  verticalGuidanceAngle: z.number().optional(),
  reserved136: z.number().int().optional(),
  reserved140: z.number().int().optional(),
  reserved144: z.number().optional(),
  reserved148: z.number().optional(),
  reserved152: z.number().optional(),
  reserved156: z.number().optional(),
  reserved160: z.number().optional(),
  reserved164: z.number().optional(),
  reserved168: z.number().int().optional(),
  reserved172: z.number().optional(),
  size: z.number().optional(),
  reserved180: z.number().int().optional(),
  reserved184: z.number().int().optional(),
  soundEffectHash: z.number().int().optional(),
  reserved192: z.number().int().optional(),
  reserved196: z.number().int().optional(),
  chainedProjectileHash: z.number().int().optional(),
  reserved204: z.number().int().optional(),
  reserved208: z.number().int().optional(),
  reserved212: z.number().int().optional(),
  reserved216: z.number().int().optional(),
  reserved220: z.number().optional(),
  reserved224: z.number().optional(),
  reserved228: z.number().optional(),
  reserved232: z.number().optional(),
  reserved236: z.number().optional(),
  reserved240: z.number().optional(),
  reserved244: z.number().optional(),
  reserved248: z.number().optional(),
  reserved252: z.number().optional(),
  reserved256: z.number().optional(),
  reserved260: z.number().optional(),
  reserved264: z.number().optional(),
  reserved268: z.number().optional(),
  reserved272: z.number().optional(),
  reserved276: z.number().optional(),
  unitId: z.union([z.null(), z.number().int()]).optional(),
});

export const zPaginatedListOfProjectileDto = z.object({
  items: z.array(zProjectileDto),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zSeriesDto = z.object({
  id: z.number().int().optional(),
  playableSeries: zPlayableSeriesDetailsDto.optional(),
  slugName: z.string().optional(),
  nameEnglish: z.union([z.null(), z.string()]).optional(),
  nameJapanese: z.union([z.null(), z.string()]).optional(),
  nameChinese: z.union([z.null(), z.string()]).optional(),
});

export const zPaginatedListOfSeriesDto = z.object({
  items: z.array(zSeriesDto),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zSeriesUnitsVm = z.object({
  units: z.array(zUnitSummaryVm).optional(),
  id: z.number().int().optional(),
  slugName: z.string().optional(),
  nameEnglish: z.union([z.null(), z.string()]).optional(),
  nameJapanese: z.union([z.null(), z.string()]).optional(),
  nameChinese: z.union([z.null(), z.string()]).optional(),
});

export const zPaginatedListOfSeriesUnitsVm = z.object({
  items: z.array(zSeriesUnitsVm),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zStatDto = z.object({
  id: z.string().optional(),
  unitCost: z.number().int().optional(),
  unitCost2: z.number().int().optional(),
  maxHp: z.number().int().optional(),
  downValueThreshold: z.number().int().optional(),
  yorukeValueThreshold: z.number().int().optional(),
  unk20: z.number().int().optional(),
  unk24: z.number().int().optional(),
  unk28: z.number().int().optional(),
  maxBoost: z.number().int().optional(),
  unk36: z.number().optional(),
  unk40: z.number().optional(),
  unk44: z.number().int().optional(),
  gravityMultiplierAir: z.number().optional(),
  gravityMultiplierLand: z.number().optional(),
  unk56: z.number().optional(),
  unk60: z.number().optional(),
  unk64: z.number().optional(),
  unk68: z.number().optional(),
  unk72: z.number().optional(),
  unk76: z.number().optional(),
  unk80: z.number().optional(),
  cameraZoomMultiplier: z.number().optional(),
  unk88: z.number().optional(),
  unk92: z.number().optional(),
  unk96: z.number().optional(),
  unk100: z.number().optional(),
  unk104: z.number().optional(),
  unk108: z.number().optional(),
  sizeMultiplier: z.number().optional(),
  unk116: z.number().optional(),
  unk120: z.number().optional(),
  unk124: z.number().optional(),
  unk128: z.number().optional(),
  unk132: z.number().optional(),
  unk136: z.number().optional(),
  unk140: z.number().optional(),
  unk144: z.number().optional(),
  unk148: z.number().optional(),
  unk152: z.number().optional(),
  unk156: z.number().optional(),
  unk160: z.number().optional(),
  unk164: z.number().optional(),
  unk168: z.number().optional(),
  unk172: z.number().optional(),
  unk176: z.number().optional(),
  unk180: z.number().optional(),
  unk184: z.number().optional(),
  redLockRangeMelee: z.number().optional(),
  redLockRange: z.number().optional(),
  unk196: z.number().optional(),
  unk200: z.number().optional(),
  unk204: z.number().int().optional(),
  unk208: z.number().int().optional(),
  boostReplenish: z.number().int().optional(),
  unk216: z.number().int().optional(),
  boostInitialConsumption: z.number().int().optional(),
  boostFuwaInitialConsumption: z.number().int().optional(),
  boostFlyConsumption: z.number().int().optional(),
  boostGroundStepInitialConsumption: z.number().int().optional(),
  boostGroundStepConsumption: z.number().int().optional(),
  boostAirStepInitialConsumption: z.number().int().optional(),
  boostAirStepConsumption: z.number().int().optional(),
  boostBdInitialConsumption: z.number().int().optional(),
  boostBdConsumption: z.number().int().optional(),
  unk256: z.number().int().optional(),
  unk260: z.number().int().optional(),
  unk264: z.number().int().optional(),
  unk268: z.number().int().optional(),
  boostTransformInitialConsumption: z.number().int().optional(),
  boostTransformConsumption: z.number().int().optional(),
  boostNonVernierActionConsumption: z.number().int().optional(),
  boostPostActionConsumption: z.number().int().optional(),
  boostRainbowStepInitialConsumption: z.number().int().optional(),
  unk292: z.number().int().optional(),
  unk296: z.number().int().optional(),
  unk300: z.number().int().optional(),
  unk304: z.number().int().optional(),
  unk308: z.number().int().optional(),
  unk312: z.number().int().optional(),
  unk316: z.number().int().optional(),
  unk320: z.number().int().optional(),
  unk324: z.number().int().optional(),
  unk328: z.number().int().optional(),
  unk332: z.number().int().optional(),
  assaultBurstRedLockMelee: z.number().optional(),
  assaultBurstRedLock: z.number().optional(),
  assaultBurstDamageDealtMultiplier: z.number().optional(),
  assaultBurstDamageTakenMultiplier: z.number().optional(),
  assaultBurstMobilityMultiplier: z.number().optional(),
  assaultBurstDownValueDealtMultiplier: z.number().optional(),
  assaultBurstBoostConsumptionMultiplier: z.number().optional(),
  unk364: z.number().int().optional(),
  unk368: z.number().int().optional(),
  assaultBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  assaultBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk380: z.number().int().optional(),
  unk384: z.number().optional(),
  unk388: z.number().optional(),
  unk392: z.number().optional(),
  unk396: z.number().optional(),
  blastBurstRedLockMelee: z.number().optional(),
  blastBurstRedLock: z.number().optional(),
  blastBurstDamageDealtMultiplier: z.number().optional(),
  blastBurstDamageTakenMultiplier: z.number().optional(),
  blastBurstMobilityMultiplier: z.number().optional(),
  blastBurstDownValueDealtMultiplier: z.number().optional(),
  blastBurstBoostConsumptionMultiplier: z.number().optional(),
  unk428: z.number().int().optional(),
  unk432: z.number().int().optional(),
  blastBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  blastBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk444: z.number().int().optional(),
  unk448: z.number().optional(),
  unk452: z.number().optional(),
  unk456: z.number().optional(),
  unk460: z.number().optional(),
  thirdBurstRedLockMelee: z.number().optional(),
  thirdBurstRedLock: z.number().optional(),
  thirdBurstDamageDealtMultiplier: z.number().optional(),
  thirdBurstDamageTakenMultiplier: z.number().optional(),
  thirdBurstMobilityMultiplier: z.number().optional(),
  thirdBurstDownValueDealtMultiplier: z.number().optional(),
  thirdBurstBoostConsumptionMultiplier: z.number().optional(),
  unk492: z.number().int().optional(),
  unk496: z.number().int().optional(),
  thirdBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  thirdBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk508: z.number().int().optional(),
  unk512: z.number().optional(),
  unk516: z.number().optional(),
  unk520: z.number().optional(),
  unk524: z.number().optional(),
  fourthBurstRedLockMelee: z.number().optional(),
  fourthBurstRedLock: z.number().optional(),
  fourthBurstDamageDealtMultiplier: z.number().optional(),
  fourthBurstDamageTakenMultiplier: z.number().optional(),
  fourthBurstMobilityMultiplier: z.number().optional(),
  fourthBurstDownValueDealtMultiplier: z.number().optional(),
  fourthBurstBoostConsumptionMultiplier: z.number().optional(),
  unk572: z.number().int().optional(),
  unk576: z.number().int().optional(),
  fourthBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  fourthBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk588: z.number().int().optional(),
  unk592: z.number().optional(),
  unk596: z.number().optional(),
  unk600: z.number().optional(),
  unk604: z.number().optional(),
  unk608: z.number().int().optional(),
  order: z.number().int().optional(),
  unitId: z.union([z.null(), z.number().int()]).optional(),
});

export const zPaginatedListOfStatDto = z.object({
  items: z.array(zStatDto),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zUnitProjectileDto = z.object({
  unitId: z.number().int().optional(),
  projectiles: z.array(zProjectileDto).optional(),
});

export const zPaginatedListOfUnitProjectileDto = z.object({
  items: z.array(zUnitProjectileDto),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zUnitAmmoSlotDto = z.object({
  id: z.union([z.null(), z.string()]).optional(),
  slotOrder: z.number().int().optional(),
  ammoHash: z.number().int().optional(),
});

export const zUnitStatDto = z.object({
  id: z.union([z.null(), z.string()]).optional(),
  unitId: z.number().int().optional(),
  ammoSlots: z.array(zUnitAmmoSlotDto).optional(),
});

export const zPaginatedListOfUnitStatDto = z.object({
  items: z.array(zUnitStatDto),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zPaginatedListOfUnitSummaryVm = z.object({
  items: z.array(zUnitSummaryVm),
  pageNumber: z.number().int(),
  totalPages: z.number().int().optional(),
  totalCount: z.number().int(),
  hasPreviousPage: z.boolean().optional(),
  hasNextPage: z.boolean().optional(),
});

export const zTblFileInfoMetadata = z.union([
  z.null(),
  z.object({
    cumulativeIndex: z.number().int(),
    patchNumber: z.number().int(),
    size1: z.number().int(),
    size2: z.number().int(),
    size3: z.number().int(),
    size4: z.number().int(),
    hashName: z.number().int(),
  }),
]);

export const zPatchFileMetadataDto = z.object({
  path: z.union([z.null(), z.string()]).optional(),
  fileInfoMetadata: zTblFileInfoMetadata.optional(),
});

export const zPlayableCharacterDto = z.object({
  unitId: z.number().int().optional(),
  unitIndex: z.number().int().optional(),
  seriesId: z.number().int().optional(),
  unk2: z.number().int().optional(),
  fString: z.union([z.null(), z.string()]).optional(),
  fOutString: z.union([z.null(), z.string()]).optional(),
  pString: z.union([z.null(), z.string()]).optional(),
  unitSelectOrderInSeries: z.number().int().optional(),
  arcadeSmallSpriteIndex: z.number().int().optional(),
  arcadeUnitNameSpriteIndex: z.number().int().optional(),
  unk27: z.number().int().optional(),
  unk112: z.number().int().optional(),
  figurineSpriteIndex: z.number().int().optional(),
  unk114: z.number().int().optional(),
  unk124: z.number().int().optional(),
  unk128: z.number().int().optional(),
  catalogStorePilotCostume2TString: z.union([z.null(), z.string()]).optional(),
  catalogStorePilotCostume2String: z.union([z.null(), z.string()]).optional(),
  catalogStorePilotCostume3TString: z.union([z.null(), z.string()]).optional(),
  catalogStorePilotCostume3String: z.union([z.null(), z.string()]).optional(),
  unk156: z.number().int().optional(),
  arcadeSelectionCostume1SpriteAssetHash: z.number().int().optional(),
  arcadeSelectionCostume2SpriteAssetHash: z.number().int().optional(),
  arcadeSelectionCostume3SpriteAssetHash: z.number().int().optional(),
  loadingLeftCostume1SpriteAssetHash: z.number().int().optional(),
  loadingLeftCostume2SpriteAssetHash: z.number().int().optional(),
  loadingLeftCostume3SpriteAssetHash: z.number().int().optional(),
  loadingRightCostume1SpriteAssetHash: z.number().int().optional(),
  loadingRightCostume2SpriteAssetHash: z.number().int().optional(),
  loadingRightCostume3SpriteAssetHash: z.number().int().optional(),
  genericSelectionCostume1SpriteAssetHash: z.number().int().optional(),
  genericSelectionCostume2SpriteAssetHash: z.number().int().optional(),
  genericSelectionCostume3SpriteAssetHash: z.number().int().optional(),
  loadingTargetUnitSpriteAssetHash: z.number().int().optional(),
  loadingTargetPilotCostume1SpriteAssetHash: z.number().int().optional(),
  loadingTargetPilotCostume2SpriteAssetHash: z.number().int().optional(),
  loadingTargetPilotCostume3SpriteAssetHash: z.number().int().optional(),
  inGameSortieAndAwakeningPilotCostume1SpriteAssetHash: z
    .number()
    .int()
    .optional(),
  inGameSortieAndAwakeningPilotCostume2SpriteAssetHash: z
    .number()
    .int()
    .optional(),
  inGameSortieAndAwakeningPilotCostume3SpriteAssetHash: z
    .number()
    .int()
    .optional(),
  spriteFramesAssetHash: z.number().int().optional(),
  resultSmallUnitSpriteAssetHash: z.number().int().optional(),
  figurineSpriteAssetHash: z.number().int().optional(),
  loadingTargetUnitSmallSpriteAssetHash: z.number().int().optional(),
  catalogStorePilotCostume2SpriteAssetHash: z.number().int().optional(),
  catalogStorePilotCostume3SpriteAssetHash: z.number().int().optional(),
});

export const zResizePatchFileCommand = z.object({
  ids: z.union([z.null(), z.array(z.string().uuid())]).optional(),
  versions: z.union([z.null(), z.array(zPatchFileVersion)]).optional(),
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
  assetFileTypes: z.union([z.null(), z.array(zAssetFileType)]).optional(),
});

export const zSerializeTbl = z.object({
  cumulativeFileInfoCount: z.number().int(),
  fileMetadata: z.array(zPatchFileMetadataDto),
  pathOrder: z.union([z.null(), z.array(z.string())]).optional(),
});

export const zTblDto = z.object({
  cumulativeFileInfoCount: z.number().int(),
  fileMetadata: z.array(zPatchFileMetadataDto),
  pathOrder: z.union([z.null(), z.array(z.string())]).optional(),
});

export const zTblVm = z.object({
  id: z.string(),
  cumulativeAssetIndex: z.number().int().optional(),
});

export const zUnpackFhmAssetCommand = z.object({
  assetFileHashes: z.union([z.null(), z.array(z.number().int())]).optional(),
  assetFileTypes: z.union([z.null(), z.array(zAssetFileType)]).optional(),
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
  patchFileVersions: z.union([z.null(), z.array(zPatchFileVersion)]).optional(),
  replaceWorking: z.boolean().optional().default(false),
});

export const zUnpackPsarcByPatchFilesCommand = z.object({
  patchFileVersions: z.union([z.null(), z.array(zPatchFileVersion)]).optional(),
});

export const zUnpackPsarcByPathCommand = z.object({
  sourceFilePath: z.string(),
  outputDirectoryPath: z.string(),
});

export const zUpdateAmmoCommand = z.object({
  hash: z.number().int(),
  ammoType: z.number().int().optional(),
  maxAmmo: z.number().int().optional(),
  initialAmmo: z.number().int().optional(),
  timedDurationFrame: z.number().int().optional(),
  unk16: z.number().int().optional(),
  reloadType: z.number().int().optional(),
  cooldownDurationFrame: z.number().int().optional(),
  reloadDurationFrame: z.number().int().optional(),
  assaultBurstReloadDurationFrame: z.number().int().optional(),
  blastBurstReloadDurationFrame: z.number().int().optional(),
  unk40: z.number().int().optional(),
  unk44: z.number().int().optional(),
  inactiveUnk48: z.number().int().optional(),
  inactiveCooldownDurationFrame: z.number().int().optional(),
  inactiveReloadDurationFrame: z.number().int().optional(),
  inactiveAssaultBurstReloadDurationFrame: z.number().int().optional(),
  inactiveBlastBurstReloadDurationFrame: z.number().int().optional(),
  inactiveUnk68: z.number().int().optional(),
  inactiveUnk72: z.number().int().optional(),
  burstReplenish: z.number().int().optional(),
  unk80: z.number().int().optional(),
  unk84: z.number().int().optional(),
  unk88: z.number().int().optional(),
  chargeInput: z.number().int().optional(),
  chargeDurationFrame: z.number().int().optional(),
  assaultBurstChargeDurationFrame: z.number().int().optional(),
  blastBurstChargeDurationFrame: z.number().int().optional(),
  unk108: z.number().int().optional(),
  unk112: z.number().int().optional(),
  releaseChargeLingerDurationFrame: z.number().int().optional(),
  maxChargeLevel: z.number().int().optional(),
  unk124: z.number().int().optional(),
  unk128: z.number().int().optional(),
  order: z.number().int().optional(),
  unitId: z.union([z.null(), z.number().int()]).optional(),
});

export const zUpdateAssetFileByHashCommand = z.object({
  hash: z.number().int(),
  order: z.number().int().optional(),
  fileType: z.array(zAssetFileType).optional(),
  unitIds: z.array(z.number().int()).optional(),
});

export const zUpdateHitboxCommand = z.object({
  hash: z.number().int(),
  hitboxType: z.number().int().optional(),
  damage: z.number().int().optional(),
  unk8: z.number().int().optional(),
  downValueThreshold: z.number().int().optional(),
  yorukeValueThreshold: z.number().int().optional(),
  unk20: z.number().int().optional(),
  unk24: z.number().int().optional(),
  damageCorrection: z.number().optional(),
  specialEffect: z.number().int().optional(),
  hitEffect: z.number().int().optional(),
  flyDirection1: z.number().int().optional(),
  flyDirection2: z.number().int().optional(),
  flyDirection3: z.number().int().optional(),
  enemyCameraShakeMultiplier: z.number().int().optional(),
  playerCameraShakeMultiplier: z.number().int().optional(),
  unk56: z.number().int().optional(),
  knockUpAngle: z.number().int().optional(),
  knockUpRange: z.number().int().optional(),
  unk68: z.number().int().optional(),
  multipleHitIntervalFrame: z.number().int().optional(),
  multipleHitCount: z.number().int().optional(),
  enemyStunDuration: z.number().int().optional(),
  playerStunDuration: z.number().int().optional(),
  hitVisualEffect: z.number().int().optional(),
  hitVisualEffectSizeMultiplier: z.number().optional(),
  hitSoundEffectHash: z.number().int().optional(),
  unk100: z.number().int().optional(),
  friendlyDamageFlag: z.number().int().optional(),
  unk108: z.number().int().optional(),
  hitboxGroupHash: z.number().int().optional(),
});

export const zUpdateHitboxGroupCommand = z.object({
  hash: z.number().int(),
  unitIds: z.union([z.null(), z.array(z.number().int())]).optional(),
});

export const zUpdatePatchFileByIdCommand = z.object({
  id: z.string().uuid(),
  tblId: zPatchFileVersion,
  pathInfo: zPathInfoDto.optional(),
  fileInfo: zFileInfoDto.optional(),
  assetFileHash: z.union([z.null(), z.number().int()]).optional(),
});

export const zUpdateProjectileByIdCommand = z.object({
  hash: z.number().int(),
  projectileType: z.number().int().optional(),
  hitboxHash: z.union([z.null(), z.number().int()]).optional(),
  modelHash: z.number().int().optional(),
  skeletonIndex: z.number().int().optional(),
  aimType: z.number().int().optional(),
  translateY: z.number().optional(),
  translateZ: z.number().optional(),
  translateX: z.number().optional(),
  rotateX: z.number().optional(),
  rotateZ: z.number().optional(),
  cosmeticHash: z.number().int().optional(),
  unk44: z.number().int().optional(),
  unk48: z.number().int().optional(),
  unk52: z.number().int().optional(),
  unk56: z.number().int().optional(),
  ammoConsumption: z.number().int().optional(),
  durationFrame: z.number().int().optional(),
  maxTravelDistance: z.number().optional(),
  initialSpeed: z.number().optional(),
  acceleration: z.number().optional(),
  accelerationStartFrame: z.number().int().optional(),
  unk84: z.number().optional(),
  maxSpeed: z.number().optional(),
  reserved92: z.number().optional(),
  reserved96: z.number().optional(),
  reserved100: z.number().optional(),
  reserved104: z.number().optional(),
  reserved108: z.number().optional(),
  reserved112: z.number().optional(),
  reserved116: z.number().int().optional(),
  horizontalGuidance: z.number().optional(),
  horizontalGuidanceAngle: z.number().optional(),
  verticalGuidance: z.number().optional(),
  verticalGuidanceAngle: z.number().optional(),
  reserved136: z.number().int().optional(),
  reserved140: z.number().int().optional(),
  reserved144: z.number().optional(),
  reserved148: z.number().optional(),
  reserved152: z.number().optional(),
  reserved156: z.number().optional(),
  reserved160: z.number().optional(),
  reserved164: z.number().optional(),
  reserved168: z.number().int().optional(),
  reserved172: z.number().optional(),
  size: z.number().optional(),
  reserved180: z.number().int().optional(),
  reserved184: z.number().int().optional(),
  soundEffectHash: z.number().int().optional(),
  reserved192: z.number().int().optional(),
  reserved196: z.number().int().optional(),
  chainedProjectileHash: z.number().int().optional(),
  reserved204: z.number().int().optional(),
  reserved208: z.number().int().optional(),
  reserved212: z.number().int().optional(),
  reserved216: z.number().int().optional(),
  reserved220: z.number().optional(),
  reserved224: z.number().optional(),
  reserved228: z.number().optional(),
  reserved232: z.number().optional(),
  reserved236: z.number().optional(),
  reserved240: z.number().optional(),
  reserved244: z.number().optional(),
  reserved248: z.number().optional(),
  reserved252: z.number().optional(),
  reserved256: z.number().optional(),
  reserved260: z.number().optional(),
  reserved264: z.number().optional(),
  reserved268: z.number().optional(),
  reserved272: z.number().optional(),
  reserved276: z.number().optional(),
  unitId: z.union([z.null(), z.number().int()]).optional(),
});

export const zUpdateStatCommand = z.object({
  id: z.string().uuid(),
  unitCost: z.number().int().optional(),
  unitCost2: z.number().int().optional(),
  maxHp: z.number().int().optional(),
  downValueThreshold: z.number().int().optional(),
  yorukeValueThreshold: z.number().int().optional(),
  unk20: z.number().int().optional(),
  unk24: z.number().int().optional(),
  unk28: z.number().int().optional(),
  maxBoost: z.number().int().optional(),
  unk36: z.number().optional(),
  unk40: z.number().optional(),
  unk44: z.number().int().optional(),
  gravityMultiplierAir: z.number().optional(),
  gravityMultiplierLand: z.number().optional(),
  unk56: z.number().optional(),
  unk60: z.number().optional(),
  unk64: z.number().optional(),
  unk68: z.number().optional(),
  unk72: z.number().optional(),
  unk76: z.number().optional(),
  unk80: z.number().optional(),
  cameraZoomMultiplier: z.number().optional(),
  unk88: z.number().optional(),
  unk92: z.number().optional(),
  unk96: z.number().optional(),
  unk100: z.number().optional(),
  unk104: z.number().optional(),
  unk108: z.number().optional(),
  sizeMultiplier: z.number().optional(),
  unk116: z.number().optional(),
  unk120: z.number().optional(),
  unk124: z.number().optional(),
  unk128: z.number().optional(),
  unk132: z.number().optional(),
  unk136: z.number().optional(),
  unk140: z.number().optional(),
  unk144: z.number().optional(),
  unk148: z.number().optional(),
  unk152: z.number().optional(),
  unk156: z.number().optional(),
  unk160: z.number().optional(),
  unk164: z.number().optional(),
  unk168: z.number().optional(),
  unk172: z.number().optional(),
  unk176: z.number().optional(),
  unk180: z.number().optional(),
  unk184: z.number().optional(),
  redLockRangeMelee: z.number().optional(),
  redLockRange: z.number().optional(),
  unk196: z.number().optional(),
  unk200: z.number().optional(),
  unk204: z.number().int().optional(),
  unk208: z.number().int().optional(),
  boostReplenish: z.number().int().optional(),
  unk216: z.number().int().optional(),
  boostInitialConsumption: z.number().int().optional(),
  boostFuwaInitialConsumption: z.number().int().optional(),
  boostFlyConsumption: z.number().int().optional(),
  boostGroundStepInitialConsumption: z.number().int().optional(),
  boostGroundStepConsumption: z.number().int().optional(),
  boostAirStepInitialConsumption: z.number().int().optional(),
  boostAirStepConsumption: z.number().int().optional(),
  boostBdInitialConsumption: z.number().int().optional(),
  boostBdConsumption: z.number().int().optional(),
  unk256: z.number().int().optional(),
  unk260: z.number().int().optional(),
  unk264: z.number().int().optional(),
  unk268: z.number().int().optional(),
  boostTransformInitialConsumption: z.number().int().optional(),
  boostTransformConsumption: z.number().int().optional(),
  boostNonVernierActionConsumption: z.number().int().optional(),
  boostPostActionConsumption: z.number().int().optional(),
  boostRainbowStepInitialConsumption: z.number().int().optional(),
  unk292: z.number().int().optional(),
  unk296: z.number().int().optional(),
  unk300: z.number().int().optional(),
  unk304: z.number().int().optional(),
  unk308: z.number().int().optional(),
  unk312: z.number().int().optional(),
  unk316: z.number().int().optional(),
  unk320: z.number().int().optional(),
  unk324: z.number().int().optional(),
  unk328: z.number().int().optional(),
  unk332: z.number().int().optional(),
  assaultBurstRedLockMelee: z.number().optional(),
  assaultBurstRedLock: z.number().optional(),
  assaultBurstDamageDealtMultiplier: z.number().optional(),
  assaultBurstDamageTakenMultiplier: z.number().optional(),
  assaultBurstMobilityMultiplier: z.number().optional(),
  assaultBurstDownValueDealtMultiplier: z.number().optional(),
  assaultBurstBoostConsumptionMultiplier: z.number().optional(),
  unk364: z.number().int().optional(),
  unk368: z.number().int().optional(),
  assaultBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  assaultBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk380: z.number().int().optional(),
  unk384: z.number().optional(),
  unk388: z.number().optional(),
  unk392: z.number().optional(),
  unk396: z.number().optional(),
  blastBurstRedLockMelee: z.number().optional(),
  blastBurstRedLock: z.number().optional(),
  blastBurstDamageDealtMultiplier: z.number().optional(),
  blastBurstDamageTakenMultiplier: z.number().optional(),
  blastBurstMobilityMultiplier: z.number().optional(),
  blastBurstDownValueDealtMultiplier: z.number().optional(),
  blastBurstBoostConsumptionMultiplier: z.number().optional(),
  unk428: z.number().int().optional(),
  unk432: z.number().int().optional(),
  blastBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  blastBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk444: z.number().int().optional(),
  unk448: z.number().optional(),
  unk452: z.number().optional(),
  unk456: z.number().optional(),
  unk460: z.number().optional(),
  thirdBurstRedLockMelee: z.number().optional(),
  thirdBurstRedLock: z.number().optional(),
  thirdBurstDamageDealtMultiplier: z.number().optional(),
  thirdBurstDamageTakenMultiplier: z.number().optional(),
  thirdBurstMobilityMultiplier: z.number().optional(),
  thirdBurstDownValueDealtMultiplier: z.number().optional(),
  thirdBurstBoostConsumptionMultiplier: z.number().optional(),
  unk492: z.number().int().optional(),
  unk496: z.number().int().optional(),
  thirdBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  thirdBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk508: z.number().int().optional(),
  unk512: z.number().optional(),
  unk516: z.number().optional(),
  unk520: z.number().optional(),
  unk524: z.number().optional(),
  fourthBurstRedLockMelee: z.number().optional(),
  fourthBurstRedLock: z.number().optional(),
  fourthBurstDamageDealtMultiplier: z.number().optional(),
  fourthBurstDamageTakenMultiplier: z.number().optional(),
  fourthBurstMobilityMultiplier: z.number().optional(),
  fourthBurstDownValueDealtMultiplier: z.number().optional(),
  fourthBurstBoostConsumptionMultiplier: z.number().optional(),
  unk572: z.number().int().optional(),
  unk576: z.number().int().optional(),
  fourthBurstDamageDealtBurstGaugeIncreaseMultiplier: z.number().optional(),
  fourthBurstDamageTakenBurstGaugeIncreaseMultiplier: z.number().optional(),
  unk588: z.number().int().optional(),
  unk592: z.number().optional(),
  unk596: z.number().optional(),
  unk600: z.number().optional(),
  unk604: z.number().optional(),
  unk608: z.number().int().optional(),
  order: z.number().int().optional(),
  unitId: z.union([z.null(), z.number().int()]).optional(),
});

export const zUpdateUnitAmmoSlotCommand = z.object({
  id: z.string().uuid(),
  unitId: z.number().int(),
  slotOrder: z.union([z.null(), z.number().int()]).optional(),
  ammoHash: z.union([z.null(), z.number().int()]).optional(),
});

export const zUpdateUnitCommand = z.object({
  unitId: z.number().int().optional(),
  slugName: z.union([z.null(), z.string()]).optional(),
  nameEnglish: z.union([z.null(), z.string()]).optional(),
  nameJapanese: z.union([z.null(), z.string()]).optional(),
  nameChinese: z.union([z.null(), z.string()]).optional(),
  seriesId: z.union([z.null(), z.number().int()]).optional(),
  series: zSeriesVm.optional(),
});

export const zUpsertConfigCommand = z.object({
  key: z.string(),
  value: z.string(),
});

export const zUpsertPlayableCharactersCommand = z.object({
  unitId: z.number().int(),
  unitIndex: z.number().int().optional(),
  seriesId: z.number().int().optional(),
  unk2: z.number().int().optional(),
  fString: z.union([z.null(), z.string()]).optional(),
  fOutString: z.union([z.null(), z.string()]).optional(),
  pString: z.union([z.null(), z.string()]).optional(),
  unitSelectOrderInSeries: z.number().int().optional(),
  arcadeSmallSpriteIndex: z.number().int().optional(),
  arcadeUnitNameSpriteIndex: z.number().int().optional(),
  unk27: z.number().int().optional(),
  unk112: z.number().int().optional(),
  figurineSpriteIndex: z.number().int().optional(),
  unk114: z.number().int().optional(),
  unk124: z.number().int().optional(),
  unk128: z.number().int().optional(),
  catalogStorePilotCostume2TString: z.union([z.null(), z.string()]).optional(),
  catalogStorePilotCostume2String: z.union([z.null(), z.string()]).optional(),
  catalogStorePilotCostume3TString: z.union([z.null(), z.string()]).optional(),
  catalogStorePilotCostume3String: z.union([z.null(), z.string()]).optional(),
  unk156: z.number().int().optional(),
  arcadeSelectionCostume1SpriteAssetHash: z.number().int().optional(),
  arcadeSelectionCostume2SpriteAssetHash: z.number().int().optional(),
  arcadeSelectionCostume3SpriteAssetHash: z.number().int().optional(),
  loadingLeftCostume1SpriteAssetHash: z.number().int().optional(),
  loadingLeftCostume2SpriteAssetHash: z.number().int().optional(),
  loadingLeftCostume3SpriteAssetHash: z.number().int().optional(),
  loadingRightCostume1SpriteAssetHash: z.number().int().optional(),
  loadingRightCostume2SpriteAssetHash: z.number().int().optional(),
  loadingRightCostume3SpriteAssetHash: z.number().int().optional(),
  genericSelectionCostume1SpriteAssetHash: z.number().int().optional(),
  genericSelectionCostume2SpriteAssetHash: z.number().int().optional(),
  genericSelectionCostume3SpriteAssetHash: z.number().int().optional(),
  loadingTargetUnitSpriteAssetHash: z.number().int().optional(),
  loadingTargetPilotCostume1SpriteAssetHash: z.number().int().optional(),
  loadingTargetPilotCostume2SpriteAssetHash: z.number().int().optional(),
  loadingTargetPilotCostume3SpriteAssetHash: z.number().int().optional(),
  inGameSortieAndAwakeningPilotCostume1SpriteAssetHash: z
    .number()
    .int()
    .optional(),
  inGameSortieAndAwakeningPilotCostume2SpriteAssetHash: z
    .number()
    .int()
    .optional(),
  inGameSortieAndAwakeningPilotCostume3SpriteAssetHash: z
    .number()
    .int()
    .optional(),
  spriteFramesAssetHash: z.number().int().optional(),
  resultSmallUnitSpriteAssetHash: z.number().int().optional(),
  figurineSpriteAssetHash: z.number().int().optional(),
  loadingTargetUnitSmallSpriteAssetHash: z.number().int().optional(),
  catalogStorePilotCostume2SpriteAssetHash: z.number().int().optional(),
  catalogStorePilotCostume3SpriteAssetHash: z.number().int().optional(),
});

export const zGetApiAmmoResponse = zPaginatedListOfAmmoDto;

export const zGetApiAmmoByHashResponse = zAmmoDto;

export const zGetApiConfigsResponse = z.array(zConfigDto);

export const zGetApiConfigsByKeyResponse = z.string();

export const zPostApiFhmPackResponse = zFileContentHttpResult;

export const zPostApiFhmUnpackResponse = zFileContentHttpResult;

export const zGetApiScexDecompiledByUnitIdResponse = z.string();

export const zGetApiUnitsResponse = zPaginatedListOfUnitSummaryVm;

export const zGetApiUnitsByUnitIdResponse = zUnitSummaryVm;

export const zGetApiUnitsByUnitIdPlayableCharactersResponse =
  zPlayableCharacterDto;

export const zGetApiPatchFilesResponse = zPaginatedListOfPatchFileVm;

export const zGetApiPatchFilesSummaryResponse =
  zPaginatedListOfPatchFileSummaryVm;

export const zGetApiPatchFilesByIdResponse = zPatchFileVm;

export const zGetApiTblDeserializePathResponse = zTblDto;

export const zPostApiTblDeserializeResponse = zTblDto;

export const zGetApiTblByIdResponse = zTblVm;

export const zGetApiStatsResponse = zPaginatedListOfStatDto;

export const zGetApiStatsByIdResponse = zStatDto;

export const zGetApiUnitStatsResponse = zPaginatedListOfUnitStatDto;

export const zGetApiUnitStatsByUnitIdResponse = zUnitStatDto;

export const zGetApiUnitStatsAmmoSlotByUnitIdResponse =
  z.array(zUnitAmmoSlotDto);

export const zPostApiUnitStatsAmmoSlotResponse = z.string().uuid();

export const zGetApiSeriesResponse = zPaginatedListOfSeriesDto;

export const zGetApiSeriesUnitsResponse = zPaginatedListOfSeriesUnitsVm;

export const zGetApiProjectilesResponse = zPaginatedListOfProjectileDto;

export const zGetApiProjectilesByHashResponse = zProjectileDto;

export const zGetApiUnitProjectilesResponse = zPaginatedListOfUnitProjectileDto;

export const zGetApiUnitProjectilesByUnitIdResponse = zUnitProjectileDto;

export const zGetApiHitboxesResponse = zPaginatedListOfHitboxDto;

export const zGetApiHitboxesByHashResponse = zHitboxDto;

export const zGetApiHitboxGroupsResponse = zPaginatedListOfHitboxGroupDto;

export const zGetApiHitboxGroupsHashByHashResponse = zHitboxGroupDto;

export const zGetApiHitboxGroupsUnitIdByUnitIdResponse = zHitboxGroupDto;

export const zGetApiAssetsResponse = zPaginatedListOfAssetFileVm;

export const zGetApiAssetsByHashResponse = zAssetFileVm;
