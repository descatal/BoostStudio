/* tslint:disable */
/* eslint-disable */
/**
 * BoostStudio.Web | exvs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { GetApiAmmoHashParameterInner } from "./GetApiAmmoHashParameterInner";
import {
  GetApiAmmoHashParameterInnerFromJSON,
  GetApiAmmoHashParameterInnerToJSON
} from "./GetApiAmmoHashParameterInner";

/**
 * 
 * @export
 * @interface DecompileScexByUnitsCommand
 */
export interface DecompileScexByUnitsCommand {
    /**
     * 
     * @type {Array<GetApiAmmoHashParameterInner>}
     * @memberof DecompileScexByUnitsCommand
     */
    unitIds: Array<GetApiAmmoHashParameterInner>;
    /**
     * 
     * @type {boolean}
     * @memberof DecompileScexByUnitsCommand
     */
    replaceScript?: boolean;
}

/**
 * Check if a given object implements the DecompileScexByUnitsCommand interface.
 */
export function instanceOfDecompileScexByUnitsCommand(value: object): value is DecompileScexByUnitsCommand {
    if (!('unitIds' in value) || value['unitIds'] === undefined) return false;
    return true;
}

export function DecompileScexByUnitsCommandFromJSON(json: any): DecompileScexByUnitsCommand {
    return DecompileScexByUnitsCommandFromJSONTyped(json, false);
}

export function DecompileScexByUnitsCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): DecompileScexByUnitsCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'unitIds': ((json['unitIds'] as Array<any>).map(GetApiAmmoHashParameterInnerFromJSON)),
        'replaceScript': json['replaceScript'] == null ? undefined : json['replaceScript'],
    };
}

export function DecompileScexByUnitsCommandToJSON(value?: DecompileScexByUnitsCommand | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'unitIds': ((value['unitIds'] as Array<any>).map(GetApiAmmoHashParameterInnerToJSON)),
        'replaceScript': value['replaceScript'],
    };
}

