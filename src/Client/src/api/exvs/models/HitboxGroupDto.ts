/* tslint:disable */
/* eslint-disable */
/**
 * BoostStudio.Web | exvs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HitboxDto } from './HitboxDto';
import {
    HitboxDtoFromJSON,
    HitboxDtoFromJSONTyped,
    HitboxDtoToJSON,
} from './HitboxDto';

/**
 * 
 * @export
 * @interface HitboxGroupDto
 */
export interface HitboxGroupDto {
    /**
     * 
     * @type {Array<number>}
     * @memberof HitboxGroupDto
     */
    unitIds?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof HitboxGroupDto
     */
    hash?: number;
    /**
     * 
     * @type {Array<HitboxDto>}
     * @memberof HitboxGroupDto
     */
    hitboxes?: Array<HitboxDto>;
}

/**
 * Check if a given object implements the HitboxGroupDto interface.
 */
export function instanceOfHitboxGroupDto(value: object): value is HitboxGroupDto {
    return true;
}

export function HitboxGroupDtoFromJSON(json: any): HitboxGroupDto {
    return HitboxGroupDtoFromJSONTyped(json, false);
}

export function HitboxGroupDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): HitboxGroupDto {
    if (json == null) {
        return json;
    }
    return {
        
        'unitIds': json['unitIds'] == null ? undefined : json['unitIds'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'hitboxes': json['hitboxes'] == null ? undefined : ((json['hitboxes'] as Array<any>).map(HitboxDtoFromJSON)),
    };
}

export function HitboxGroupDtoToJSON(value?: HitboxGroupDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'unitIds': value['unitIds'],
        'hash': value['hash'],
        'hitboxes': value['hitboxes'] == null ? undefined : ((value['hitboxes'] as Array<any>).map(HitboxDtoToJSON)),
    };
}

