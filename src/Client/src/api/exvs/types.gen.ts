// This file is auto-generated by @hey-api/openapi-ts

export type AmmoDto = {
    hash?: number;
    ammoType?: number;
    maxAmmo?: number;
    initialAmmo?: number;
    timedDurationFrame?: number;
    unk16?: number;
    reloadType?: number;
    cooldownDurationFrame?: number;
    reloadDurationFrame?: number;
    assaultBurstReloadDurationFrame?: number;
    blastBurstReloadDurationFrame?: number;
    unk40?: number;
    unk44?: number;
    inactiveUnk48?: number;
    inactiveCooldownDurationFrame?: number;
    inactiveReloadDurationFrame?: number;
    inactiveAssaultBurstReloadDurationFrame?: number;
    inactiveBlastBurstReloadDurationFrame?: number;
    inactiveUnk68?: number;
    inactiveUnk72?: number;
    burstReplenish?: number;
    unk80?: number;
    unk84?: number;
    unk88?: number;
    chargeInput?: number;
    chargeDurationFrame?: number;
    assaultBurstChargeDurationFrame?: number;
    blastBurstChargeDurationFrame?: number;
    unk108?: number;
    unk112?: number;
    releaseChargeLingerDurationFrame?: number;
    maxChargeLevel?: number;
    unk124?: number;
    unk128?: number;
    order?: number;
    unitId?: null | number;
};

export type AssetFileDto = null | {
    hash: number;
    order: number;
    fileType: Array<AssetFileType>;
    units: Array<UnitSummaryVm>;
};

export type AssetFileType = 'Unknown' | 'Dummy' | 'Animations' | 'ModelAndTexture' | 'Data' | 'Effects' | 'SoundEffects' | 'InGamePilotVoiceLines' | 'SpriteFrames' | 'WeaponSprites' | 'VoiceLinesMetadata' | 'PilotVoiceLines' | 'ArcadeSelectionCostume1Sprite' | 'ArcadeSelectionCostume2Sprite' | 'ArcadeSelectionCostume3Sprite' | 'LoadingLeftCostume1Sprite' | 'LoadingLeftCostume2Sprite' | 'LoadingLeftCostume3Sprite' | 'LoadingRightCostume1Sprite' | 'LoadingRightCostume2Sprite' | 'LoadingRightCostume3Sprite' | 'GenericSelectionCostume1Sprite' | 'GenericSelectionCostume2Sprite' | 'GenericSelectionCostume3Sprite' | 'LoadingTargetUnitSprite' | 'LoadingTargetPilotCostume1Sprite' | 'LoadingTargetPilotCostume2Sprite' | 'LoadingTargetPilotCostume3Sprite' | 'InGameSortieAndAwakeningPilotCostume1Sprite' | 'InGameSortieAndAwakeningPilotCostume2Sprite' | 'InGameSortieAndAwakeningPilotCostume3Sprite' | 'ResultSmallUnitSprite' | 'FigurineSprite' | 'LoadingTargetUnitSmallSprite' | 'CatalogStorePilotCostume2Sprite' | 'CatalogStorePilotCostume3Sprite' | 'Movie' | 'Hitboxes' | 'Projectiles' | 'Ammo' | 'ListInfo' | 'UnitCostInfo' | 'SharedFigurineSprites' | 'MapSelectSprites' | 'ArcadeSelectSmallSprites' | 'ArcadeSelectUnitNameSprites' | 'CameraConfigs' | 'CommonEffects' | 'CommonEffectParticles' | 'CosmeticInfo' | 'TextStrings' | 'SeriesLogoSprites' | 'SeriesLogoSprites2';

export type AssetFileVm = {
    hash: number;
    order?: number;
    fileType?: Array<AssetFileType>;
    unitIds?: Array<number>;
};

export type BulkCreateUnitCommand = {
    units: Array<UnitSummaryVm>;
};

export type CompileScexByPathCommand = {
    sourcePath: string;
    destinationPath: string;
    fileName?: null | string;
    hotReload?: boolean;
};

export type CompileScexByUnitsCommand = {
    unitIds: Array<number>;
    replaceWorking?: boolean;
    hotReload?: boolean;
};

export type CompressionFormats = 'Zip' | 'Tar';

export type ConfigDto = {
    key: string;
    value: string;
};

export type CreateAmmoCommand = {
    ammoType?: number;
    maxAmmo?: number;
    initialAmmo?: number;
    timedDurationFrame?: number;
    unk16?: number;
    reloadType?: number;
    cooldownDurationFrame?: number;
    reloadDurationFrame?: number;
    assaultBurstReloadDurationFrame?: number;
    blastBurstReloadDurationFrame?: number;
    unk40?: number;
    unk44?: number;
    inactiveUnk48?: number;
    inactiveCooldownDurationFrame?: number;
    inactiveReloadDurationFrame?: number;
    inactiveAssaultBurstReloadDurationFrame?: number;
    inactiveBlastBurstReloadDurationFrame?: number;
    inactiveUnk68?: number;
    inactiveUnk72?: number;
    burstReplenish?: number;
    unk80?: number;
    unk84?: number;
    unk88?: number;
    chargeInput?: number;
    chargeDurationFrame?: number;
    assaultBurstChargeDurationFrame?: number;
    blastBurstChargeDurationFrame?: number;
    unk108?: number;
    unk112?: number;
    releaseChargeLingerDurationFrame?: number;
    maxChargeLevel?: number;
    unk124?: number;
    unk128?: number;
    order?: number;
    unitId?: null | number;
};

export type CreateAssetFileCommand = {
    order?: number;
    fileType?: Array<AssetFileType>;
    unitIds?: Array<number>;
};

export type CreateHitboxCommand = {
    hitboxType?: number;
    damage?: number;
    unk8?: number;
    downValueThreshold?: number;
    yorukeValueThreshold?: number;
    unk20?: number;
    unk24?: number;
    damageCorrection?: number;
    specialEffect?: number;
    hitEffect?: number;
    flyDirection1?: number;
    flyDirection2?: number;
    flyDirection3?: number;
    enemyCameraShakeMultiplier?: number;
    playerCameraShakeMultiplier?: number;
    unk56?: number;
    knockUpAngle?: number;
    knockUpRange?: number;
    unk68?: number;
    multipleHitIntervalFrame?: number;
    multipleHitCount?: number;
    enemyStunDuration?: number;
    playerStunDuration?: number;
    hitVisualEffect?: number;
    hitVisualEffectSizeMultiplier?: number;
    hitSoundEffectHash?: number;
    unk100?: number;
    friendlyDamageFlag?: number;
    unk108?: number;
    hitboxGroupHash?: number;
};

export type CreateHitboxGroupCommand = {
    hash: number;
    unitIds?: null | Array<number>;
};

export type CreatePatchFileCommand = {
    tblId: PatchFileVersion;
    pathInfo?: PathInfoDto;
    fileInfo?: FileInfoDto;
    assetFileHash?: null | number;
};

export type CreateProjectileCommand = {
    projectileType?: number;
    hitboxHash?: null | number;
    modelHash?: number;
    skeletonIndex?: number;
    aimType?: number;
    translateY?: number;
    translateZ?: number;
    translateX?: number;
    rotateX?: number;
    rotateZ?: number;
    cosmeticHash?: number;
    unk44?: number;
    unk48?: number;
    unk52?: number;
    unk56?: number;
    ammoConsumption?: number;
    durationFrame?: number;
    maxTravelDistance?: number;
    initialSpeed?: number;
    acceleration?: number;
    accelerationStartFrame?: number;
    unk84?: number;
    maxSpeed?: number;
    reserved92?: number;
    reserved96?: number;
    reserved100?: number;
    reserved104?: number;
    reserved108?: number;
    reserved112?: number;
    reserved116?: number;
    horizontalGuidance?: number;
    horizontalGuidanceAngle?: number;
    verticalGuidance?: number;
    verticalGuidanceAngle?: number;
    reserved136?: number;
    reserved140?: number;
    reserved144?: number;
    reserved148?: number;
    reserved152?: number;
    reserved156?: number;
    reserved160?: number;
    reserved164?: number;
    reserved168?: number;
    reserved172?: number;
    size?: number;
    reserved180?: number;
    reserved184?: number;
    soundEffectHash?: number;
    reserved192?: number;
    reserved196?: number;
    chainedProjectileHash?: number;
    reserved204?: number;
    reserved208?: number;
    reserved212?: number;
    reserved216?: number;
    reserved220?: number;
    reserved224?: number;
    reserved228?: number;
    reserved232?: number;
    reserved236?: number;
    reserved240?: number;
    reserved244?: number;
    reserved248?: number;
    reserved252?: number;
    reserved256?: number;
    reserved260?: number;
    reserved264?: number;
    reserved268?: number;
    reserved272?: number;
    reserved276?: number;
    unitId?: null | number;
};

export type CreateSeriesCommand = {
    id?: number;
    playableSeries?: PlayableSeriesDetailsDto;
    slugName?: string;
    nameEnglish?: null | string;
    nameJapanese?: null | string;
    nameChinese?: null | string;
};

export type CreateStatCommand = {
    unitCost?: number;
    unitCost2?: number;
    maxHp?: number;
    downValueThreshold?: number;
    yorukeValueThreshold?: number;
    unk20?: number;
    unk24?: number;
    unk28?: number;
    maxBoost?: number;
    unk36?: number;
    unk40?: number;
    unk44?: number;
    gravityMultiplierAir?: number;
    gravityMultiplierLand?: number;
    unk56?: number;
    unk60?: number;
    unk64?: number;
    unk68?: number;
    unk72?: number;
    unk76?: number;
    unk80?: number;
    cameraZoomMultiplier?: number;
    unk88?: number;
    unk92?: number;
    unk96?: number;
    unk100?: number;
    unk104?: number;
    unk108?: number;
    sizeMultiplier?: number;
    unk116?: number;
    unk120?: number;
    unk124?: number;
    unk128?: number;
    unk132?: number;
    unk136?: number;
    unk140?: number;
    unk144?: number;
    unk148?: number;
    unk152?: number;
    unk156?: number;
    unk160?: number;
    unk164?: number;
    unk168?: number;
    unk172?: number;
    unk176?: number;
    unk180?: number;
    unk184?: number;
    redLockRangeMelee?: number;
    redLockRange?: number;
    unk196?: number;
    unk200?: number;
    unk204?: number;
    unk208?: number;
    boostReplenish?: number;
    unk216?: number;
    boostInitialConsumption?: number;
    boostFuwaInitialConsumption?: number;
    boostFlyConsumption?: number;
    boostGroundStepInitialConsumption?: number;
    boostGroundStepConsumption?: number;
    boostAirStepInitialConsumption?: number;
    boostAirStepConsumption?: number;
    boostBdInitialConsumption?: number;
    boostBdConsumption?: number;
    unk256?: number;
    unk260?: number;
    unk264?: number;
    unk268?: number;
    boostTransformInitialConsumption?: number;
    boostTransformConsumption?: number;
    boostNonVernierActionConsumption?: number;
    boostPostActionConsumption?: number;
    boostRainbowStepInitialConsumption?: number;
    unk292?: number;
    unk296?: number;
    unk300?: number;
    unk304?: number;
    unk308?: number;
    unk312?: number;
    unk316?: number;
    unk320?: number;
    unk324?: number;
    unk328?: number;
    unk332?: number;
    assaultBurstRedLockMelee?: number;
    assaultBurstRedLock?: number;
    assaultBurstDamageDealtMultiplier?: number;
    assaultBurstDamageTakenMultiplier?: number;
    assaultBurstMobilityMultiplier?: number;
    assaultBurstDownValueDealtMultiplier?: number;
    assaultBurstBoostConsumptionMultiplier?: number;
    unk364?: number;
    unk368?: number;
    assaultBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    assaultBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk380?: number;
    unk384?: number;
    unk388?: number;
    unk392?: number;
    unk396?: number;
    blastBurstRedLockMelee?: number;
    blastBurstRedLock?: number;
    blastBurstDamageDealtMultiplier?: number;
    blastBurstDamageTakenMultiplier?: number;
    blastBurstMobilityMultiplier?: number;
    blastBurstDownValueDealtMultiplier?: number;
    blastBurstBoostConsumptionMultiplier?: number;
    unk428?: number;
    unk432?: number;
    blastBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    blastBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk444?: number;
    unk448?: number;
    unk452?: number;
    unk456?: number;
    unk460?: number;
    thirdBurstRedLockMelee?: number;
    thirdBurstRedLock?: number;
    thirdBurstDamageDealtMultiplier?: number;
    thirdBurstDamageTakenMultiplier?: number;
    thirdBurstMobilityMultiplier?: number;
    thirdBurstDownValueDealtMultiplier?: number;
    thirdBurstBoostConsumptionMultiplier?: number;
    unk492?: number;
    unk496?: number;
    thirdBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    thirdBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk508?: number;
    unk512?: number;
    unk516?: number;
    unk520?: number;
    unk524?: number;
    fourthBurstRedLockMelee?: number;
    fourthBurstRedLock?: number;
    fourthBurstDamageDealtMultiplier?: number;
    fourthBurstDamageTakenMultiplier?: number;
    fourthBurstMobilityMultiplier?: number;
    fourthBurstDownValueDealtMultiplier?: number;
    fourthBurstBoostConsumptionMultiplier?: number;
    unk572?: number;
    unk576?: number;
    fourthBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    fourthBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk588?: number;
    unk592?: number;
    unk596?: number;
    unk600?: number;
    unk604?: number;
    unk608?: number;
    order?: number;
    unitId?: null | number;
};

export type CreateUnitAmmoSlotCommand = {
    ammoHash: number;
    unitId: number;
    slotOrder: number;
};

export type CreateUnitCommand = {
    unitId?: number;
    slugName?: null | string;
    nameEnglish?: null | string;
    nameJapanese?: null | string;
    nameChinese?: null | string;
    seriesId?: null | number;
    series?: SeriesVm;
};

export type DebugCommand = {
    [key: string]: unknown;
};

export type DecompileScexByPathCommand = {
    sourcePath: string;
    destinationPath: string;
    fileName?: null | string;
};

export type DecompileScexByUnitsCommand = {
    unitIds: Array<number>;
    replaceScript?: boolean;
};

export type ExportAmmoByPathCommand = {
    exportPath?: null | string;
};

export type ExportAmmoCommand = {
    replaceWorking?: boolean;
    hotReload?: boolean;
};

export type ExportHitboxGroupByPathCommand = {
    hashes?: null | Array<number>;
    unitIds?: null | Array<number>;
    outputPath?: null | string;
};

export type ExportHitboxGroupCommand = {
    hashes?: null | Array<number>;
    unitIds?: null | Array<number>;
    replaceWorking?: boolean;
    hotReload?: boolean;
};

export type ExportPlayableCharactersCommand = {
    replaceWorking?: boolean;
};

export type ExportPlayableSeriesCommand = {
    replaceWorking?: boolean;
};

export type ExportTblCommand = {
    versions?: null | Array<PatchFileVersion>;
    replaceStaging?: boolean;
};

export type ExportUnitProjectileByPathCommand = {
    unitIds?: null | Array<number>;
    exportPath?: null | string;
};

export type ExportUnitProjectileCommand = {
    unitIds?: null | Array<number>;
    replaceWorking?: boolean;
    hotReload?: boolean;
};

export type ExportUnitStatByPathCommand = {
    unitIds?: null | Array<number>;
    exportPath?: null | string;
};

export type ExportUnitStatCommand = {
    unitIds?: null | Array<number>;
    replaceWorking?: boolean;
};

export type FileContentHttpResult = Blob | File;

export type FileInfoDto = null | {
    version: PatchFileVersion;
    size1: number;
    size2: number;
    size3: number;
    size4: number;
};

export type GetUnitSummaryQueryIncludes = 'Series';

export type HitboxDto = {
    hash?: number;
    hitboxType?: number;
    damage?: number;
    unk8?: number;
    downValueThreshold?: number;
    yorukeValueThreshold?: number;
    unk20?: number;
    unk24?: number;
    damageCorrection?: number;
    specialEffect?: number;
    hitEffect?: number;
    flyDirection1?: number;
    flyDirection2?: number;
    flyDirection3?: number;
    enemyCameraShakeMultiplier?: number;
    playerCameraShakeMultiplier?: number;
    unk56?: number;
    knockUpAngle?: number;
    knockUpRange?: number;
    unk68?: number;
    multipleHitIntervalFrame?: number;
    multipleHitCount?: number;
    enemyStunDuration?: number;
    playerStunDuration?: number;
    hitVisualEffect?: number;
    hitVisualEffectSizeMultiplier?: number;
    hitSoundEffectHash?: number;
    unk100?: number;
    friendlyDamageFlag?: number;
    unk108?: number;
    hitboxGroupHash?: number;
};

export type HitboxGroupDto = {
    hash?: number;
    unitIds?: Array<number>;
    hitboxes?: Array<HitboxDto>;
};

export type HotReloadScex = {
    sourcePath: string;
};

export type IFormFile = Blob | File;

export type IFormFileCollection = Array<IFormFile>;

export type LanguageSettings = 'English' | 'Japanese' | 'Chinese';

export type NullableOfCompressionType = 'None' | 'Zlib' | 'Lzma';

export type PackFhmAssetCommand = {
    assetFileHashes?: null | Array<number>;
    assetFileTypes?: null | Array<AssetFileType>;
    unitIds?: null | Array<number>;
    patchFileVersions?: null | Array<PatchFileVersion>;
    replaceStaging?: boolean;
};

export type PackPsarcByPatchFilesCommand = {
    patchFileVersions?: null | Array<PatchFileVersion>;
};

export type PackPsarcByPathCommand = {
    sourcePath: string;
    destinationPath: string;
    filename?: null | string;
    compressionType?: NullableOfCompressionType;
    compressionLevel?: null | number;
};

export type PaginatedListOfAmmoDto = {
    items: Array<AmmoDto>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfAssetFileVm = {
    items: Array<AssetFileVm>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfHitboxDto = {
    items: Array<HitboxDto>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfHitboxGroupDto = {
    items: Array<HitboxGroupDto>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfPatchFileSummaryVm = {
    items: Array<PatchFileSummaryVm>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfPatchFileVm = {
    items: Array<PatchFileVm>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfProjectileDto = {
    items: Array<ProjectileDto>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfSeriesDto = {
    items: Array<SeriesDto>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfSeriesUnitsVm = {
    items: Array<SeriesUnitsVm>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfStatDto = {
    items: Array<StatDto>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfUnitProjectileDto = {
    items: Array<UnitProjectileDto>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfUnitStatDto = {
    items: Array<UnitStatDto>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PaginatedListOfUnitSummaryVm = {
    items: Array<UnitSummaryVm>;
    pageNumber: number;
    totalPages?: number;
    totalCount: number;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
};

export type PatchFileMetadataDto = {
    path?: null | string;
    fileInfoMetadata?: TblFileInfoMetadata;
};

export type PatchFileSummaryVm = {
    assetFile?: AssetFileDto;
    id: null | string;
    tblId: PatchFileVersion;
    pathInfo?: PathInfoDto;
    fileInfo?: FileInfoDto;
    assetFileHash?: null | number;
};

export type PatchFileVersion = 'Base' | 'Patch1' | 'Patch2' | 'Patch3' | 'Patch4' | 'Patch5' | 'Patch6';

export type PatchFileVm = {
    id: null | string;
    tblId: PatchFileVersion;
    pathInfo?: PathInfoDto;
    fileInfo?: FileInfoDto;
    assetFileHash?: null | number;
};

export type PathInfoDto = null | {
    path: string;
    order?: null | number;
};

export type PlayableCharacterDto = {
    unitId?: number;
    unitIndex?: number;
    seriesId?: number;
    unk2?: number;
    fString?: null | string;
    fOutString?: null | string;
    pString?: null | string;
    unitSelectOrderInSeries?: number;
    arcadeSmallSpriteIndex?: number;
    arcadeUnitNameSpriteIndex?: number;
    unk27?: number;
    unk112?: number;
    figurineSpriteIndex?: number;
    unk114?: number;
    unk124?: number;
    unk128?: number;
    catalogStorePilotCostume2TString?: null | string;
    catalogStorePilotCostume2String?: null | string;
    catalogStorePilotCostume3TString?: null | string;
    catalogStorePilotCostume3String?: null | string;
    unk156?: number;
    arcadeSelectionCostume1SpriteAssetHash?: number;
    arcadeSelectionCostume2SpriteAssetHash?: number;
    arcadeSelectionCostume3SpriteAssetHash?: number;
    loadingLeftCostume1SpriteAssetHash?: number;
    loadingLeftCostume2SpriteAssetHash?: number;
    loadingLeftCostume3SpriteAssetHash?: number;
    loadingRightCostume1SpriteAssetHash?: number;
    loadingRightCostume2SpriteAssetHash?: number;
    loadingRightCostume3SpriteAssetHash?: number;
    genericSelectionCostume1SpriteAssetHash?: number;
    genericSelectionCostume2SpriteAssetHash?: number;
    genericSelectionCostume3SpriteAssetHash?: number;
    loadingTargetUnitSpriteAssetHash?: number;
    loadingTargetPilotCostume1SpriteAssetHash?: number;
    loadingTargetPilotCostume2SpriteAssetHash?: number;
    loadingTargetPilotCostume3SpriteAssetHash?: number;
    inGameSortieAndAwakeningPilotCostume1SpriteAssetHash?: number;
    inGameSortieAndAwakeningPilotCostume2SpriteAssetHash?: number;
    inGameSortieAndAwakeningPilotCostume3SpriteAssetHash?: number;
    spriteFramesAssetHash?: number;
    resultSmallUnitSpriteAssetHash?: number;
    figurineSpriteAssetHash?: number;
    loadingTargetUnitSmallSpriteAssetHash?: number;
    catalogStorePilotCostume2SpriteAssetHash?: number;
    catalogStorePilotCostume3SpriteAssetHash?: number;
};

export type PlayableSeriesDetailsDto = null | {
    unk2?: number;
    unk3?: number;
    unk4?: number;
    selectOrder?: number;
    logoSpriteIndex?: number;
    logoSprite2Index?: number;
    unk11?: number;
    movieAssetHash?: null | number;
};

export type ProjectileDto = {
    hash?: number;
    projectileType?: number;
    hitboxHash?: null | number;
    modelHash?: number;
    skeletonIndex?: number;
    aimType?: number;
    translateY?: number;
    translateZ?: number;
    translateX?: number;
    rotateX?: number;
    rotateZ?: number;
    cosmeticHash?: number;
    unk44?: number;
    unk48?: number;
    unk52?: number;
    unk56?: number;
    ammoConsumption?: number;
    durationFrame?: number;
    maxTravelDistance?: number;
    initialSpeed?: number;
    acceleration?: number;
    accelerationStartFrame?: number;
    unk84?: number;
    maxSpeed?: number;
    reserved92?: number;
    reserved96?: number;
    reserved100?: number;
    reserved104?: number;
    reserved108?: number;
    reserved112?: number;
    reserved116?: number;
    horizontalGuidance?: number;
    horizontalGuidanceAngle?: number;
    verticalGuidance?: number;
    verticalGuidanceAngle?: number;
    reserved136?: number;
    reserved140?: number;
    reserved144?: number;
    reserved148?: number;
    reserved152?: number;
    reserved156?: number;
    reserved160?: number;
    reserved164?: number;
    reserved168?: number;
    reserved172?: number;
    size?: number;
    reserved180?: number;
    reserved184?: number;
    soundEffectHash?: number;
    reserved192?: number;
    reserved196?: number;
    chainedProjectileHash?: number;
    reserved204?: number;
    reserved208?: number;
    reserved212?: number;
    reserved216?: number;
    reserved220?: number;
    reserved224?: number;
    reserved228?: number;
    reserved232?: number;
    reserved236?: number;
    reserved240?: number;
    reserved244?: number;
    reserved248?: number;
    reserved252?: number;
    reserved256?: number;
    reserved260?: number;
    reserved264?: number;
    reserved268?: number;
    reserved272?: number;
    reserved276?: number;
    unitId?: null | number;
};

export type ResizePatchFileCommand = {
    ids?: null | Array<string>;
    versions?: null | Array<PatchFileVersion>;
    unitIds?: null | Array<number>;
    assetFileTypes?: null | Array<AssetFileType>;
};

export type SerializeTbl = {
    cumulativeFileInfoCount: number;
    fileMetadata: Array<PatchFileMetadataDto>;
    pathOrder?: null | Array<string>;
};

export type SeriesDto = {
    id?: number;
    playableSeries?: PlayableSeriesDetailsDto;
    slugName?: string;
    nameEnglish?: null | string;
    nameJapanese?: null | string;
    nameChinese?: null | string;
};

export type SeriesUnitsVm = {
    units?: Array<UnitSummaryVm>;
    id?: number;
    slugName?: string;
    nameEnglish?: null | string;
    nameJapanese?: null | string;
    nameChinese?: null | string;
};

export type SeriesVm = null | {
    id?: number;
    slugName?: string;
    nameEnglish?: null | string;
    nameJapanese?: null | string;
    nameChinese?: null | string;
};

export type StatDto = {
    id?: string;
    unitCost?: number;
    unitCost2?: number;
    maxHp?: number;
    downValueThreshold?: number;
    yorukeValueThreshold?: number;
    unk20?: number;
    unk24?: number;
    unk28?: number;
    maxBoost?: number;
    unk36?: number;
    unk40?: number;
    unk44?: number;
    gravityMultiplierAir?: number;
    gravityMultiplierLand?: number;
    unk56?: number;
    unk60?: number;
    unk64?: number;
    unk68?: number;
    unk72?: number;
    unk76?: number;
    unk80?: number;
    cameraZoomMultiplier?: number;
    unk88?: number;
    unk92?: number;
    unk96?: number;
    unk100?: number;
    unk104?: number;
    unk108?: number;
    sizeMultiplier?: number;
    unk116?: number;
    unk120?: number;
    unk124?: number;
    unk128?: number;
    unk132?: number;
    unk136?: number;
    unk140?: number;
    unk144?: number;
    unk148?: number;
    unk152?: number;
    unk156?: number;
    unk160?: number;
    unk164?: number;
    unk168?: number;
    unk172?: number;
    unk176?: number;
    unk180?: number;
    unk184?: number;
    redLockRangeMelee?: number;
    redLockRange?: number;
    unk196?: number;
    unk200?: number;
    unk204?: number;
    unk208?: number;
    boostReplenish?: number;
    unk216?: number;
    boostInitialConsumption?: number;
    boostFuwaInitialConsumption?: number;
    boostFlyConsumption?: number;
    boostGroundStepInitialConsumption?: number;
    boostGroundStepConsumption?: number;
    boostAirStepInitialConsumption?: number;
    boostAirStepConsumption?: number;
    boostBdInitialConsumption?: number;
    boostBdConsumption?: number;
    unk256?: number;
    unk260?: number;
    unk264?: number;
    unk268?: number;
    boostTransformInitialConsumption?: number;
    boostTransformConsumption?: number;
    boostNonVernierActionConsumption?: number;
    boostPostActionConsumption?: number;
    boostRainbowStepInitialConsumption?: number;
    unk292?: number;
    unk296?: number;
    unk300?: number;
    unk304?: number;
    unk308?: number;
    unk312?: number;
    unk316?: number;
    unk320?: number;
    unk324?: number;
    unk328?: number;
    unk332?: number;
    assaultBurstRedLockMelee?: number;
    assaultBurstRedLock?: number;
    assaultBurstDamageDealtMultiplier?: number;
    assaultBurstDamageTakenMultiplier?: number;
    assaultBurstMobilityMultiplier?: number;
    assaultBurstDownValueDealtMultiplier?: number;
    assaultBurstBoostConsumptionMultiplier?: number;
    unk364?: number;
    unk368?: number;
    assaultBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    assaultBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk380?: number;
    unk384?: number;
    unk388?: number;
    unk392?: number;
    unk396?: number;
    blastBurstRedLockMelee?: number;
    blastBurstRedLock?: number;
    blastBurstDamageDealtMultiplier?: number;
    blastBurstDamageTakenMultiplier?: number;
    blastBurstMobilityMultiplier?: number;
    blastBurstDownValueDealtMultiplier?: number;
    blastBurstBoostConsumptionMultiplier?: number;
    unk428?: number;
    unk432?: number;
    blastBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    blastBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk444?: number;
    unk448?: number;
    unk452?: number;
    unk456?: number;
    unk460?: number;
    thirdBurstRedLockMelee?: number;
    thirdBurstRedLock?: number;
    thirdBurstDamageDealtMultiplier?: number;
    thirdBurstDamageTakenMultiplier?: number;
    thirdBurstMobilityMultiplier?: number;
    thirdBurstDownValueDealtMultiplier?: number;
    thirdBurstBoostConsumptionMultiplier?: number;
    unk492?: number;
    unk496?: number;
    thirdBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    thirdBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk508?: number;
    unk512?: number;
    unk516?: number;
    unk520?: number;
    unk524?: number;
    fourthBurstRedLockMelee?: number;
    fourthBurstRedLock?: number;
    fourthBurstDamageDealtMultiplier?: number;
    fourthBurstDamageTakenMultiplier?: number;
    fourthBurstMobilityMultiplier?: number;
    fourthBurstDownValueDealtMultiplier?: number;
    fourthBurstBoostConsumptionMultiplier?: number;
    unk572?: number;
    unk576?: number;
    fourthBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    fourthBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk588?: number;
    unk592?: number;
    unk596?: number;
    unk600?: number;
    unk604?: number;
    unk608?: number;
    order?: number;
    unitId?: null | number;
};

export type TblDto = {
    cumulativeFileInfoCount: number;
    fileMetadata: Array<PatchFileMetadataDto>;
    pathOrder?: null | Array<string>;
};

export type TblFileInfoMetadata = null | {
    cumulativeIndex: number;
    patchNumber: number;
    size1: number;
    size2: number;
    size3: number;
    size4: number;
    hashName: number;
};

export type TblVm = {
    id: string;
    cumulativeAssetIndex?: number;
};

export type UnitAmmoSlotDto = {
    id?: null | string;
    slotOrder?: number;
    ammoHash?: number;
};

export type UnitProjectileDto = {
    unitId?: number;
    projectiles?: Array<ProjectileDto>;
};

export type UnitStatDto = {
    id?: null | string;
    unitId?: number;
    ammoSlots?: Array<UnitAmmoSlotDto>;
};

export type UnitSummaryVm = {
    unitId?: number;
    slugName?: null | string;
    nameEnglish?: null | string;
    nameJapanese?: null | string;
    nameChinese?: null | string;
    seriesId?: null | number;
    series?: SeriesVm;
};

export type UnpackFhmAssetCommand = {
    assetFileHashes?: null | Array<number>;
    assetFileTypes?: null | Array<AssetFileType>;
    unitIds?: null | Array<number>;
    patchFileVersions?: null | Array<PatchFileVersion>;
    replaceWorking?: boolean;
};

export type UnpackPsarcByPatchFilesCommand = {
    patchFileVersions?: null | Array<PatchFileVersion>;
};

export type UnpackPsarcByPathCommand = {
    sourceFilePath: string;
    outputDirectoryPath: string;
};

export type UpdateAmmoCommand = {
    hash: number;
    ammoType?: number;
    maxAmmo?: number;
    initialAmmo?: number;
    timedDurationFrame?: number;
    unk16?: number;
    reloadType?: number;
    cooldownDurationFrame?: number;
    reloadDurationFrame?: number;
    assaultBurstReloadDurationFrame?: number;
    blastBurstReloadDurationFrame?: number;
    unk40?: number;
    unk44?: number;
    inactiveUnk48?: number;
    inactiveCooldownDurationFrame?: number;
    inactiveReloadDurationFrame?: number;
    inactiveAssaultBurstReloadDurationFrame?: number;
    inactiveBlastBurstReloadDurationFrame?: number;
    inactiveUnk68?: number;
    inactiveUnk72?: number;
    burstReplenish?: number;
    unk80?: number;
    unk84?: number;
    unk88?: number;
    chargeInput?: number;
    chargeDurationFrame?: number;
    assaultBurstChargeDurationFrame?: number;
    blastBurstChargeDurationFrame?: number;
    unk108?: number;
    unk112?: number;
    releaseChargeLingerDurationFrame?: number;
    maxChargeLevel?: number;
    unk124?: number;
    unk128?: number;
    order?: number;
    unitId?: null | number;
};

export type UpdateAssetFileByHashCommand = {
    hash: number;
    order?: number;
    fileType?: Array<AssetFileType>;
    unitIds?: Array<number>;
};

export type UpdateHitboxCommand = {
    hash: number;
    hitboxType?: number;
    damage?: number;
    unk8?: number;
    downValueThreshold?: number;
    yorukeValueThreshold?: number;
    unk20?: number;
    unk24?: number;
    damageCorrection?: number;
    specialEffect?: number;
    hitEffect?: number;
    flyDirection1?: number;
    flyDirection2?: number;
    flyDirection3?: number;
    enemyCameraShakeMultiplier?: number;
    playerCameraShakeMultiplier?: number;
    unk56?: number;
    knockUpAngle?: number;
    knockUpRange?: number;
    unk68?: number;
    multipleHitIntervalFrame?: number;
    multipleHitCount?: number;
    enemyStunDuration?: number;
    playerStunDuration?: number;
    hitVisualEffect?: number;
    hitVisualEffectSizeMultiplier?: number;
    hitSoundEffectHash?: number;
    unk100?: number;
    friendlyDamageFlag?: number;
    unk108?: number;
    hitboxGroupHash?: number;
};

export type UpdateHitboxGroupCommand = {
    hash: number;
    unitIds?: null | Array<number>;
};

export type UpdatePatchFileByIdCommand = {
    id: string;
    tblId: PatchFileVersion;
    pathInfo?: PathInfoDto;
    fileInfo?: FileInfoDto;
    assetFileHash?: null | number;
};

export type UpdateProjectileByIdCommand = {
    hash: number;
    projectileType?: number;
    hitboxHash?: null | number;
    modelHash?: number;
    skeletonIndex?: number;
    aimType?: number;
    translateY?: number;
    translateZ?: number;
    translateX?: number;
    rotateX?: number;
    rotateZ?: number;
    cosmeticHash?: number;
    unk44?: number;
    unk48?: number;
    unk52?: number;
    unk56?: number;
    ammoConsumption?: number;
    durationFrame?: number;
    maxTravelDistance?: number;
    initialSpeed?: number;
    acceleration?: number;
    accelerationStartFrame?: number;
    unk84?: number;
    maxSpeed?: number;
    reserved92?: number;
    reserved96?: number;
    reserved100?: number;
    reserved104?: number;
    reserved108?: number;
    reserved112?: number;
    reserved116?: number;
    horizontalGuidance?: number;
    horizontalGuidanceAngle?: number;
    verticalGuidance?: number;
    verticalGuidanceAngle?: number;
    reserved136?: number;
    reserved140?: number;
    reserved144?: number;
    reserved148?: number;
    reserved152?: number;
    reserved156?: number;
    reserved160?: number;
    reserved164?: number;
    reserved168?: number;
    reserved172?: number;
    size?: number;
    reserved180?: number;
    reserved184?: number;
    soundEffectHash?: number;
    reserved192?: number;
    reserved196?: number;
    chainedProjectileHash?: number;
    reserved204?: number;
    reserved208?: number;
    reserved212?: number;
    reserved216?: number;
    reserved220?: number;
    reserved224?: number;
    reserved228?: number;
    reserved232?: number;
    reserved236?: number;
    reserved240?: number;
    reserved244?: number;
    reserved248?: number;
    reserved252?: number;
    reserved256?: number;
    reserved260?: number;
    reserved264?: number;
    reserved268?: number;
    reserved272?: number;
    reserved276?: number;
    unitId?: null | number;
};

export type UpdateStatCommand = {
    id: string;
    unitCost?: number;
    unitCost2?: number;
    maxHp?: number;
    downValueThreshold?: number;
    yorukeValueThreshold?: number;
    unk20?: number;
    unk24?: number;
    unk28?: number;
    maxBoost?: number;
    unk36?: number;
    unk40?: number;
    unk44?: number;
    gravityMultiplierAir?: number;
    gravityMultiplierLand?: number;
    unk56?: number;
    unk60?: number;
    unk64?: number;
    unk68?: number;
    unk72?: number;
    unk76?: number;
    unk80?: number;
    cameraZoomMultiplier?: number;
    unk88?: number;
    unk92?: number;
    unk96?: number;
    unk100?: number;
    unk104?: number;
    unk108?: number;
    sizeMultiplier?: number;
    unk116?: number;
    unk120?: number;
    unk124?: number;
    unk128?: number;
    unk132?: number;
    unk136?: number;
    unk140?: number;
    unk144?: number;
    unk148?: number;
    unk152?: number;
    unk156?: number;
    unk160?: number;
    unk164?: number;
    unk168?: number;
    unk172?: number;
    unk176?: number;
    unk180?: number;
    unk184?: number;
    redLockRangeMelee?: number;
    redLockRange?: number;
    unk196?: number;
    unk200?: number;
    unk204?: number;
    unk208?: number;
    boostReplenish?: number;
    unk216?: number;
    boostInitialConsumption?: number;
    boostFuwaInitialConsumption?: number;
    boostFlyConsumption?: number;
    boostGroundStepInitialConsumption?: number;
    boostGroundStepConsumption?: number;
    boostAirStepInitialConsumption?: number;
    boostAirStepConsumption?: number;
    boostBdInitialConsumption?: number;
    boostBdConsumption?: number;
    unk256?: number;
    unk260?: number;
    unk264?: number;
    unk268?: number;
    boostTransformInitialConsumption?: number;
    boostTransformConsumption?: number;
    boostNonVernierActionConsumption?: number;
    boostPostActionConsumption?: number;
    boostRainbowStepInitialConsumption?: number;
    unk292?: number;
    unk296?: number;
    unk300?: number;
    unk304?: number;
    unk308?: number;
    unk312?: number;
    unk316?: number;
    unk320?: number;
    unk324?: number;
    unk328?: number;
    unk332?: number;
    assaultBurstRedLockMelee?: number;
    assaultBurstRedLock?: number;
    assaultBurstDamageDealtMultiplier?: number;
    assaultBurstDamageTakenMultiplier?: number;
    assaultBurstMobilityMultiplier?: number;
    assaultBurstDownValueDealtMultiplier?: number;
    assaultBurstBoostConsumptionMultiplier?: number;
    unk364?: number;
    unk368?: number;
    assaultBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    assaultBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk380?: number;
    unk384?: number;
    unk388?: number;
    unk392?: number;
    unk396?: number;
    blastBurstRedLockMelee?: number;
    blastBurstRedLock?: number;
    blastBurstDamageDealtMultiplier?: number;
    blastBurstDamageTakenMultiplier?: number;
    blastBurstMobilityMultiplier?: number;
    blastBurstDownValueDealtMultiplier?: number;
    blastBurstBoostConsumptionMultiplier?: number;
    unk428?: number;
    unk432?: number;
    blastBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    blastBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk444?: number;
    unk448?: number;
    unk452?: number;
    unk456?: number;
    unk460?: number;
    thirdBurstRedLockMelee?: number;
    thirdBurstRedLock?: number;
    thirdBurstDamageDealtMultiplier?: number;
    thirdBurstDamageTakenMultiplier?: number;
    thirdBurstMobilityMultiplier?: number;
    thirdBurstDownValueDealtMultiplier?: number;
    thirdBurstBoostConsumptionMultiplier?: number;
    unk492?: number;
    unk496?: number;
    thirdBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    thirdBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk508?: number;
    unk512?: number;
    unk516?: number;
    unk520?: number;
    unk524?: number;
    fourthBurstRedLockMelee?: number;
    fourthBurstRedLock?: number;
    fourthBurstDamageDealtMultiplier?: number;
    fourthBurstDamageTakenMultiplier?: number;
    fourthBurstMobilityMultiplier?: number;
    fourthBurstDownValueDealtMultiplier?: number;
    fourthBurstBoostConsumptionMultiplier?: number;
    unk572?: number;
    unk576?: number;
    fourthBurstDamageDealtBurstGaugeIncreaseMultiplier?: number;
    fourthBurstDamageTakenBurstGaugeIncreaseMultiplier?: number;
    unk588?: number;
    unk592?: number;
    unk596?: number;
    unk600?: number;
    unk604?: number;
    unk608?: number;
    order?: number;
    unitId?: null | number;
};

export type UpdateUnitAmmoSlotCommand = {
    id: string;
    unitId: number;
    slotOrder?: null | number;
    ammoHash?: null | number;
};

export type UpdateUnitCommand = {
    unitId?: number;
    slugName?: null | string;
    nameEnglish?: null | string;
    nameJapanese?: null | string;
    nameChinese?: null | string;
    seriesId?: null | number;
    series?: SeriesVm;
};

export type UpsertConfigCommand = {
    key: string;
    value: string;
};

export type UpsertPlayableCharactersCommand = {
    unitId: number;
    unitIndex?: number;
    seriesId?: number;
    unk2?: number;
    fString?: null | string;
    fOutString?: null | string;
    pString?: null | string;
    unitSelectOrderInSeries?: number;
    arcadeSmallSpriteIndex?: number;
    arcadeUnitNameSpriteIndex?: number;
    unk27?: number;
    unk112?: number;
    figurineSpriteIndex?: number;
    unk114?: number;
    unk124?: number;
    unk128?: number;
    catalogStorePilotCostume2TString?: null | string;
    catalogStorePilotCostume2String?: null | string;
    catalogStorePilotCostume3TString?: null | string;
    catalogStorePilotCostume3String?: null | string;
    unk156?: number;
    arcadeSelectionCostume1SpriteAssetHash?: number;
    arcadeSelectionCostume2SpriteAssetHash?: number;
    arcadeSelectionCostume3SpriteAssetHash?: number;
    loadingLeftCostume1SpriteAssetHash?: number;
    loadingLeftCostume2SpriteAssetHash?: number;
    loadingLeftCostume3SpriteAssetHash?: number;
    loadingRightCostume1SpriteAssetHash?: number;
    loadingRightCostume2SpriteAssetHash?: number;
    loadingRightCostume3SpriteAssetHash?: number;
    genericSelectionCostume1SpriteAssetHash?: number;
    genericSelectionCostume2SpriteAssetHash?: number;
    genericSelectionCostume3SpriteAssetHash?: number;
    loadingTargetUnitSpriteAssetHash?: number;
    loadingTargetPilotCostume1SpriteAssetHash?: number;
    loadingTargetPilotCostume2SpriteAssetHash?: number;
    loadingTargetPilotCostume3SpriteAssetHash?: number;
    inGameSortieAndAwakeningPilotCostume1SpriteAssetHash?: number;
    inGameSortieAndAwakeningPilotCostume2SpriteAssetHash?: number;
    inGameSortieAndAwakeningPilotCostume3SpriteAssetHash?: number;
    spriteFramesAssetHash?: number;
    resultSmallUnitSpriteAssetHash?: number;
    figurineSpriteAssetHash?: number;
    loadingTargetUnitSmallSpriteAssetHash?: number;
    catalogStorePilotCostume2SpriteAssetHash?: number;
    catalogStorePilotCostume3SpriteAssetHash?: number;
};

export type GetApiAmmoData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        Hash?: Array<number>;
        UnitIds?: Array<number>;
        Search?: string;
        ListAll?: boolean;
    };
    url: '/api/ammo';
};

export type GetApiAmmoResponses = {
    /**
     * OK
     */
    200: PaginatedListOfAmmoDto;
};

export type GetApiAmmoResponse = GetApiAmmoResponses[keyof GetApiAmmoResponses];

export type PostApiAmmoData = {
    body: CreateAmmoCommand;
    path?: never;
    query?: never;
    url: '/api/ammo';
};

export type PostApiAmmoResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiAmmoByHashData = {
    body?: never;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/ammo/{hash}';
};

export type DeleteApiAmmoByHashResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiAmmoByHashData = {
    body?: never;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/ammo/{hash}';
};

export type GetApiAmmoByHashResponses = {
    /**
     * OK
     */
    200: AmmoDto;
};

export type GetApiAmmoByHashResponse = GetApiAmmoByHashResponses[keyof GetApiAmmoByHashResponses];

export type PostApiAmmoByHashData = {
    body: UpdateAmmoCommand;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/ammo/{hash}';
};

export type PostApiAmmoByHashResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiAmmoImportData = {
    body: {
        formFile: IFormFile;
    };
    path?: never;
    query?: never;
    url: '/api/ammo/import';
};

export type PostApiAmmoImportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiAmmoExportData = {
    body: ExportAmmoCommand;
    path?: never;
    query?: never;
    url: '/api/ammo/export';
};

export type PostApiAmmoExportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiAmmoExportPathData = {
    body: ExportAmmoByPathCommand;
    path?: never;
    query?: never;
    url: '/api/ammo/export/path';
};

export type PostApiAmmoExportPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiConfigsData = {
    body?: never;
    path?: never;
    query: {
        Keys: Array<string>;
    };
    url: '/api/configs';
};

export type GetApiConfigsResponses = {
    /**
     * OK
     */
    200: Array<ConfigDto>;
};

export type GetApiConfigsResponse = GetApiConfigsResponses[keyof GetApiConfigsResponses];

export type PostApiConfigsData = {
    body: UpsertConfigCommand;
    path?: never;
    query?: never;
    url: '/api/configs';
};

export type PostApiConfigsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiConfigsByKeyData = {
    body?: never;
    path: {
        key: string;
    };
    query?: never;
    url: '/api/configs/{key}';
};

export type DeleteApiConfigsByKeyResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiConfigsByKeyData = {
    body?: never;
    path: {
        key: string;
    };
    query?: never;
    url: '/api/configs/{key}';
};

export type GetApiConfigsByKeyResponses = {
    /**
     * OK
     */
    200: string;
};

export type GetApiConfigsByKeyResponse = GetApiConfigsByKeyResponses[keyof GetApiConfigsByKeyResponses];

export type PostApiDebugData = {
    body: DebugCommand;
    path?: never;
    query?: never;
    url: '/api/debug';
};

export type PostApiDebugResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiFhmPackPathData = {
    body?: never;
    path?: never;
    query: {
        SourcePath: string;
        DestinationPath: string;
        FileName?: string;
    };
    url: '/api/fhm/pack-path';
};

export type GetApiFhmPackPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiFhmUnpackPathData = {
    body?: never;
    path?: never;
    query: {
        SourceFilePath: string;
        OutputDirectoryPath: string;
        MultipleFiles?: boolean;
    };
    url: '/api/fhm/unpack-path';
};

export type GetApiFhmUnpackPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiFhmPackData = {
    body: {
        file: IFormFile;
    };
    path?: never;
    query?: never;
    url: '/api/fhm/pack';
};

export type PostApiFhmPackResponses = {
    /**
     * OK
     */
    200: FileContentHttpResult;
};

export type PostApiFhmPackResponse = PostApiFhmPackResponses[keyof PostApiFhmPackResponses];

export type PostApiFhmUnpackData = {
    body: {
        file: IFormFile;
    };
    path?: never;
    query?: {
        compressionFormat?: CompressionFormats;
    };
    url: '/api/fhm/unpack';
};

export type PostApiFhmUnpackResponses = {
    /**
     * OK
     */
    200: FileContentHttpResult;
};

export type PostApiFhmUnpackResponse = PostApiFhmUnpackResponses[keyof PostApiFhmUnpackResponses];

export type PostApiFhmPackAssetData = {
    body: PackFhmAssetCommand;
    path?: never;
    query?: never;
    url: '/api/fhm/pack/asset';
};

export type PostApiFhmPackAssetResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiFhmUnpackAssetData = {
    body: UnpackFhmAssetCommand;
    path?: never;
    query?: never;
    url: '/api/fhm/unpack/asset';
};

export type PostApiFhmUnpackAssetResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiPsarcPackPathData = {
    body: PackPsarcByPathCommand;
    path?: never;
    query?: never;
    url: '/api/psarc/pack/path';
};

export type PostApiPsarcPackPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiPsarcUnpackPathData = {
    body: UnpackPsarcByPathCommand;
    path?: never;
    query?: never;
    url: '/api/psarc/unpack/path';
};

export type PostApiPsarcUnpackPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiPsarcPackPatchFilesData = {
    body: PackPsarcByPatchFilesCommand;
    path?: never;
    query?: never;
    url: '/api/psarc/pack/patch-files';
};

export type PostApiPsarcPackPatchFilesResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiPsarcUnpackPatchFilesData = {
    body: UnpackPsarcByPatchFilesCommand;
    path?: never;
    query?: never;
    url: '/api/psarc/unpack/patch-files';
};

export type PostApiPsarcUnpackPatchFilesResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiScexDecompiledByUnitIdData = {
    body?: never;
    path: {
        unitId: number;
    };
    query?: never;
    url: '/api/scex/decompiled/{unitId}';
};

export type GetApiScexDecompiledByUnitIdResponses = {
    /**
     * OK
     */
    200: string;
};

export type GetApiScexDecompiledByUnitIdResponse = GetApiScexDecompiledByUnitIdResponses[keyof GetApiScexDecompiledByUnitIdResponses];

export type PostApiScexCompilePathData = {
    body: CompileScexByPathCommand;
    path?: never;
    query?: never;
    url: '/api/scex/compile/path';
};

export type PostApiScexCompilePathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiScexDecompilePathData = {
    body: DecompileScexByPathCommand;
    path?: never;
    query?: never;
    url: '/api/scex/decompile/path';
};

export type PostApiScexDecompilePathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiScexHotReloadPathData = {
    body: HotReloadScex;
    path?: never;
    query?: never;
    url: '/api/scex/hot-reload/path';
};

export type PostApiScexHotReloadPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiScexCompileUnitsData = {
    body: CompileScexByUnitsCommand;
    path?: never;
    query?: never;
    url: '/api/scex/compile/units';
};

export type PostApiScexCompileUnitsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiScexDecompileUnitsData = {
    body: DecompileScexByUnitsCommand;
    path?: never;
    query?: never;
    url: '/api/scex/decompile/units';
};

export type PostApiScexDecompileUnitsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUnitsData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        ListAll?: boolean;
        Search?: string;
        UnitIds?: Array<number>;
        Languages?: Array<LanguageSettings>;
        Includes?: Array<GetUnitSummaryQueryIncludes>;
    };
    url: '/api/units';
};

export type GetApiUnitsResponses = {
    /**
     * OK
     */
    200: PaginatedListOfUnitSummaryVm;
};

export type GetApiUnitsResponse = GetApiUnitsResponses[keyof GetApiUnitsResponses];

export type PostApiUnitsData = {
    body: CreateUnitCommand;
    path?: never;
    query?: never;
    url: '/api/units';
};

export type PostApiUnitsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUnitsByUnitIdData = {
    body?: never;
    path: {
        unitId: number;
    };
    query?: never;
    url: '/api/units/{unitId}';
};

export type GetApiUnitsByUnitIdResponses = {
    /**
     * OK
     */
    200: UnitSummaryVm;
};

export type GetApiUnitsByUnitIdResponse = GetApiUnitsByUnitIdResponses[keyof GetApiUnitsByUnitIdResponses];

export type PostApiUnitsByUnitIdData = {
    body: UpdateUnitCommand;
    path: {
        unitId: number;
    };
    query?: never;
    url: '/api/units/{unitId}';
};

export type PostApiUnitsByUnitIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUnitsByUnitIdPlayableCharactersData = {
    body?: never;
    path: {
        unitId: number;
    };
    query?: never;
    url: '/api/units/{unitId}/playable-characters';
};

export type GetApiUnitsByUnitIdPlayableCharactersResponses = {
    /**
     * OK
     */
    200: PlayableCharacterDto;
};

export type GetApiUnitsByUnitIdPlayableCharactersResponse = GetApiUnitsByUnitIdPlayableCharactersResponses[keyof GetApiUnitsByUnitIdPlayableCharactersResponses];

export type PostApiUnitsByUnitIdPlayableCharactersData = {
    body: UpsertPlayableCharactersCommand;
    path: {
        unitId: number;
    };
    query?: never;
    url: '/api/units/{unitId}/playable-characters';
};

export type PostApiUnitsByUnitIdPlayableCharactersResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUnitsBulkData = {
    body: BulkCreateUnitCommand;
    path?: never;
    query?: never;
    url: '/api/units/bulk';
};

export type PostApiUnitsBulkResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUnitsPlayableCharactersImportData = {
    body: {
        file: IFormFile;
    };
    path?: never;
    query?: never;
    url: '/api/units/playable-characters/import';
};

export type PostApiUnitsPlayableCharactersImportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUnitsPlayableCharactersExportData = {
    body: ExportPlayableCharactersCommand;
    path?: never;
    query?: never;
    url: '/api/units/playable-characters/export';
};

export type PostApiUnitsPlayableCharactersExportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiPatchFilesData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        Search?: string;
        Versions?: Array<PatchFileVersion>;
        UnitIds?: Array<number>;
    };
    url: '/api/patch-files';
};

export type GetApiPatchFilesResponses = {
    /**
     * OK
     */
    200: PaginatedListOfPatchFileVm;
};

export type GetApiPatchFilesResponse = GetApiPatchFilesResponses[keyof GetApiPatchFilesResponses];

export type PostApiPatchFilesData = {
    body: CreatePatchFileCommand;
    path?: never;
    query?: never;
    url: '/api/patch-files';
};

export type PostApiPatchFilesResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiPatchFilesSummaryData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        Versions?: Array<PatchFileVersion>;
        UnitIds?: Array<number>;
        AssetFileHashes?: Array<number>;
        AssetFileTypes?: Array<AssetFileType>;
    };
    url: '/api/patch-files/summary';
};

export type GetApiPatchFilesSummaryResponses = {
    /**
     * OK
     */
    200: PaginatedListOfPatchFileSummaryVm;
};

export type GetApiPatchFilesSummaryResponse = GetApiPatchFilesSummaryResponses[keyof GetApiPatchFilesSummaryResponses];

export type DeleteApiPatchFilesByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/patch-files/{id}';
};

export type DeleteApiPatchFilesByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiPatchFilesByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/patch-files/{id}';
};

export type GetApiPatchFilesByIdResponses = {
    /**
     * OK
     */
    200: PatchFileVm;
};

export type GetApiPatchFilesByIdResponse = GetApiPatchFilesByIdResponses[keyof GetApiPatchFilesByIdResponses];

export type PostApiPatchFilesByIdData = {
    body: UpdatePatchFileByIdCommand;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/patch-files/{id}';
};

export type PostApiPatchFilesByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiPatchFilesResizeData = {
    body: ResizePatchFileCommand;
    path?: never;
    query?: never;
    url: '/api/patch-files/resize';
};

export type PostApiPatchFilesResizeResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiTblDeserializePathData = {
    body?: never;
    path?: never;
    query: {
        filePath: string;
    };
    url: '/api/tbl/deserialize-path';
};

export type GetApiTblDeserializePathResponses = {
    /**
     * OK
     */
    200: TblDto;
};

export type GetApiTblDeserializePathResponse = GetApiTblDeserializePathResponses[keyof GetApiTblDeserializePathResponses];

export type PostApiTblDeserializeData = {
    body: {
        file: IFormFile;
    };
    path?: never;
    query?: never;
    url: '/api/tbl/deserialize';
};

export type PostApiTblDeserializeResponses = {
    /**
     * OK
     */
    200: TblDto;
};

export type PostApiTblDeserializeResponse = PostApiTblDeserializeResponses[keyof PostApiTblDeserializeResponses];

export type GetApiTblSerializePathData = {
    body?: never;
    path?: never;
    query: {
        filePath: string;
    };
    url: '/api/tbl/serialize-path';
};

export type GetApiTblSerializePathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiTblSerializeData = {
    body: SerializeTbl;
    path?: never;
    query?: never;
    url: '/api/tbl/serialize';
};

export type PostApiTblSerializeResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiTblByIdData = {
    body?: never;
    path: {
        id: PatchFileVersion;
    };
    query?: never;
    url: '/api/tbl/{id}';
};

export type GetApiTblByIdResponses = {
    /**
     * OK
     */
    200: TblVm;
};

export type GetApiTblByIdResponse = GetApiTblByIdResponses[keyof GetApiTblByIdResponses];

export type PostApiTblImportData = {
    body: {
        files: IFormFileCollection;
    };
    path?: never;
    query?: never;
    url: '/api/tbl/import';
};

export type PostApiTblImportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiTblExportData = {
    body: ExportTblCommand;
    path?: never;
    query?: never;
    url: '/api/tbl/export';
};

export type PostApiTblExportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiStatsData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        Ids?: Array<string>;
        UnitIds?: Array<number>;
    };
    url: '/api/stats';
};

export type GetApiStatsResponses = {
    /**
     * OK
     */
    200: PaginatedListOfStatDto;
};

export type GetApiStatsResponse = GetApiStatsResponses[keyof GetApiStatsResponses];

export type PostApiStatsData = {
    body: CreateStatCommand;
    path?: never;
    query?: never;
    url: '/api/stats';
};

export type PostApiStatsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiStatsByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/stats/{id}';
};

export type DeleteApiStatsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiStatsByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/stats/{id}';
};

export type GetApiStatsByIdResponses = {
    /**
     * OK
     */
    200: StatDto;
};

export type GetApiStatsByIdResponse = GetApiStatsByIdResponses[keyof GetApiStatsByIdResponses];

export type PostApiStatsByIdData = {
    body: UpdateStatCommand;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/stats/{id}';
};

export type PostApiStatsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUnitStatsData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        UnitIds?: Array<number>;
    };
    url: '/api/unit-stats';
};

export type GetApiUnitStatsResponses = {
    /**
     * OK
     */
    200: PaginatedListOfUnitStatDto;
};

export type GetApiUnitStatsResponse = GetApiUnitStatsResponses[keyof GetApiUnitStatsResponses];

export type GetApiUnitStatsByUnitIdData = {
    body?: never;
    path: {
        unitId: number;
    };
    query?: never;
    url: '/api/unit-stats/{unitId}';
};

export type GetApiUnitStatsByUnitIdResponses = {
    /**
     * OK
     */
    200: UnitStatDto;
};

export type GetApiUnitStatsByUnitIdResponse = GetApiUnitStatsByUnitIdResponses[keyof GetApiUnitStatsByUnitIdResponses];

export type PostApiUnitStatsImportData = {
    body: {
        files: IFormFileCollection;
    };
    path?: never;
    query?: never;
    url: '/api/unit-stats/import';
};

export type PostApiUnitStatsImportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUnitStatsExportData = {
    body: ExportUnitStatCommand;
    path?: never;
    query?: never;
    url: '/api/unit-stats/export';
};

export type PostApiUnitStatsExportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUnitStatsExportPathData = {
    body: ExportUnitStatByPathCommand;
    path?: never;
    query?: never;
    url: '/api/unit-stats/export/path';
};

export type PostApiUnitStatsExportPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUnitStatsAmmoSlotByUnitIdData = {
    body?: never;
    path: {
        unitId: number;
    };
    query?: never;
    url: '/api/unit-stats/ammo-slot/{unitId}';
};

export type GetApiUnitStatsAmmoSlotByUnitIdResponses = {
    /**
     * OK
     */
    200: Array<UnitAmmoSlotDto>;
};

export type GetApiUnitStatsAmmoSlotByUnitIdResponse = GetApiUnitStatsAmmoSlotByUnitIdResponses[keyof GetApiUnitStatsAmmoSlotByUnitIdResponses];

export type PostApiUnitStatsAmmoSlotData = {
    body: CreateUnitAmmoSlotCommand;
    path?: never;
    query?: never;
    url: '/api/unit-stats/ammo-slot';
};

export type PostApiUnitStatsAmmoSlotResponses = {
    /**
     * OK
     */
    200: string;
};

export type PostApiUnitStatsAmmoSlotResponse = PostApiUnitStatsAmmoSlotResponses[keyof PostApiUnitStatsAmmoSlotResponses];

export type DeleteApiUnitStatsAmmoSlotByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/unit-stats/ammo-slot/{id}';
};

export type DeleteApiUnitStatsAmmoSlotByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUnitStatsAmmoSlotByIdData = {
    body: UpdateUnitAmmoSlotCommand;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/unit-stats/ammo-slot/{id}';
};

export type PostApiUnitStatsAmmoSlotByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiSeriesData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        Search?: Array<string>;
        ListAll?: boolean;
    };
    url: '/api/series';
};

export type GetApiSeriesResponses = {
    /**
     * OK
     */
    200: PaginatedListOfSeriesDto;
};

export type GetApiSeriesResponse = GetApiSeriesResponses[keyof GetApiSeriesResponses];

export type PostApiSeriesData = {
    body: CreateSeriesCommand;
    path?: never;
    query?: never;
    url: '/api/series';
};

export type PostApiSeriesResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiSeriesUnitsData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        UnitIds?: Array<number>;
        ListAll?: boolean;
    };
    url: '/api/series/units';
};

export type GetApiSeriesUnitsResponses = {
    /**
     * OK
     */
    200: PaginatedListOfSeriesUnitsVm;
};

export type GetApiSeriesUnitsResponse = GetApiSeriesUnitsResponses[keyof GetApiSeriesUnitsResponses];

export type PostApiSeriesImportData = {
    body: {
        file: IFormFile;
    };
    path?: never;
    query?: never;
    url: '/api/series/import';
};

export type PostApiSeriesImportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiSeriesExportData = {
    body: ExportPlayableSeriesCommand;
    path?: never;
    query?: never;
    url: '/api/series/export';
};

export type PostApiSeriesExportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiProjectilesData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        Hashes?: Array<number>;
        UnitIds?: Array<number>;
        Search?: string;
    };
    url: '/api/projectiles';
};

export type GetApiProjectilesResponses = {
    /**
     * OK
     */
    200: PaginatedListOfProjectileDto;
};

export type GetApiProjectilesResponse = GetApiProjectilesResponses[keyof GetApiProjectilesResponses];

export type PostApiProjectilesData = {
    body: CreateProjectileCommand;
    path?: never;
    query?: never;
    url: '/api/projectiles';
};

export type PostApiProjectilesResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiProjectilesByHashData = {
    body?: never;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/projectiles/{hash}';
};

export type DeleteApiProjectilesByHashResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiProjectilesByHashData = {
    body?: never;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/projectiles/{hash}';
};

export type GetApiProjectilesByHashResponses = {
    /**
     * OK
     */
    200: ProjectileDto;
};

export type GetApiProjectilesByHashResponse = GetApiProjectilesByHashResponses[keyof GetApiProjectilesByHashResponses];

export type PostApiProjectilesByHashData = {
    body: UpdateProjectileByIdCommand;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/projectiles/{hash}';
};

export type PostApiProjectilesByHashResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUnitProjectilesData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        UnitIds?: Array<number>;
        Search?: string;
    };
    url: '/api/unit-projectiles';
};

export type GetApiUnitProjectilesResponses = {
    /**
     * OK
     */
    200: PaginatedListOfUnitProjectileDto;
};

export type GetApiUnitProjectilesResponse = GetApiUnitProjectilesResponses[keyof GetApiUnitProjectilesResponses];

export type GetApiUnitProjectilesByUnitIdData = {
    body?: never;
    path: {
        unitId: number;
    };
    query?: never;
    url: '/api/unit-projectiles/{unitId}';
};

export type GetApiUnitProjectilesByUnitIdResponses = {
    /**
     * OK
     */
    200: UnitProjectileDto;
};

export type GetApiUnitProjectilesByUnitIdResponse = GetApiUnitProjectilesByUnitIdResponses[keyof GetApiUnitProjectilesByUnitIdResponses];

export type PostApiUnitProjectilesImportData = {
    body: {
        files: IFormFileCollection;
    };
    path?: never;
    query?: never;
    url: '/api/unit-projectiles/import';
};

export type PostApiUnitProjectilesImportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUnitProjectilesImportPathData = {
    body?: never;
    path?: never;
    query: {
        directoryPath: string;
    };
    url: '/api/unit-projectiles/import/path';
};

export type PostApiUnitProjectilesImportPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUnitProjectilesExportData = {
    body: ExportUnitProjectileCommand;
    path?: never;
    query?: never;
    url: '/api/unit-projectiles/export';
};

export type PostApiUnitProjectilesExportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUnitProjectilesExportPathData = {
    body: ExportUnitProjectileByPathCommand;
    path?: never;
    query?: never;
    url: '/api/unit-projectiles/export/path';
};

export type PostApiUnitProjectilesExportPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiHitboxesData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        Hashes?: Array<number>;
        UnitIds?: Array<number>;
        Search?: string;
    };
    url: '/api/hitboxes';
};

export type GetApiHitboxesResponses = {
    /**
     * OK
     */
    200: PaginatedListOfHitboxDto;
};

export type GetApiHitboxesResponse = GetApiHitboxesResponses[keyof GetApiHitboxesResponses];

export type PostApiHitboxesData = {
    body: CreateHitboxCommand;
    path?: never;
    query?: never;
    url: '/api/hitboxes';
};

export type PostApiHitboxesResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiHitboxesByHashData = {
    body?: never;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/hitboxes/{hash}';
};

export type DeleteApiHitboxesByHashResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiHitboxesByHashData = {
    body?: never;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/hitboxes/{hash}';
};

export type GetApiHitboxesByHashResponses = {
    /**
     * OK
     */
    200: HitboxDto;
};

export type GetApiHitboxesByHashResponse = GetApiHitboxesByHashResponses[keyof GetApiHitboxesByHashResponses];

export type PostApiHitboxesByHashData = {
    body: UpdateHitboxCommand;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/hitboxes/{hash}';
};

export type PostApiHitboxesByHashResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiHitboxGroupsData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        Hashes?: Array<number>;
        UnitIds?: Array<number>;
    };
    url: '/api/hitbox-groups';
};

export type GetApiHitboxGroupsResponses = {
    /**
     * OK
     */
    200: PaginatedListOfHitboxGroupDto;
};

export type GetApiHitboxGroupsResponse = GetApiHitboxGroupsResponses[keyof GetApiHitboxGroupsResponses];

export type PostApiHitboxGroupsData = {
    body: CreateHitboxGroupCommand;
    path?: never;
    query?: never;
    url: '/api/hitbox-groups';
};

export type PostApiHitboxGroupsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiHitboxGroupsHashByHashData = {
    body?: never;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/hitbox-groups/hash/{hash}';
};

export type GetApiHitboxGroupsHashByHashResponses = {
    /**
     * OK
     */
    200: HitboxGroupDto;
};

export type GetApiHitboxGroupsHashByHashResponse = GetApiHitboxGroupsHashByHashResponses[keyof GetApiHitboxGroupsHashByHashResponses];

export type GetApiHitboxGroupsUnitIdByUnitIdData = {
    body?: never;
    path: {
        unitId: number;
    };
    query?: never;
    url: '/api/hitbox-groups/unitId/{unitId}';
};

export type GetApiHitboxGroupsUnitIdByUnitIdResponses = {
    /**
     * OK
     */
    200: HitboxGroupDto;
};

export type GetApiHitboxGroupsUnitIdByUnitIdResponse = GetApiHitboxGroupsUnitIdByUnitIdResponses[keyof GetApiHitboxGroupsUnitIdByUnitIdResponses];

export type PostApiHitboxGroupsByHashData = {
    body: UpdateHitboxGroupCommand;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/hitbox-groups/{hash}';
};

export type PostApiHitboxGroupsByHashResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiHitboxGroupsImportData = {
    body: {
        file: IFormFile;
    };
    path?: never;
    query?: {
        unitId?: number;
    };
    url: '/api/hitbox-groups/import';
};

export type PostApiHitboxGroupsImportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiHitboxGroupsImportPathData = {
    body?: never;
    path?: never;
    query: {
        directoryPath: string;
    };
    url: '/api/hitbox-groups/import/path';
};

export type PostApiHitboxGroupsImportPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiHitboxGroupsExportData = {
    body: ExportHitboxGroupCommand;
    path?: never;
    query?: never;
    url: '/api/hitbox-groups/export';
};

export type PostApiHitboxGroupsExportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiHitboxGroupsExportPathData = {
    body: ExportHitboxGroupByPathCommand;
    path?: never;
    query?: never;
    url: '/api/hitbox-groups/export/path';
};

export type PostApiHitboxGroupsExportPathResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiAssetsData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PerPage?: number;
        UnitIds?: Array<number>;
        AssetFileTypes?: Array<AssetFileType>;
        ListAll?: boolean;
    };
    url: '/api/assets';
};

export type GetApiAssetsResponses = {
    /**
     * OK
     */
    200: PaginatedListOfAssetFileVm;
};

export type GetApiAssetsResponse = GetApiAssetsResponses[keyof GetApiAssetsResponses];

export type PostApiAssetsData = {
    body: CreateAssetFileCommand;
    path?: never;
    query?: never;
    url: '/api/assets';
};

export type PostApiAssetsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiAssetsByHashData = {
    body?: never;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/assets/{hash}';
};

export type DeleteApiAssetsByHashResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiAssetsByHashData = {
    body?: never;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/assets/{hash}';
};

export type GetApiAssetsByHashResponses = {
    /**
     * OK
     */
    200: AssetFileVm;
};

export type GetApiAssetsByHashResponse = GetApiAssetsByHashResponses[keyof GetApiAssetsByHashResponses];

export type PostApiAssetsByHashData = {
    body: UpdateAssetFileByHashCommand;
    path: {
        hash: number;
    };
    query?: never;
    url: '/api/assets/{hash}';
};

export type PostApiAssetsByHashResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiAssetsImportData = {
    body: {
        files: IFormFileCollection;
    };
    path?: never;
    query?: never;
    url: '/api/assets/import';
};

export type PostApiAssetsImportResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: `${string}://src` | (string & {});
};